// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: quote/api.proto

#include "quote/api.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace longportapp {
namespace quote {
namespace v1 {
        template <typename>
PROTOBUF_CONSTEXPR SecurityRequest::SecurityRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityRequestDefaultTypeInternal() {}
  union {
    SecurityRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityRequestDefaultTypeInternal _SecurityRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR MultiSecurityRequest::MultiSecurityRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.symbol_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MultiSecurityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MultiSecurityRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MultiSecurityRequestDefaultTypeInternal() {}
  union {
    MultiSecurityRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MultiSecurityRequestDefaultTypeInternal _MultiSecurityRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityStaticInfoResponse::SecurityStaticInfoResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.secu_static_info_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityStaticInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityStaticInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityStaticInfoResponseDefaultTypeInternal() {}
  union {
    SecurityStaticInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityStaticInfoResponseDefaultTypeInternal _SecurityStaticInfoResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR StaticInfo::StaticInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.stock_derivatives_)*/ {},
      /* _impl_._stock_derivatives_cached_byte_size_ = */ {0},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.name_cn_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.name_en_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.name_hk_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.listing_date_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.exchange_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.currency_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.eps_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.eps_ttm_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.bps_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.dividend_yield_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.board_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.total_shares_)*/ ::int64_t{0},
      /*decltype(_impl_.circulating_shares_)*/ ::int64_t{0},
      /*decltype(_impl_.hk_shares_)*/ ::int64_t{0},
      /*decltype(_impl_.lot_size_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct StaticInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StaticInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StaticInfoDefaultTypeInternal() {}
  union {
    StaticInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StaticInfoDefaultTypeInternal _StaticInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityQuoteResponse::SecurityQuoteResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.secu_quote_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityQuoteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityQuoteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityQuoteResponseDefaultTypeInternal() {}
  union {
    SecurityQuoteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityQuoteResponseDefaultTypeInternal _SecurityQuoteResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityQuote::SecurityQuote(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.last_done_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.prev_close_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.open_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.high_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.low_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.turnover_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.pre_market_quote_)*/ nullptr,
      /*decltype(_impl_.post_market_quote_)*/ nullptr,
      /*decltype(_impl_.timestamp_)*/ ::int64_t{0},
      /*decltype(_impl_.volume_)*/ ::int64_t{0},
      /*decltype(_impl_.trade_status_)*/ 0,
    } {}
struct SecurityQuoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityQuoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityQuoteDefaultTypeInternal() {}
  union {
    SecurityQuote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityQuoteDefaultTypeInternal _SecurityQuote_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PrePostQuote::PrePostQuote(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.last_done_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.turnover_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.high_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.low_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.prev_close_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.timestamp_)*/ ::int64_t{0},
      /*decltype(_impl_.volume_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PrePostQuoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PrePostQuoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PrePostQuoteDefaultTypeInternal() {}
  union {
    PrePostQuote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PrePostQuoteDefaultTypeInternal _PrePostQuote_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR OptionQuoteResponse::OptionQuoteResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.secu_quote_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct OptionQuoteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptionQuoteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptionQuoteResponseDefaultTypeInternal() {}
  union {
    OptionQuoteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptionQuoteResponseDefaultTypeInternal _OptionQuoteResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR OptionQuote::OptionQuote(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.last_done_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.prev_close_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.open_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.high_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.low_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.turnover_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.option_extend_)*/ nullptr,
      /*decltype(_impl_.timestamp_)*/ ::int64_t{0},
      /*decltype(_impl_.volume_)*/ ::int64_t{0},
      /*decltype(_impl_.trade_status_)*/ 0,
    } {}
struct OptionQuoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptionQuoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptionQuoteDefaultTypeInternal() {}
  union {
    OptionQuote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptionQuoteDefaultTypeInternal _OptionQuote_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR OptionExtend::OptionExtend(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.implied_volatility_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.expiry_date_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.strike_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.contract_multiplier_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.contract_type_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.contract_size_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.direction_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.historical_volatility_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.underlying_symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.open_interest_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct OptionExtendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptionExtendDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptionExtendDefaultTypeInternal() {}
  union {
    OptionExtend _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptionExtendDefaultTypeInternal _OptionExtend_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WarrantQuoteResponse::WarrantQuoteResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.secu_quote_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WarrantQuoteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WarrantQuoteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WarrantQuoteResponseDefaultTypeInternal() {}
  union {
    WarrantQuoteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WarrantQuoteResponseDefaultTypeInternal _WarrantQuoteResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WarrantQuote::WarrantQuote(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.last_done_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.prev_close_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.open_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.high_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.low_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.turnover_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.warrant_extend_)*/ nullptr,
      /*decltype(_impl_.timestamp_)*/ ::int64_t{0},
      /*decltype(_impl_.volume_)*/ ::int64_t{0},
      /*decltype(_impl_.trade_status_)*/ 0,
    } {}
struct WarrantQuoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WarrantQuoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WarrantQuoteDefaultTypeInternal() {}
  union {
    WarrantQuote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WarrantQuoteDefaultTypeInternal _WarrantQuote_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WarrantExtend::WarrantExtend(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.implied_volatility_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.expiry_date_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.last_trade_date_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.outstanding_ratio_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.conversion_ratio_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.category_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.strike_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.upper_strike_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.lower_strike_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.call_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.underlying_symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.outstanding_qty_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WarrantExtendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WarrantExtendDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WarrantExtendDefaultTypeInternal() {}
  union {
    WarrantExtend _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WarrantExtendDefaultTypeInternal _WarrantExtend_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityDepthResponse::SecurityDepthResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.ask_)*/ {},
      /*decltype(_impl_.bid_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityDepthResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityDepthResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityDepthResponseDefaultTypeInternal() {}
  union {
    SecurityDepthResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityDepthResponseDefaultTypeInternal _SecurityDepthResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Depth::Depth(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.volume_)*/ ::int64_t{0},
      /*decltype(_impl_.order_num_)*/ ::int64_t{0},
      /*decltype(_impl_.position_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct DepthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DepthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DepthDefaultTypeInternal() {}
  union {
    Depth _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DepthDefaultTypeInternal _Depth_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityBrokersResponse::SecurityBrokersResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.ask_brokers_)*/ {},
      /*decltype(_impl_.bid_brokers_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityBrokersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityBrokersResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityBrokersResponseDefaultTypeInternal() {}
  union {
    SecurityBrokersResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityBrokersResponseDefaultTypeInternal _SecurityBrokersResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Brokers::Brokers(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.broker_ids_)*/ {},
      /* _impl_._broker_ids_cached_byte_size_ = */ {0},
      /*decltype(_impl_.position_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct BrokersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrokersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrokersDefaultTypeInternal() {}
  union {
    Brokers _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrokersDefaultTypeInternal _Brokers_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ParticipantBrokerIdsResponse::ParticipantBrokerIdsResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.participant_broker_numbers_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ParticipantBrokerIdsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParticipantBrokerIdsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParticipantBrokerIdsResponseDefaultTypeInternal() {}
  union {
    ParticipantBrokerIdsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParticipantBrokerIdsResponseDefaultTypeInternal _ParticipantBrokerIdsResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR ParticipantInfo::ParticipantInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.broker_ids_)*/ {},
      /* _impl_._broker_ids_cached_byte_size_ = */ {0},
      /*decltype(_impl_.participant_name_cn_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.participant_name_en_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.participant_name_hk_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ParticipantInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParticipantInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParticipantInfoDefaultTypeInternal() {}
  union {
    ParticipantInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParticipantInfoDefaultTypeInternal _ParticipantInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityTradeRequest::SecurityTradeRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.count_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityTradeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityTradeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityTradeRequestDefaultTypeInternal() {}
  union {
    SecurityTradeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityTradeRequestDefaultTypeInternal _SecurityTradeRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityTradeResponse::SecurityTradeResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.trades_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityTradeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityTradeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityTradeResponseDefaultTypeInternal() {}
  union {
    SecurityTradeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityTradeResponseDefaultTypeInternal _SecurityTradeResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Trade::Trade(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.trade_type_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.volume_)*/ ::int64_t{0},
      /*decltype(_impl_.timestamp_)*/ ::int64_t{0},
      /*decltype(_impl_.direction_)*/ 0,
      /*decltype(_impl_.trade_session_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TradeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradeDefaultTypeInternal() {}
  union {
    Trade _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradeDefaultTypeInternal _Trade_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityIntradayRequest::SecurityIntradayRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityIntradayRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityIntradayRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityIntradayRequestDefaultTypeInternal() {}
  union {
    SecurityIntradayRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityIntradayRequestDefaultTypeInternal _SecurityIntradayRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityIntradayResponse::SecurityIntradayResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.lines_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityIntradayResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityIntradayResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityIntradayResponseDefaultTypeInternal() {}
  union {
    SecurityIntradayResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityIntradayResponseDefaultTypeInternal _SecurityIntradayResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Line::Line(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.turnover_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.avg_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.timestamp_)*/ ::int64_t{0},
      /*decltype(_impl_.volume_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct LineDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LineDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LineDefaultTypeInternal() {}
  union {
    Line _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LineDefaultTypeInternal _Line_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityCandlestickRequest::SecurityCandlestickRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.period_)*/ 0,
      /*decltype(_impl_.count_)*/ 0,
      /*decltype(_impl_.adjust_type_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityCandlestickRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityCandlestickRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityCandlestickRequestDefaultTypeInternal() {}
  union {
    SecurityCandlestickRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityCandlestickRequestDefaultTypeInternal _SecurityCandlestickRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityCandlestickResponse::SecurityCandlestickResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.candlesticks_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityCandlestickResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityCandlestickResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityCandlestickResponseDefaultTypeInternal() {}
  union {
    SecurityCandlestickResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityCandlestickResponseDefaultTypeInternal _SecurityCandlestickResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Candlestick::Candlestick(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.close_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.open_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.low_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.high_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.turnover_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.volume_)*/ ::int64_t{0},
      /*decltype(_impl_.timestamp_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CandlestickDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CandlestickDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CandlestickDefaultTypeInternal() {}
  union {
    Candlestick _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CandlestickDefaultTypeInternal _Candlestick_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR OptionChainDateListResponse::OptionChainDateListResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.expiry_date_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct OptionChainDateListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptionChainDateListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptionChainDateListResponseDefaultTypeInternal() {}
  union {
    OptionChainDateListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptionChainDateListResponseDefaultTypeInternal _OptionChainDateListResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR OptionChainDateStrikeInfoRequest::OptionChainDateStrikeInfoRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.expiry_date_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct OptionChainDateStrikeInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptionChainDateStrikeInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptionChainDateStrikeInfoRequestDefaultTypeInternal() {}
  union {
    OptionChainDateStrikeInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptionChainDateStrikeInfoRequestDefaultTypeInternal _OptionChainDateStrikeInfoRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR OptionChainDateStrikeInfoResponse::OptionChainDateStrikeInfoResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.strike_price_info_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct OptionChainDateStrikeInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptionChainDateStrikeInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptionChainDateStrikeInfoResponseDefaultTypeInternal() {}
  union {
    OptionChainDateStrikeInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptionChainDateStrikeInfoResponseDefaultTypeInternal _OptionChainDateStrikeInfoResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR StrikePriceInfo::StrikePriceInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.call_symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.put_symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.standard_)*/ false,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct StrikePriceInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StrikePriceInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StrikePriceInfoDefaultTypeInternal() {}
  union {
    StrikePriceInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StrikePriceInfoDefaultTypeInternal _StrikePriceInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR IssuerInfoResponse::IssuerInfoResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.issuer_info_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct IssuerInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IssuerInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IssuerInfoResponseDefaultTypeInternal() {}
  union {
    IssuerInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IssuerInfoResponseDefaultTypeInternal _IssuerInfoResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR IssuerInfo::IssuerInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.name_cn_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.name_en_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.name_hk_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.id_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct IssuerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IssuerInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IssuerInfoDefaultTypeInternal() {}
  union {
    IssuerInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IssuerInfoDefaultTypeInternal _IssuerInfo_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WarrantFilterListRequest::WarrantFilterListRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.filter_config_)*/ nullptr,
      /*decltype(_impl_.language_)*/ 0,
    } {}
struct WarrantFilterListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WarrantFilterListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WarrantFilterListRequestDefaultTypeInternal() {}
  union {
    WarrantFilterListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WarrantFilterListRequestDefaultTypeInternal _WarrantFilterListRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR FilterConfig::FilterConfig(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.type_)*/ {},
      /* _impl_._type_cached_byte_size_ = */ {0},
      /*decltype(_impl_.issuer_)*/ {},
      /* _impl_._issuer_cached_byte_size_ = */ {0},
      /*decltype(_impl_.expiry_date_)*/ {},
      /* _impl_._expiry_date_cached_byte_size_ = */ {0},
      /*decltype(_impl_.price_type_)*/ {},
      /* _impl_._price_type_cached_byte_size_ = */ {0},
      /*decltype(_impl_.status_)*/ {},
      /* _impl_._status_cached_byte_size_ = */ {0},
      /*decltype(_impl_.sort_by_)*/ 0,
      /*decltype(_impl_.sort_order_)*/ 0,
      /*decltype(_impl_.sort_offset_)*/ 0,
      /*decltype(_impl_.sort_count_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct FilterConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FilterConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FilterConfigDefaultTypeInternal() {}
  union {
    FilterConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FilterConfigDefaultTypeInternal _FilterConfig_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR WarrantFilterListResponse::WarrantFilterListResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.warrant_list_)*/ {},
      /*decltype(_impl_.total_count_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct WarrantFilterListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WarrantFilterListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WarrantFilterListResponseDefaultTypeInternal() {}
  union {
    WarrantFilterListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WarrantFilterListResponseDefaultTypeInternal _WarrantFilterListResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR FilterWarrant::FilterWarrant(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.last_done_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.change_rate_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.change_val_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.turnover_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.expiry_date_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.strike_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.upper_strike_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.lower_strike_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.outstanding_qty_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.outstanding_ratio_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.premium_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.itm_otm_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.implied_volatility_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.delta_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.call_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.to_call_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.effective_leverage_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.leverage_ratio_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.conversion_ratio_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.balance_point_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.state_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.volume_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct FilterWarrantDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FilterWarrantDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FilterWarrantDefaultTypeInternal() {}
  union {
    FilterWarrant _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FilterWarrantDefaultTypeInternal _FilterWarrant_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR MarketTradePeriodResponse::MarketTradePeriodResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.market_trade_session_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MarketTradePeriodResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarketTradePeriodResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarketTradePeriodResponseDefaultTypeInternal() {}
  union {
    MarketTradePeriodResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarketTradePeriodResponseDefaultTypeInternal _MarketTradePeriodResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR MarketTradePeriod::MarketTradePeriod(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.trade_session_)*/ {},
      /*decltype(_impl_.market_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MarketTradePeriodDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarketTradePeriodDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarketTradePeriodDefaultTypeInternal() {}
  union {
    MarketTradePeriod _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarketTradePeriodDefaultTypeInternal _MarketTradePeriod_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TradePeriod::TradePeriod(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.beg_time_)*/ 0,
      /*decltype(_impl_.end_time_)*/ 0,
      /*decltype(_impl_.trade_session_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct TradePeriodDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TradePeriodDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TradePeriodDefaultTypeInternal() {}
  union {
    TradePeriod _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TradePeriodDefaultTypeInternal _TradePeriod_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR SubscriptionRequest::SubscriptionRequest(::_pbi::ConstantInitialized) {}
struct SubscriptionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscriptionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscriptionRequestDefaultTypeInternal() {}
  union {
    SubscriptionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscriptionRequestDefaultTypeInternal _SubscriptionRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SubscriptionResponse::SubscriptionResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.sub_list_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SubscriptionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscriptionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscriptionResponseDefaultTypeInternal() {}
  union {
    SubscriptionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscriptionResponseDefaultTypeInternal _SubscriptionResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SubTypeList::SubTypeList(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.sub_type_)*/ {},
      /*decltype(_impl_._sub_type_cached_byte_size_)*/ {0},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SubTypeListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubTypeListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubTypeListDefaultTypeInternal() {}
  union {
    SubTypeList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubTypeListDefaultTypeInternal _SubTypeList_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SubscribeRequest::SubscribeRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.symbol_)*/ {},
      /*decltype(_impl_.sub_type_)*/ {},
      /*decltype(_impl_._sub_type_cached_byte_size_)*/ {0},
      /*decltype(_impl_.is_first_push_)*/ false,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SubscribeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestDefaultTypeInternal() {}
  union {
    SubscribeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestDefaultTypeInternal _SubscribeRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UnsubscribeRequest::UnsubscribeRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.symbol_)*/ {},
      /*decltype(_impl_.sub_type_)*/ {},
      /*decltype(_impl_._sub_type_cached_byte_size_)*/ {0},
      /*decltype(_impl_.unsub_all_)*/ false,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct UnsubscribeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnsubscribeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnsubscribeRequestDefaultTypeInternal() {}
  union {
    UnsubscribeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnsubscribeRequestDefaultTypeInternal _UnsubscribeRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR UnsubscribeResponse::UnsubscribeResponse(::_pbi::ConstantInitialized) {}
struct UnsubscribeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnsubscribeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnsubscribeResponseDefaultTypeInternal() {}
  union {
    UnsubscribeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnsubscribeResponseDefaultTypeInternal _UnsubscribeResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PushQuote::PushQuote(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.last_done_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.open_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.high_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.low_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.turnover_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.current_turnover_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.sequence_)*/ ::int64_t{0},
      /*decltype(_impl_.timestamp_)*/ ::int64_t{0},
      /*decltype(_impl_.volume_)*/ ::int64_t{0},
      /*decltype(_impl_.trade_status_)*/ 0,
      /*decltype(_impl_.trade_session_)*/ 0,
      /*decltype(_impl_.current_volume_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PushQuoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushQuoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushQuoteDefaultTypeInternal() {}
  union {
    PushQuote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushQuoteDefaultTypeInternal _PushQuote_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PushDepth::PushDepth(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.ask_)*/ {},
      /*decltype(_impl_.bid_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.sequence_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PushDepthDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushDepthDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushDepthDefaultTypeInternal() {}
  union {
    PushDepth _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushDepthDefaultTypeInternal _PushDepth_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PushBrokers::PushBrokers(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.ask_brokers_)*/ {},
      /*decltype(_impl_.bid_brokers_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.sequence_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PushBrokersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushBrokersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushBrokersDefaultTypeInternal() {}
  union {
    PushBrokers _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushBrokersDefaultTypeInternal _PushBrokers_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PushTrade::PushTrade(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.trade_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.sequence_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PushTradeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushTradeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushTradeDefaultTypeInternal() {}
  union {
    PushTrade _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushTradeDefaultTypeInternal _PushTrade_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR MarketTradeDayRequest::MarketTradeDayRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.market_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.beg_day_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.end_day_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MarketTradeDayRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarketTradeDayRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarketTradeDayRequestDefaultTypeInternal() {}
  union {
    MarketTradeDayRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarketTradeDayRequestDefaultTypeInternal _MarketTradeDayRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR MarketTradeDayResponse::MarketTradeDayResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.trade_day_)*/ {},
      /*decltype(_impl_.half_trade_day_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct MarketTradeDayResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarketTradeDayResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarketTradeDayResponseDefaultTypeInternal() {}
  union {
    MarketTradeDayResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarketTradeDayResponseDefaultTypeInternal _MarketTradeDayResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CapitalFlowIntradayRequest::CapitalFlowIntradayRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CapitalFlowIntradayRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CapitalFlowIntradayRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CapitalFlowIntradayRequestDefaultTypeInternal() {}
  union {
    CapitalFlowIntradayRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CapitalFlowIntradayRequestDefaultTypeInternal _CapitalFlowIntradayRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CapitalFlowIntradayResponse_CapitalFlowLine::CapitalFlowIntradayResponse_CapitalFlowLine(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.inflow_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.timestamp_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CapitalFlowIntradayResponse_CapitalFlowLineDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CapitalFlowIntradayResponse_CapitalFlowLineDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CapitalFlowIntradayResponse_CapitalFlowLineDefaultTypeInternal() {}
  union {
    CapitalFlowIntradayResponse_CapitalFlowLine _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CapitalFlowIntradayResponse_CapitalFlowLineDefaultTypeInternal _CapitalFlowIntradayResponse_CapitalFlowLine_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CapitalFlowIntradayResponse::CapitalFlowIntradayResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.capital_flow_lines_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CapitalFlowIntradayResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CapitalFlowIntradayResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CapitalFlowIntradayResponseDefaultTypeInternal() {}
  union {
    CapitalFlowIntradayResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CapitalFlowIntradayResponseDefaultTypeInternal _CapitalFlowIntradayResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CapitalDistributionResponse_CapitalDistribution::CapitalDistributionResponse_CapitalDistribution(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.large_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.medium_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.small_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CapitalDistributionResponse_CapitalDistributionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CapitalDistributionResponse_CapitalDistributionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CapitalDistributionResponse_CapitalDistributionDefaultTypeInternal() {}
  union {
    CapitalDistributionResponse_CapitalDistribution _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CapitalDistributionResponse_CapitalDistributionDefaultTypeInternal _CapitalDistributionResponse_CapitalDistribution_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CapitalDistributionResponse::CapitalDistributionResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.capital_in_)*/ nullptr,
      /*decltype(_impl_.capital_out_)*/ nullptr,
      /*decltype(_impl_.timestamp_)*/ ::int64_t{0},
    } {}
struct CapitalDistributionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CapitalDistributionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CapitalDistributionResponseDefaultTypeInternal() {}
  union {
    CapitalDistributionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CapitalDistributionResponseDefaultTypeInternal _CapitalDistributionResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityCalcQuoteRequest::SecurityCalcQuoteRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.symbols_)*/ {},
      /*decltype(_impl_.calc_index_)*/ {},
      /*decltype(_impl_._calc_index_cached_byte_size_)*/ {0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityCalcQuoteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityCalcQuoteRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityCalcQuoteRequestDefaultTypeInternal() {}
  union {
    SecurityCalcQuoteRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityCalcQuoteRequestDefaultTypeInternal _SecurityCalcQuoteRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityCalcIndex::SecurityCalcIndex(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.last_done_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.change_val_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.change_rate_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.turnover_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.ytd_change_rate_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.turnover_rate_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.total_market_value_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.capital_flow_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.amplitude_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.volume_ratio_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.pe_ttm_ratio_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.pb_ratio_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.dividend_ratio_ttm_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.five_day_change_rate_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.ten_day_change_rate_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.half_year_change_rate_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.five_minutes_change_rate_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.expiry_date_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.strike_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.upper_strike_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.lower_strike_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.outstanding_ratio_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.premium_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.itm_otm_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.implied_volatility_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.warrant_delta_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.call_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.to_call_price_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.effective_leverage_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.leverage_ratio_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.conversion_ratio_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.balance_point_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.delta_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.gamma_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.theta_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.vega_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.rho_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.volume_)*/ ::int64_t{0},
      /*decltype(_impl_.outstanding_qty_)*/ ::int64_t{0},
      /*decltype(_impl_.open_interest_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityCalcIndexDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityCalcIndexDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityCalcIndexDefaultTypeInternal() {}
  union {
    SecurityCalcIndex _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityCalcIndexDefaultTypeInternal _SecurityCalcIndex_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityCalcQuoteResponse::SecurityCalcQuoteResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.security_calc_index_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityCalcQuoteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityCalcQuoteResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityCalcQuoteResponseDefaultTypeInternal() {}
  union {
    SecurityCalcQuoteResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityCalcQuoteResponseDefaultTypeInternal _SecurityCalcQuoteResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityHistoryCandlestickRequest_OffsetQuery::SecurityHistoryCandlestickRequest_OffsetQuery(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.date_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.minute_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.direction_)*/ 0,
      /*decltype(_impl_.count_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityHistoryCandlestickRequest_OffsetQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityHistoryCandlestickRequest_OffsetQueryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityHistoryCandlestickRequest_OffsetQueryDefaultTypeInternal() {}
  union {
    SecurityHistoryCandlestickRequest_OffsetQuery _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityHistoryCandlestickRequest_OffsetQueryDefaultTypeInternal _SecurityHistoryCandlestickRequest_OffsetQuery_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityHistoryCandlestickRequest_DateQuery::SecurityHistoryCandlestickRequest_DateQuery(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.start_date_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.end_date_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SecurityHistoryCandlestickRequest_DateQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityHistoryCandlestickRequest_DateQueryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityHistoryCandlestickRequest_DateQueryDefaultTypeInternal() {}
  union {
    SecurityHistoryCandlestickRequest_DateQuery _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityHistoryCandlestickRequest_DateQueryDefaultTypeInternal _SecurityHistoryCandlestickRequest_DateQuery_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SecurityHistoryCandlestickRequest::SecurityHistoryCandlestickRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.symbol_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.offset_request_)*/ nullptr,
      /*decltype(_impl_.date_request_)*/ nullptr,
      /*decltype(_impl_.period_)*/ 0,
      /*decltype(_impl_.adjust_type_)*/ 0,
      /*decltype(_impl_.query_type_)*/ 0,
    } {}
struct SecurityHistoryCandlestickRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SecurityHistoryCandlestickRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SecurityHistoryCandlestickRequestDefaultTypeInternal() {}
  union {
    SecurityHistoryCandlestickRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SecurityHistoryCandlestickRequestDefaultTypeInternal _SecurityHistoryCandlestickRequest_default_instance_;
}  // namespace v1
}  // namespace quote
}  // namespace longportapp
static ::_pb::Metadata file_level_metadata_quote_2fapi_2eproto[64];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_quote_2fapi_2eproto[9];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_quote_2fapi_2eproto = nullptr;
const ::uint32_t TableStruct_quote_2fapi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityRequest, _impl_.symbol_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::MultiSecurityRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::MultiSecurityRequest, _impl_.symbol_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityStaticInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityStaticInfoResponse, _impl_.secu_static_info_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.name_cn_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.name_en_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.name_hk_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.listing_date_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.exchange_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.currency_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.lot_size_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.total_shares_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.circulating_shares_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.hk_shares_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.eps_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.eps_ttm_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.bps_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.dividend_yield_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.stock_derivatives_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StaticInfo, _impl_.board_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuoteResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuoteResponse, _impl_.secu_quote_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuote, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuote, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuote, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuote, _impl_.last_done_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuote, _impl_.prev_close_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuote, _impl_.open_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuote, _impl_.high_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuote, _impl_.low_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuote, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuote, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuote, _impl_.turnover_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuote, _impl_.trade_status_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuote, _impl_.pre_market_quote_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityQuote, _impl_.post_market_quote_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PrePostQuote, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PrePostQuote, _impl_.last_done_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PrePostQuote, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PrePostQuote, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PrePostQuote, _impl_.turnover_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PrePostQuote, _impl_.high_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PrePostQuote, _impl_.low_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PrePostQuote, _impl_.prev_close_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuoteResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuoteResponse, _impl_.secu_quote_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuote, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuote, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuote, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuote, _impl_.last_done_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuote, _impl_.prev_close_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuote, _impl_.open_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuote, _impl_.high_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuote, _impl_.low_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuote, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuote, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuote, _impl_.turnover_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuote, _impl_.trade_status_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionQuote, _impl_.option_extend_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionExtend, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionExtend, _impl_.implied_volatility_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionExtend, _impl_.open_interest_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionExtend, _impl_.expiry_date_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionExtend, _impl_.strike_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionExtend, _impl_.contract_multiplier_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionExtend, _impl_.contract_type_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionExtend, _impl_.contract_size_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionExtend, _impl_.direction_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionExtend, _impl_.historical_volatility_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionExtend, _impl_.underlying_symbol_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuoteResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuoteResponse, _impl_.secu_quote_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuote, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuote, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuote, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuote, _impl_.last_done_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuote, _impl_.prev_close_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuote, _impl_.open_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuote, _impl_.high_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuote, _impl_.low_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuote, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuote, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuote, _impl_.turnover_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuote, _impl_.trade_status_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantQuote, _impl_.warrant_extend_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantExtend, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantExtend, _impl_.implied_volatility_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantExtend, _impl_.expiry_date_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantExtend, _impl_.last_trade_date_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantExtend, _impl_.outstanding_ratio_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantExtend, _impl_.outstanding_qty_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantExtend, _impl_.conversion_ratio_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantExtend, _impl_.category_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantExtend, _impl_.strike_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantExtend, _impl_.upper_strike_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantExtend, _impl_.lower_strike_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantExtend, _impl_.call_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantExtend, _impl_.underlying_symbol_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityDepthResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityDepthResponse, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityDepthResponse, _impl_.ask_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityDepthResponse, _impl_.bid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Depth, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Depth, _impl_.position_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Depth, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Depth, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Depth, _impl_.order_num_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityBrokersResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityBrokersResponse, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityBrokersResponse, _impl_.ask_brokers_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityBrokersResponse, _impl_.bid_brokers_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Brokers, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Brokers, _impl_.position_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Brokers, _impl_.broker_ids_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::ParticipantBrokerIdsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::ParticipantBrokerIdsResponse, _impl_.participant_broker_numbers_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::ParticipantInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::ParticipantInfo, _impl_.broker_ids_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::ParticipantInfo, _impl_.participant_name_cn_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::ParticipantInfo, _impl_.participant_name_en_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::ParticipantInfo, _impl_.participant_name_hk_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityTradeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityTradeRequest, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityTradeRequest, _impl_.count_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityTradeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityTradeResponse, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityTradeResponse, _impl_.trades_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Trade, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Trade, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Trade, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Trade, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Trade, _impl_.trade_type_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Trade, _impl_.direction_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Trade, _impl_.trade_session_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityIntradayRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityIntradayRequest, _impl_.symbol_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityIntradayResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityIntradayResponse, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityIntradayResponse, _impl_.lines_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Line, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Line, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Line, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Line, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Line, _impl_.turnover_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Line, _impl_.avg_price_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCandlestickRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCandlestickRequest, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCandlestickRequest, _impl_.period_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCandlestickRequest, _impl_.count_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCandlestickRequest, _impl_.adjust_type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCandlestickResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCandlestickResponse, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCandlestickResponse, _impl_.candlesticks_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Candlestick, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Candlestick, _impl_.close_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Candlestick, _impl_.open_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Candlestick, _impl_.low_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Candlestick, _impl_.high_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Candlestick, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Candlestick, _impl_.turnover_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::Candlestick, _impl_.timestamp_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionChainDateListResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionChainDateListResponse, _impl_.expiry_date_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionChainDateStrikeInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionChainDateStrikeInfoRequest, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionChainDateStrikeInfoRequest, _impl_.expiry_date_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionChainDateStrikeInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::OptionChainDateStrikeInfoResponse, _impl_.strike_price_info_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StrikePriceInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StrikePriceInfo, _impl_.price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StrikePriceInfo, _impl_.call_symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StrikePriceInfo, _impl_.put_symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::StrikePriceInfo, _impl_.standard_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::IssuerInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::IssuerInfoResponse, _impl_.issuer_info_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::IssuerInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::IssuerInfo, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::IssuerInfo, _impl_.name_cn_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::IssuerInfo, _impl_.name_en_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::IssuerInfo, _impl_.name_hk_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantFilterListRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantFilterListRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantFilterListRequest, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantFilterListRequest, _impl_.filter_config_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantFilterListRequest, _impl_.language_),
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterConfig, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterConfig, _impl_.sort_by_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterConfig, _impl_.sort_order_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterConfig, _impl_.sort_offset_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterConfig, _impl_.sort_count_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterConfig, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterConfig, _impl_.issuer_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterConfig, _impl_.expiry_date_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterConfig, _impl_.price_type_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterConfig, _impl_.status_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantFilterListResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantFilterListResponse, _impl_.warrant_list_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::WarrantFilterListResponse, _impl_.total_count_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.last_done_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.change_rate_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.change_val_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.turnover_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.expiry_date_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.strike_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.upper_strike_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.lower_strike_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.outstanding_qty_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.outstanding_ratio_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.premium_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.itm_otm_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.implied_volatility_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.delta_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.call_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.to_call_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.effective_leverage_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.leverage_ratio_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.conversion_ratio_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.balance_point_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::FilterWarrant, _impl_.state_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::MarketTradePeriodResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::MarketTradePeriodResponse, _impl_.market_trade_session_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::MarketTradePeriod, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::MarketTradePeriod, _impl_.market_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::MarketTradePeriod, _impl_.trade_session_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::TradePeriod, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::TradePeriod, _impl_.beg_time_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::TradePeriod, _impl_.end_time_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::TradePeriod, _impl_.trade_session_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SubscriptionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SubscriptionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SubscriptionResponse, _impl_.sub_list_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SubTypeList, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SubTypeList, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SubTypeList, _impl_.sub_type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SubscribeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SubscribeRequest, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SubscribeRequest, _impl_.sub_type_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SubscribeRequest, _impl_.is_first_push_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::UnsubscribeRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::UnsubscribeRequest, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::UnsubscribeRequest, _impl_.sub_type_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::UnsubscribeRequest, _impl_.unsub_all_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::UnsubscribeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushQuote, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushQuote, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushQuote, _impl_.sequence_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushQuote, _impl_.last_done_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushQuote, _impl_.open_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushQuote, _impl_.high_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushQuote, _impl_.low_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushQuote, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushQuote, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushQuote, _impl_.turnover_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushQuote, _impl_.trade_status_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushQuote, _impl_.trade_session_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushQuote, _impl_.current_volume_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushQuote, _impl_.current_turnover_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushDepth, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushDepth, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushDepth, _impl_.sequence_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushDepth, _impl_.ask_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushDepth, _impl_.bid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushBrokers, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushBrokers, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushBrokers, _impl_.sequence_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushBrokers, _impl_.ask_brokers_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushBrokers, _impl_.bid_brokers_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushTrade, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushTrade, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushTrade, _impl_.sequence_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::PushTrade, _impl_.trade_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::MarketTradeDayRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::MarketTradeDayRequest, _impl_.market_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::MarketTradeDayRequest, _impl_.beg_day_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::MarketTradeDayRequest, _impl_.end_day_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::MarketTradeDayResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::MarketTradeDayResponse, _impl_.trade_day_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::MarketTradeDayResponse, _impl_.half_trade_day_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalFlowIntradayRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalFlowIntradayRequest, _impl_.symbol_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalFlowIntradayResponse_CapitalFlowLine, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalFlowIntradayResponse_CapitalFlowLine, _impl_.inflow_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalFlowIntradayResponse_CapitalFlowLine, _impl_.timestamp_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalFlowIntradayResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalFlowIntradayResponse, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalFlowIntradayResponse, _impl_.capital_flow_lines_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution, _impl_.large_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution, _impl_.medium_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution, _impl_.small_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalDistributionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalDistributionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalDistributionResponse, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalDistributionResponse, _impl_.timestamp_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalDistributionResponse, _impl_.capital_in_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::CapitalDistributionResponse, _impl_.capital_out_),
    ~0u,
    ~0u,
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcQuoteRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcQuoteRequest, _impl_.symbols_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcQuoteRequest, _impl_.calc_index_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.last_done_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.change_val_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.change_rate_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.volume_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.turnover_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.ytd_change_rate_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.turnover_rate_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.total_market_value_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.capital_flow_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.amplitude_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.volume_ratio_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.pe_ttm_ratio_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.pb_ratio_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.dividend_ratio_ttm_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.five_day_change_rate_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.ten_day_change_rate_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.half_year_change_rate_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.five_minutes_change_rate_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.expiry_date_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.strike_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.upper_strike_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.lower_strike_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.outstanding_qty_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.outstanding_ratio_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.premium_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.itm_otm_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.implied_volatility_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.warrant_delta_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.call_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.to_call_price_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.effective_leverage_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.leverage_ratio_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.conversion_ratio_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.balance_point_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.open_interest_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.delta_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.gamma_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.theta_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.vega_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcIndex, _impl_.rho_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcQuoteResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityCalcQuoteResponse, _impl_.security_calc_index_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest_OffsetQuery, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.direction_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.date_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.minute_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.count_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest_DateQuery, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest_DateQuery, _impl_.start_date_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest_DateQuery, _impl_.end_date_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest, _impl_.symbol_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest, _impl_.period_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest, _impl_.adjust_type_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest, _impl_.query_type_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest, _impl_.offset_request_),
    PROTOBUF_FIELD_OFFSET(::longportapp::quote::v1::SecurityHistoryCandlestickRequest, _impl_.date_request_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::longportapp::quote::v1::SecurityRequest)},
        {9, -1, -1, sizeof(::longportapp::quote::v1::MultiSecurityRequest)},
        {18, -1, -1, sizeof(::longportapp::quote::v1::SecurityStaticInfoResponse)},
        {27, -1, -1, sizeof(::longportapp::quote::v1::StaticInfo)},
        {52, -1, -1, sizeof(::longportapp::quote::v1::SecurityQuoteResponse)},
        {61, 81, -1, sizeof(::longportapp::quote::v1::SecurityQuote)},
        {93, -1, -1, sizeof(::longportapp::quote::v1::PrePostQuote)},
        {108, -1, -1, sizeof(::longportapp::quote::v1::OptionQuoteResponse)},
        {117, 136, -1, sizeof(::longportapp::quote::v1::OptionQuote)},
        {147, -1, -1, sizeof(::longportapp::quote::v1::OptionExtend)},
        {165, -1, -1, sizeof(::longportapp::quote::v1::WarrantQuoteResponse)},
        {174, 193, -1, sizeof(::longportapp::quote::v1::WarrantQuote)},
        {204, -1, -1, sizeof(::longportapp::quote::v1::WarrantExtend)},
        {224, -1, -1, sizeof(::longportapp::quote::v1::SecurityDepthResponse)},
        {235, -1, -1, sizeof(::longportapp::quote::v1::Depth)},
        {247, -1, -1, sizeof(::longportapp::quote::v1::SecurityBrokersResponse)},
        {258, -1, -1, sizeof(::longportapp::quote::v1::Brokers)},
        {268, -1, -1, sizeof(::longportapp::quote::v1::ParticipantBrokerIdsResponse)},
        {277, -1, -1, sizeof(::longportapp::quote::v1::ParticipantInfo)},
        {289, -1, -1, sizeof(::longportapp::quote::v1::SecurityTradeRequest)},
        {299, -1, -1, sizeof(::longportapp::quote::v1::SecurityTradeResponse)},
        {309, -1, -1, sizeof(::longportapp::quote::v1::Trade)},
        {323, -1, -1, sizeof(::longportapp::quote::v1::SecurityIntradayRequest)},
        {332, -1, -1, sizeof(::longportapp::quote::v1::SecurityIntradayResponse)},
        {342, -1, -1, sizeof(::longportapp::quote::v1::Line)},
        {355, -1, -1, sizeof(::longportapp::quote::v1::SecurityCandlestickRequest)},
        {367, -1, -1, sizeof(::longportapp::quote::v1::SecurityCandlestickResponse)},
        {377, -1, -1, sizeof(::longportapp::quote::v1::Candlestick)},
        {392, -1, -1, sizeof(::longportapp::quote::v1::OptionChainDateListResponse)},
        {401, -1, -1, sizeof(::longportapp::quote::v1::OptionChainDateStrikeInfoRequest)},
        {411, -1, -1, sizeof(::longportapp::quote::v1::OptionChainDateStrikeInfoResponse)},
        {420, -1, -1, sizeof(::longportapp::quote::v1::StrikePriceInfo)},
        {432, -1, -1, sizeof(::longportapp::quote::v1::IssuerInfoResponse)},
        {441, -1, -1, sizeof(::longportapp::quote::v1::IssuerInfo)},
        {453, 464, -1, sizeof(::longportapp::quote::v1::WarrantFilterListRequest)},
        {467, -1, -1, sizeof(::longportapp::quote::v1::FilterConfig)},
        {484, -1, -1, sizeof(::longportapp::quote::v1::WarrantFilterListResponse)},
        {494, -1, -1, sizeof(::longportapp::quote::v1::FilterWarrant)},
        {526, -1, -1, sizeof(::longportapp::quote::v1::MarketTradePeriodResponse)},
        {535, -1, -1, sizeof(::longportapp::quote::v1::MarketTradePeriod)},
        {545, -1, -1, sizeof(::longportapp::quote::v1::TradePeriod)},
        {556, -1, -1, sizeof(::longportapp::quote::v1::SubscriptionRequest)},
        {564, -1, -1, sizeof(::longportapp::quote::v1::SubscriptionResponse)},
        {573, -1, -1, sizeof(::longportapp::quote::v1::SubTypeList)},
        {583, -1, -1, sizeof(::longportapp::quote::v1::SubscribeRequest)},
        {594, -1, -1, sizeof(::longportapp::quote::v1::UnsubscribeRequest)},
        {605, -1, -1, sizeof(::longportapp::quote::v1::UnsubscribeResponse)},
        {613, -1, -1, sizeof(::longportapp::quote::v1::PushQuote)},
        {634, -1, -1, sizeof(::longportapp::quote::v1::PushDepth)},
        {646, -1, -1, sizeof(::longportapp::quote::v1::PushBrokers)},
        {658, -1, -1, sizeof(::longportapp::quote::v1::PushTrade)},
        {669, -1, -1, sizeof(::longportapp::quote::v1::MarketTradeDayRequest)},
        {680, -1, -1, sizeof(::longportapp::quote::v1::MarketTradeDayResponse)},
        {690, -1, -1, sizeof(::longportapp::quote::v1::CapitalFlowIntradayRequest)},
        {699, -1, -1, sizeof(::longportapp::quote::v1::CapitalFlowIntradayResponse_CapitalFlowLine)},
        {709, -1, -1, sizeof(::longportapp::quote::v1::CapitalFlowIntradayResponse)},
        {719, -1, -1, sizeof(::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution)},
        {730, 742, -1, sizeof(::longportapp::quote::v1::CapitalDistributionResponse)},
        {746, -1, -1, sizeof(::longportapp::quote::v1::SecurityCalcQuoteRequest)},
        {756, -1, -1, sizeof(::longportapp::quote::v1::SecurityCalcIndex)},
        {805, -1, -1, sizeof(::longportapp::quote::v1::SecurityCalcQuoteResponse)},
        {814, -1, -1, sizeof(::longportapp::quote::v1::SecurityHistoryCandlestickRequest_OffsetQuery)},
        {826, -1, -1, sizeof(::longportapp::quote::v1::SecurityHistoryCandlestickRequest_DateQuery)},
        {836, 850, -1, sizeof(::longportapp::quote::v1::SecurityHistoryCandlestickRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::longportapp::quote::v1::_SecurityRequest_default_instance_._instance,
    &::longportapp::quote::v1::_MultiSecurityRequest_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityStaticInfoResponse_default_instance_._instance,
    &::longportapp::quote::v1::_StaticInfo_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityQuoteResponse_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityQuote_default_instance_._instance,
    &::longportapp::quote::v1::_PrePostQuote_default_instance_._instance,
    &::longportapp::quote::v1::_OptionQuoteResponse_default_instance_._instance,
    &::longportapp::quote::v1::_OptionQuote_default_instance_._instance,
    &::longportapp::quote::v1::_OptionExtend_default_instance_._instance,
    &::longportapp::quote::v1::_WarrantQuoteResponse_default_instance_._instance,
    &::longportapp::quote::v1::_WarrantQuote_default_instance_._instance,
    &::longportapp::quote::v1::_WarrantExtend_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityDepthResponse_default_instance_._instance,
    &::longportapp::quote::v1::_Depth_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityBrokersResponse_default_instance_._instance,
    &::longportapp::quote::v1::_Brokers_default_instance_._instance,
    &::longportapp::quote::v1::_ParticipantBrokerIdsResponse_default_instance_._instance,
    &::longportapp::quote::v1::_ParticipantInfo_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityTradeRequest_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityTradeResponse_default_instance_._instance,
    &::longportapp::quote::v1::_Trade_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityIntradayRequest_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityIntradayResponse_default_instance_._instance,
    &::longportapp::quote::v1::_Line_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityCandlestickRequest_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityCandlestickResponse_default_instance_._instance,
    &::longportapp::quote::v1::_Candlestick_default_instance_._instance,
    &::longportapp::quote::v1::_OptionChainDateListResponse_default_instance_._instance,
    &::longportapp::quote::v1::_OptionChainDateStrikeInfoRequest_default_instance_._instance,
    &::longportapp::quote::v1::_OptionChainDateStrikeInfoResponse_default_instance_._instance,
    &::longportapp::quote::v1::_StrikePriceInfo_default_instance_._instance,
    &::longportapp::quote::v1::_IssuerInfoResponse_default_instance_._instance,
    &::longportapp::quote::v1::_IssuerInfo_default_instance_._instance,
    &::longportapp::quote::v1::_WarrantFilterListRequest_default_instance_._instance,
    &::longportapp::quote::v1::_FilterConfig_default_instance_._instance,
    &::longportapp::quote::v1::_WarrantFilterListResponse_default_instance_._instance,
    &::longportapp::quote::v1::_FilterWarrant_default_instance_._instance,
    &::longportapp::quote::v1::_MarketTradePeriodResponse_default_instance_._instance,
    &::longportapp::quote::v1::_MarketTradePeriod_default_instance_._instance,
    &::longportapp::quote::v1::_TradePeriod_default_instance_._instance,
    &::longportapp::quote::v1::_SubscriptionRequest_default_instance_._instance,
    &::longportapp::quote::v1::_SubscriptionResponse_default_instance_._instance,
    &::longportapp::quote::v1::_SubTypeList_default_instance_._instance,
    &::longportapp::quote::v1::_SubscribeRequest_default_instance_._instance,
    &::longportapp::quote::v1::_UnsubscribeRequest_default_instance_._instance,
    &::longportapp::quote::v1::_UnsubscribeResponse_default_instance_._instance,
    &::longportapp::quote::v1::_PushQuote_default_instance_._instance,
    &::longportapp::quote::v1::_PushDepth_default_instance_._instance,
    &::longportapp::quote::v1::_PushBrokers_default_instance_._instance,
    &::longportapp::quote::v1::_PushTrade_default_instance_._instance,
    &::longportapp::quote::v1::_MarketTradeDayRequest_default_instance_._instance,
    &::longportapp::quote::v1::_MarketTradeDayResponse_default_instance_._instance,
    &::longportapp::quote::v1::_CapitalFlowIntradayRequest_default_instance_._instance,
    &::longportapp::quote::v1::_CapitalFlowIntradayResponse_CapitalFlowLine_default_instance_._instance,
    &::longportapp::quote::v1::_CapitalFlowIntradayResponse_default_instance_._instance,
    &::longportapp::quote::v1::_CapitalDistributionResponse_CapitalDistribution_default_instance_._instance,
    &::longportapp::quote::v1::_CapitalDistributionResponse_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityCalcQuoteRequest_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityCalcIndex_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityCalcQuoteResponse_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityHistoryCandlestickRequest_OffsetQuery_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityHistoryCandlestickRequest_DateQuery_default_instance_._instance,
    &::longportapp::quote::v1::_SecurityHistoryCandlestickRequest_default_instance_._instance,
};
const char descriptor_table_protodef_quote_2fapi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\017quote/api.proto\022\024longportapp.quote.v1\""
    ")\n\017SecurityRequest\022\026\n\006symbol\030\001 \001(\tR\006symb"
    "ol\".\n\024MultiSecurityRequest\022\026\n\006symbol\030\001 \003"
    "(\tR\006symbol\"h\n\032SecurityStaticInfoResponse"
    "\022J\n\020secu_static_info\030\001 \003(\0132 .longportapp"
    ".quote.v1.StaticInfoR\016secuStaticInfo\"\373\003\n"
    "\nStaticInfo\022\026\n\006symbol\030\001 \001(\tR\006symbol\022\027\n\007n"
    "ame_cn\030\002 \001(\tR\006nameCn\022\027\n\007name_en\030\003 \001(\tR\006n"
    "ameEn\022\027\n\007name_hk\030\004 \001(\tR\006nameHk\022!\n\014listin"
    "g_date\030\005 \001(\tR\013listingDate\022\032\n\010exchange\030\006 "
    "\001(\tR\010exchange\022\032\n\010currency\030\007 \001(\tR\010currenc"
    "y\022\031\n\010lot_size\030\010 \001(\005R\007lotSize\022!\n\014total_sh"
    "ares\030\t \001(\003R\013totalShares\022-\n\022circulating_s"
    "hares\030\n \001(\003R\021circulatingShares\022\033\n\thk_sha"
    "res\030\013 \001(\003R\010hkShares\022\020\n\003eps\030\014 \001(\tR\003eps\022\027\n"
    "\007eps_ttm\030\r \001(\tR\006epsTtm\022\020\n\003bps\030\016 \001(\tR\003bps"
    "\022%\n\016dividend_yield\030\017 \001(\tR\rdividendYield\022"
    "+\n\021stock_derivatives\030\020 \003(\005R\020stockDerivat"
    "ives\022\024\n\005board\030\021 \001(\tR\005board\"[\n\025SecurityQu"
    "oteResponse\022B\n\nsecu_quote\030\001 \003(\0132#.longpo"
    "rtapp.quote.v1.SecurityQuoteR\tsecuQuote\""
    "\323\003\n\rSecurityQuote\022\026\n\006symbol\030\001 \001(\tR\006symbo"
    "l\022\033\n\tlast_done\030\002 \001(\tR\010lastDone\022\035\n\nprev_c"
    "lose\030\003 \001(\tR\tprevClose\022\022\n\004open\030\004 \001(\tR\004ope"
    "n\022\022\n\004high\030\005 \001(\tR\004high\022\020\n\003low\030\006 \001(\tR\003low\022"
    "\034\n\ttimestamp\030\007 \001(\003R\ttimestamp\022\026\n\006volume\030"
    "\010 \001(\003R\006volume\022\032\n\010turnover\030\t \001(\tR\010turnove"
    "r\022D\n\014trade_status\030\n \001(\0162!.longportapp.qu"
    "ote.v1.TradeStatusR\013tradeStatus\022L\n\020pre_m"
    "arket_quote\030\013 \001(\0132\".longportapp.quote.v1"
    ".PrePostQuoteR\016preMarketQuote\022N\n\021post_ma"
    "rket_quote\030\014 \001(\0132\".longportapp.quote.v1."
    "PrePostQuoteR\017postMarketQuote\"\302\001\n\014PrePos"
    "tQuote\022\033\n\tlast_done\030\001 \001(\tR\010lastDone\022\034\n\tt"
    "imestamp\030\002 \001(\003R\ttimestamp\022\026\n\006volume\030\003 \001("
    "\003R\006volume\022\032\n\010turnover\030\004 \001(\tR\010turnover\022\022\n"
    "\004high\030\005 \001(\tR\004high\022\020\n\003low\030\006 \001(\tR\003low\022\035\n\np"
    "rev_close\030\007 \001(\tR\tprevClose\"W\n\023OptionQuot"
    "eResponse\022@\n\nsecu_quote\030\001 \003(\0132!.longport"
    "app.quote.v1.OptionQuoteR\tsecuQuote\"\374\002\n\013"
    "OptionQuote\022\026\n\006symbol\030\001 \001(\tR\006symbol\022\033\n\tl"
    "ast_done\030\002 \001(\tR\010lastDone\022\035\n\nprev_close\030\003"
    " \001(\tR\tprevClose\022\022\n\004open\030\004 \001(\tR\004open\022\022\n\004h"
    "igh\030\005 \001(\tR\004high\022\020\n\003low\030\006 \001(\tR\003low\022\034\n\ttim"
    "estamp\030\007 \001(\003R\ttimestamp\022\026\n\006volume\030\010 \001(\003R"
    "\006volume\022\032\n\010turnover\030\t \001(\tR\010turnover\022D\n\014t"
    "rade_status\030\n \001(\0162!.longportapp.quote.v1"
    ".TradeStatusR\013tradeStatus\022G\n\roption_exte"
    "nd\030\013 \001(\0132\".longportapp.quote.v1.OptionEx"
    "tendR\014optionExtend\"\241\003\n\014OptionExtend\022-\n\022i"
    "mplied_volatility\030\001 \001(\tR\021impliedVolatili"
    "ty\022#\n\ropen_interest\030\002 \001(\003R\014openInterest\022"
    "\037\n\013expiry_date\030\003 \001(\tR\nexpiryDate\022!\n\014stri"
    "ke_price\030\004 \001(\tR\013strikePrice\022/\n\023contract_"
    "multiplier\030\005 \001(\tR\022contractMultiplier\022#\n\r"
    "contract_type\030\006 \001(\tR\014contractType\022#\n\rcon"
    "tract_size\030\007 \001(\tR\014contractSize\022\034\n\tdirect"
    "ion\030\010 \001(\tR\tdirection\0223\n\025historical_volat"
    "ility\030\t \001(\tR\024historicalVolatility\022+\n\021und"
    "erlying_symbol\030\n \001(\tR\020underlyingSymbol\"Y"
    "\n\024WarrantQuoteResponse\022A\n\nsecu_quote\030\002 \003"
    "(\0132\".longportapp.quote.v1.WarrantQuoteR\t"
    "secuQuote\"\200\003\n\014WarrantQuote\022\026\n\006symbol\030\001 \001"
    "(\tR\006symbol\022\033\n\tlast_done\030\002 \001(\tR\010lastDone\022"
    "\035\n\nprev_close\030\003 \001(\tR\tprevClose\022\022\n\004open\030\004"
    " \001(\tR\004open\022\022\n\004high\030\005 \001(\tR\004high\022\020\n\003low\030\006 "
    "\001(\tR\003low\022\034\n\ttimestamp\030\007 \001(\003R\ttimestamp\022\026"
    "\n\006volume\030\010 \001(\003R\006volume\022\032\n\010turnover\030\t \001(\t"
    "R\010turnover\022D\n\014trade_status\030\n \001(\0162!.longp"
    "ortapp.quote.v1.TradeStatusR\013tradeStatus"
    "\022J\n\016warrant_extend\030\013 \001(\0132#.longportapp.q"
    "uote.v1.WarrantExtendR\rwarrantExtend\"\357\003\n"
    "\rWarrantExtend\022-\n\022implied_volatility\030\001 \001"
    "(\tR\021impliedVolatility\022\037\n\013expiry_date\030\002 \001"
    "(\tR\nexpiryDate\022&\n\017last_trade_date\030\003 \001(\tR"
    "\rlastTradeDate\022+\n\021outstanding_ratio\030\004 \001("
    "\tR\020outstandingRatio\022\'\n\017outstanding_qty\030\005"
    " \001(\003R\016outstandingQty\022)\n\020conversion_ratio"
    "\030\006 \001(\tR\017conversionRatio\022\032\n\010category\030\007 \001("
    "\tR\010category\022!\n\014strike_price\030\010 \001(\tR\013strik"
    "ePrice\022,\n\022upper_strike_price\030\t \001(\tR\020uppe"
    "rStrikePrice\022,\n\022lower_strike_price\030\n \001(\t"
    "R\020lowerStrikePrice\022\035\n\ncall_price\030\013 \001(\tR\t"
    "callPrice\022+\n\021underlying_symbol\030\014 \001(\tR\020un"
    "derlyingSymbol\"\215\001\n\025SecurityDepthResponse"
    "\022\026\n\006symbol\030\001 \001(\tR\006symbol\022-\n\003ask\030\002 \003(\0132\033."
    "longportapp.quote.v1.DepthR\003ask\022-\n\003bid\030\003"
    " \003(\0132\033.longportapp.quote.v1.DepthR\003bid\"n"
    "\n\005Depth\022\032\n\010position\030\001 \001(\005R\010position\022\024\n\005p"
    "rice\030\002 \001(\tR\005price\022\026\n\006volume\030\003 \001(\003R\006volum"
    "e\022\033\n\torder_num\030\004 \001(\003R\010orderNum\"\261\001\n\027Secur"
    "ityBrokersResponse\022\026\n\006symbol\030\001 \001(\tR\006symb"
    "ol\022>\n\013ask_brokers\030\002 \003(\0132\035.longportapp.qu"
    "ote.v1.BrokersR\naskBrokers\022>\n\013bid_broker"
    "s\030\003 \003(\0132\035.longportapp.quote.v1.BrokersR\n"
    "bidBrokers\"D\n\007Brokers\022\032\n\010position\030\001 \001(\005R"
    "\010position\022\035\n\nbroker_ids\030\002 \003(\005R\tbrokerIds"
    "\"\203\001\n\034ParticipantBrokerIdsResponse\022c\n\032par"
    "ticipant_broker_numbers\030\001 \003(\0132%.longport"
    "app.quote.v1.ParticipantInfoR\030participan"
    "tBrokerNumbers\"\300\001\n\017ParticipantInfo\022\035\n\nbr"
    "oker_ids\030\001 \003(\005R\tbrokerIds\022.\n\023participant"
    "_name_cn\030\002 \001(\tR\021participantNameCn\022.\n\023par"
    "ticipant_name_en\030\003 \001(\tR\021participantNameE"
    "n\022.\n\023participant_name_hk\030\004 \001(\tR\021particip"
    "antNameHk\"D\n\024SecurityTradeRequest\022\026\n\006sym"
    "bol\030\001 \001(\tR\006symbol\022\024\n\005count\030\002 \001(\005R\005count\""
    "d\n\025SecurityTradeResponse\022\026\n\006symbol\030\001 \001(\t"
    "R\006symbol\0223\n\006trades\030\002 \003(\0132\033.longportapp.q"
    "uote.v1.TradeR\006trades\"\331\001\n\005Trade\022\024\n\005price"
    "\030\001 \001(\tR\005price\022\026\n\006volume\030\002 \001(\003R\006volume\022\034\n"
    "\ttimestamp\030\003 \001(\003R\ttimestamp\022\035\n\ntrade_typ"
    "e\030\004 \001(\tR\ttradeType\022\034\n\tdirection\030\005 \001(\005R\td"
    "irection\022G\n\rtrade_session\030\006 \001(\0162\".longpo"
    "rtapp.quote.v1.TradeSessionR\014tradeSessio"
    "n\"1\n\027SecurityIntradayRequest\022\026\n\006symbol\030\001"
    " \001(\tR\006symbol\"d\n\030SecurityIntradayResponse"
    "\022\026\n\006symbol\030\001 \001(\tR\006symbol\0220\n\005lines\030\002 \003(\0132"
    "\032.longportapp.quote.v1.LineR\005lines\"\213\001\n\004L"
    "ine\022\024\n\005price\030\001 \001(\tR\005price\022\034\n\ttimestamp\030\002"
    " \001(\003R\ttimestamp\022\026\n\006volume\030\003 \001(\003R\006volume\022"
    "\032\n\010turnover\030\004 \001(\tR\010turnover\022\033\n\tavg_price"
    "\030\005 \001(\tR\010avgPrice\"\303\001\n\032SecurityCandlestick"
    "Request\022\026\n\006symbol\030\001 \001(\tR\006symbol\0224\n\006perio"
    "d\030\002 \001(\0162\034.longportapp.quote.v1.PeriodR\006p"
    "eriod\022\024\n\005count\030\003 \001(\005R\005count\022A\n\013adjust_ty"
    "pe\030\004 \001(\0162 .longportapp.quote.v1.AdjustTy"
    "peR\nadjustType\"|\n\033SecurityCandlestickRes"
    "ponse\022\026\n\006symbol\030\001 \001(\tR\006symbol\022E\n\014candles"
    "ticks\030\002 \003(\0132!.longportapp.quote.v1.Candl"
    "estickR\014candlesticks\"\257\001\n\013Candlestick\022\024\n\005"
    "close\030\001 \001(\tR\005close\022\022\n\004open\030\002 \001(\tR\004open\022\020"
    "\n\003low\030\003 \001(\tR\003low\022\022\n\004high\030\004 \001(\tR\004high\022\026\n\006"
    "volume\030\005 \001(\003R\006volume\022\032\n\010turnover\030\006 \001(\tR\010"
    "turnover\022\034\n\ttimestamp\030\007 \001(\003R\ttimestamp\">"
    "\n\033OptionChainDateListResponse\022\037\n\013expiry_"
    "date\030\001 \003(\tR\nexpiryDate\"[\n OptionChainDat"
    "eStrikeInfoRequest\022\026\n\006symbol\030\001 \001(\tR\006symb"
    "ol\022\037\n\013expiry_date\030\002 \001(\tR\nexpiryDate\"v\n!O"
    "ptionChainDateStrikeInfoResponse\022Q\n\021stri"
    "ke_price_info\030\001 \003(\0132%.longportapp.quote."
    "v1.StrikePriceInfoR\017strikePriceInfo\"\203\001\n\017"
    "StrikePriceInfo\022\024\n\005price\030\001 \001(\tR\005price\022\037\n"
    "\013call_symbol\030\002 \001(\tR\ncallSymbol\022\035\n\nput_sy"
    "mbol\030\003 \001(\tR\tputSymbol\022\032\n\010standard\030\004 \001(\010R"
    "\010standard\"W\n\022IssuerInfoResponse\022A\n\013issue"
    "r_info\030\001 \003(\0132 .longportapp.quote.v1.Issu"
    "erInfoR\nissuerInfo\"g\n\nIssuerInfo\022\016\n\002id\030\001"
    " \001(\005R\002id\022\027\n\007name_cn\030\002 \001(\tR\006nameCn\022\027\n\007nam"
    "e_en\030\003 \001(\tR\006nameEn\022\027\n\007name_hk\030\004 \001(\tR\006nam"
    "eHk\"\227\001\n\030WarrantFilterListRequest\022\026\n\006symb"
    "ol\030\001 \001(\tR\006symbol\022G\n\rfilter_config\030\002 \001(\0132"
    "\".longportapp.quote.v1.FilterConfigR\014fil"
    "terConfig\022\032\n\010language\030\003 \001(\005R\010language\"\212\002"
    "\n\014FilterConfig\022\027\n\007sort_by\030\001 \001(\005R\006sortBy\022"
    "\035\n\nsort_order\030\002 \001(\005R\tsortOrder\022\037\n\013sort_o"
    "ffset\030\003 \001(\005R\nsortOffset\022\035\n\nsort_count\030\004 "
    "\001(\005R\tsortCount\022\022\n\004type\030\005 \003(\005R\004type\022\026\n\006is"
    "suer\030\006 \003(\005R\006issuer\022\037\n\013expiry_date\030\007 \003(\005R"
    "\nexpiryDate\022\035\n\nprice_type\030\010 \003(\005R\tpriceTy"
    "pe\022\026\n\006status\030\t \003(\005R\006status\"\204\001\n\031WarrantFi"
    "lterListResponse\022F\n\014warrant_list\030\001 \003(\0132#"
    ".longportapp.quote.v1.FilterWarrantR\013war"
    "rantList\022\037\n\013total_count\030\002 \001(\005R\ntotalCoun"
    "t\"\271\006\n\rFilterWarrant\022\026\n\006symbol\030\001 \001(\tR\006sym"
    "bol\022\022\n\004name\030\002 \001(\tR\004name\022\033\n\tlast_done\030\003 \001"
    "(\tR\010lastDone\022\037\n\013change_rate\030\004 \001(\tR\nchang"
    "eRate\022\035\n\nchange_val\030\005 \001(\tR\tchangeVal\022\026\n\006"
    "volume\030\006 \001(\003R\006volume\022\032\n\010turnover\030\007 \001(\tR\010"
    "turnover\022\037\n\013expiry_date\030\010 \001(\tR\nexpiryDat"
    "e\022!\n\014strike_price\030\t \001(\tR\013strikePrice\022,\n\022"
    "upper_strike_price\030\n \001(\tR\020upperStrikePri"
    "ce\022,\n\022lower_strike_price\030\013 \001(\tR\020lowerStr"
    "ikePrice\022\'\n\017outstanding_qty\030\014 \001(\tR\016outst"
    "andingQty\022+\n\021outstanding_ratio\030\r \001(\tR\020ou"
    "tstandingRatio\022\030\n\007premium\030\016 \001(\tR\007premium"
    "\022\027\n\007itm_otm\030\017 \001(\tR\006itmOtm\022-\n\022implied_vol"
    "atility\030\020 \001(\tR\021impliedVolatility\022\024\n\005delt"
    "a\030\021 \001(\tR\005delta\022\035\n\ncall_price\030\022 \001(\tR\tcall"
    "Price\022\"\n\rto_call_price\030\023 \001(\tR\013toCallPric"
    "e\022-\n\022effective_leverage\030\024 \001(\tR\021effective"
    "Leverage\022%\n\016leverage_ratio\030\025 \001(\tR\rlevera"
    "geRatio\022)\n\020conversion_ratio\030\026 \001(\tR\017conve"
    "rsionRatio\022#\n\rbalance_point\030\027 \001(\tR\014balan"
    "cePoint\022\024\n\005state\030\030 \001(\tR\005state\"v\n\031MarketT"
    "radePeriodResponse\022Y\n\024market_trade_sessi"
    "on\030\001 \003(\0132\'.longportapp.quote.v1.MarketTr"
    "adePeriodR\022marketTradeSession\"s\n\021MarketT"
    "radePeriod\022\026\n\006market\030\001 \001(\tR\006market\022F\n\rtr"
    "ade_session\030\002 \003(\0132!.longportapp.quote.v1"
    ".TradePeriodR\014tradeSession\"\214\001\n\013TradePeri"
    "od\022\031\n\010beg_time\030\001 \001(\005R\007begTime\022\031\n\010end_tim"
    "e\030\002 \001(\005R\007endTime\022G\n\rtrade_session\030\003 \001(\0162"
    "\".longportapp.quote.v1.TradeSessionR\014tra"
    "deSession\"\025\n\023SubscriptionRequest\"T\n\024Subs"
    "criptionResponse\022<\n\010sub_list\030\001 \003(\0132!.lon"
    "gportapp.quote.v1.SubTypeListR\007subList\"_"
    "\n\013SubTypeList\022\026\n\006symbol\030\001 \001(\tR\006symbol\0228\n"
    "\010sub_type\030\002 \003(\0162\035.longportapp.quote.v1.S"
    "ubTypeR\007subType\"\210\001\n\020SubscribeRequest\022\026\n\006"
    "symbol\030\001 \003(\tR\006symbol\0228\n\010sub_type\030\002 \003(\0162\035"
    ".longportapp.quote.v1.SubTypeR\007subType\022\""
    "\n\ris_first_push\030\003 \001(\010R\013isFirstPush\"\203\001\n\022U"
    "nsubscribeRequest\022\026\n\006symbol\030\001 \003(\tR\006symbo"
    "l\0228\n\010sub_type\030\002 \003(\0162\035.longportapp.quote."
    "v1.SubTypeR\007subType\022\033\n\tunsub_all\030\003 \001(\010R\010"
    "unsubAll\"\025\n\023UnsubscribeResponse\"\311\003\n\tPush"
    "Quote\022\026\n\006symbol\030\001 \001(\tR\006symbol\022\032\n\010sequenc"
    "e\030\002 \001(\003R\010sequence\022\033\n\tlast_done\030\003 \001(\tR\010la"
    "stDone\022\022\n\004open\030\004 \001(\tR\004open\022\022\n\004high\030\005 \001(\t"
    "R\004high\022\020\n\003low\030\006 \001(\tR\003low\022\034\n\ttimestamp\030\007 "
    "\001(\003R\ttimestamp\022\026\n\006volume\030\010 \001(\003R\006volume\022\032"
    "\n\010turnover\030\t \001(\tR\010turnover\022D\n\014trade_stat"
    "us\030\n \001(\0162!.longportapp.quote.v1.TradeSta"
    "tusR\013tradeStatus\022G\n\rtrade_session\030\013 \001(\0162"
    "\".longportapp.quote.v1.TradeSessionR\014tra"
    "deSession\022%\n\016current_volume\030\014 \001(\003R\rcurre"
    "ntVolume\022)\n\020current_turnover\030\r \001(\tR\017curr"
    "entTurnover\"\235\001\n\tPushDepth\022\026\n\006symbol\030\001 \001("
    "\tR\006symbol\022\032\n\010sequence\030\002 \001(\003R\010sequence\022-\n"
    "\003ask\030\003 \003(\0132\033.longportapp.quote.v1.DepthR"
    "\003ask\022-\n\003bid\030\004 \003(\0132\033.longportapp.quote.v1"
    ".DepthR\003bid\"\301\001\n\013PushBrokers\022\026\n\006symbol\030\001 "
    "\001(\tR\006symbol\022\032\n\010sequence\030\002 \001(\003R\010sequence\022"
    ">\n\013ask_brokers\030\003 \003(\0132\035.longportapp.quote"
    ".v1.BrokersR\naskBrokers\022>\n\013bid_brokers\030\004"
    " \003(\0132\035.longportapp.quote.v1.BrokersR\nbid"
    "Brokers\"r\n\tPushTrade\022\026\n\006symbol\030\001 \001(\tR\006sy"
    "mbol\022\032\n\010sequence\030\002 \001(\003R\010sequence\0221\n\005trad"
    "e\030\003 \003(\0132\033.longportapp.quote.v1.TradeR\005tr"
    "ade\"a\n\025MarketTradeDayRequest\022\026\n\006market\030\001"
    " \001(\tR\006market\022\027\n\007beg_day\030\002 \001(\tR\006begDay\022\027\n"
    "\007end_day\030\003 \001(\tR\006endDay\"[\n\026MarketTradeDay"
    "Response\022\033\n\ttrade_day\030\001 \003(\tR\010tradeDay\022$\n"
    "\016half_trade_day\030\002 \003(\tR\014halfTradeDay\"4\n\032C"
    "apitalFlowIntradayRequest\022\026\n\006symbol\030\001 \001("
    "\tR\006symbol\"\357\001\n\033CapitalFlowIntradayRespons"
    "e\022\026\n\006symbol\030\001 \001(\tR\006symbol\022o\n\022capital_flo"
    "w_lines\030\002 \003(\0132A.longportapp.quote.v1.Cap"
    "italFlowIntradayResponse.CapitalFlowLine"
    "R\020capitalFlowLines\032G\n\017CapitalFlowLine\022\026\n"
    "\006inflow\030\001 \001(\tR\006inflow\022\034\n\ttimestamp\030\002 \001(\003"
    "R\ttimestamp\"\374\002\n\033CapitalDistributionRespo"
    "nse\022\026\n\006symbol\030\001 \001(\tR\006symbol\022\034\n\ttimestamp"
    "\030\002 \001(\003R\ttimestamp\022d\n\ncapital_in\030\003 \001(\0132E."
    "longportapp.quote.v1.CapitalDistribution"
    "Response.CapitalDistributionR\tcapitalIn\022"
    "f\n\013capital_out\030\004 \001(\0132E.longportapp.quote"
    ".v1.CapitalDistributionResponse.CapitalD"
    "istributionR\ncapitalOut\032Y\n\023CapitalDistri"
    "bution\022\024\n\005large\030\001 \001(\tR\005large\022\026\n\006medium\030\002"
    " \001(\tR\006medium\022\024\n\005small\030\003 \001(\tR\005small\"t\n\030Se"
    "curityCalcQuoteRequest\022\030\n\007symbols\030\001 \003(\tR"
    "\007symbols\022>\n\ncalc_index\030\002 \003(\0162\037.longporta"
    "pp.quote.v1.CalcIndexR\tcalcIndex\"\305\013\n\021Sec"
    "urityCalcIndex\022\026\n\006symbol\030\001 \001(\tR\006symbol\022\033"
    "\n\tlast_done\030\002 \001(\tR\010lastDone\022\035\n\nchange_va"
    "l\030\003 \001(\tR\tchangeVal\022\037\n\013change_rate\030\004 \001(\tR"
    "\nchangeRate\022\026\n\006volume\030\005 \001(\003R\006volume\022\032\n\010t"
    "urnover\030\006 \001(\tR\010turnover\022&\n\017ytd_change_ra"
    "te\030\007 \001(\tR\rytdChangeRate\022#\n\rturnover_rate"
    "\030\010 \001(\tR\014turnoverRate\022,\n\022total_market_val"
    "ue\030\t \001(\tR\020totalMarketValue\022!\n\014capital_fl"
    "ow\030\n \001(\tR\013capitalFlow\022\034\n\tamplitude\030\013 \001(\t"
    "R\tamplitude\022!\n\014volume_ratio\030\014 \001(\tR\013volum"
    "eRatio\022 \n\014pe_ttm_ratio\030\r \001(\tR\npeTtmRatio"
    "\022\031\n\010pb_ratio\030\016 \001(\tR\007pbRatio\022,\n\022dividend_"
    "ratio_ttm\030\017 \001(\tR\020dividendRatioTtm\022/\n\024fiv"
    "e_day_change_rate\030\020 \001(\tR\021fiveDayChangeRa"
    "te\022-\n\023ten_day_change_rate\030\021 \001(\tR\020tenDayC"
    "hangeRate\0221\n\025half_year_change_rate\030\022 \001(\t"
    "R\022halfYearChangeRate\0227\n\030five_minutes_cha"
    "nge_rate\030\023 \001(\tR\025fiveMinutesChangeRate\022\037\n"
    "\013expiry_date\030\024 \001(\tR\nexpiryDate\022!\n\014strike"
    "_price\030\025 \001(\tR\013strikePrice\022,\n\022upper_strik"
    "e_price\030\026 \001(\tR\020upperStrikePrice\022,\n\022lower"
    "_strike_price\030\027 \001(\tR\020lowerStrikePrice\022\'\n"
    "\017outstanding_qty\030\030 \001(\003R\016outstandingQty\022+"
    "\n\021outstanding_ratio\030\031 \001(\tR\020outstandingRa"
    "tio\022\030\n\007premium\030\032 \001(\tR\007premium\022\027\n\007itm_otm"
    "\030\033 \001(\tR\006itmOtm\022-\n\022implied_volatility\030\034 \001"
    "(\tR\021impliedVolatility\022#\n\rwarrant_delta\030\035"
    " \001(\tR\014warrantDelta\022\035\n\ncall_price\030\036 \001(\tR\t"
    "callPrice\022\"\n\rto_call_price\030\037 \001(\tR\013toCall"
    "Price\022-\n\022effective_leverage\030  \001(\tR\021effec"
    "tiveLeverage\022%\n\016leverage_ratio\030! \001(\tR\rle"
    "verageRatio\022)\n\020conversion_ratio\030\" \001(\tR\017c"
    "onversionRatio\022#\n\rbalance_point\030# \001(\tR\014b"
    "alancePoint\022#\n\ropen_interest\030$ \001(\003R\014open"
    "Interest\022\024\n\005delta\030% \001(\tR\005delta\022\024\n\005gamma\030"
    "& \001(\tR\005gamma\022\024\n\005theta\030\' \001(\tR\005theta\022\022\n\004ve"
    "ga\030( \001(\tR\004vega\022\020\n\003rho\030) \001(\tR\003rho\"t\n\031Secu"
    "rityCalcQuoteResponse\022W\n\023security_calc_i"
    "ndex\030\001 \003(\0132\'.longportapp.quote.v1.Securi"
    "tyCalcIndexR\021securityCalcIndex\"\260\005\n!Secur"
    "ityHistoryCandlestickRequest\022\026\n\006symbol\030\001"
    " \001(\tR\006symbol\0224\n\006period\030\002 \001(\0162\034.longporta"
    "pp.quote.v1.PeriodR\006period\022A\n\013adjust_typ"
    "e\030\003 \001(\0162 .longportapp.quote.v1.AdjustTyp"
    "eR\nadjustType\022P\n\nquery_type\030\004 \001(\01621.long"
    "portapp.quote.v1.HistoryCandlestickQuery"
    "TypeR\tqueryType\022j\n\016offset_request\030\005 \001(\0132"
    "C.longportapp.quote.v1.SecurityHistoryCa"
    "ndlestickRequest.OffsetQueryR\roffsetRequ"
    "est\022d\n\014date_request\030\006 \001(\0132A.longportapp."
    "quote.v1.SecurityHistoryCandlestickReque"
    "st.DateQueryR\013dateRequest\032\216\001\n\013OffsetQuer"
    "y\022=\n\tdirection\030\001 \001(\0162\037.longportapp.quote"
    ".v1.DirectionR\tdirection\022\022\n\004date\030\002 \001(\tR\004"
    "date\022\026\n\006minute\030\003 \001(\tR\006minute\022\024\n\005count\030\004 "
    "\001(\005R\005count\032E\n\tDateQuery\022\035\n\nstart_date\030\001 "
    "\001(\tR\tstartDate\022\031\n\010end_date\030\002 \001(\tR\007endDat"
    "e*\307\005\n\007Command\022\023\n\017UNKNOWN_COMMAND\020\000\022\016\n\nHE"
    "ART_BEAT\020\001\022\010\n\004AUTH\020\002\022\r\n\tRECONNECT\020\003\022\020\n\014S"
    "ubscription\020\005\022\r\n\tSubscribe\020\006\022\017\n\013Unsubscr"
    "ibe\020\007\022\032\n\026QueryMarketTradePeriod\020\010\022\027\n\023Que"
    "ryMarketTradeDay\020\t\022\033\n\027QuerySecurityStati"
    "cInfo\020\n\022\026\n\022QuerySecurityQuote\020\013\022\024\n\020Query"
    "OptionQuote\020\014\022\025\n\021QueryWarrantQuote\020\r\022\016\n\n"
    "QueryDepth\020\016\022\020\n\014QueryBrokers\020\017\022\035\n\031QueryP"
    "articipantBrokerIds\020\020\022\016\n\nQueryTrade\020\021\022\021\n"
    "\rQueryIntraday\020\022\022\024\n\020QueryCandlestick\020\023\022\030"
    "\n\024QueryOptionChainDate\020\024\022\"\n\036QueryOptionC"
    "hainDateStrikeInfo\020\025\022\032\n\026QueryWarrantIssu"
    "erInfo\020\026\022\032\n\026QueryWarrantFilterList\020\027\022\034\n\030"
    "QueryCapitalFlowIntraday\020\030\022 \n\034QueryCapit"
    "alFlowDistribution\020\031\022\032\n\026QuerySecurityCal"
    "cIndex\020\032\022\033\n\027QueryHistoryCandlestick\020\033\022\021\n"
    "\rPushQuoteData\020e\022\021\n\rPushDepthData\020f\022\023\n\017P"
    "ushBrokersData\020g\022\021\n\rPushTradeData\020h*\302\001\n\013"
    "TradeStatus\022\n\n\006NORMAL\020\000\022\n\n\006HALTED\020\001\022\014\n\010D"
    "ELISTED\020\002\022\010\n\004FUSE\020\003\022\020\n\014PREPARE_LIST\020\004\022\016\n"
    "\nCODE_MOVED\020\005\022\020\n\014TO_BE_OPENED\020\006\022\025\n\021SPLIT"
    "_STOCK_HALTS\020\007\022\013\n\007EXPIRED\020\010\022\030\n\024WARRANT_P"
    "REPARE_LIST\020\t\022\021\n\rSUSPEND_TRADE\020\n*\?\n\014Trad"
    "eSession\022\020\n\014NORMAL_TRADE\020\000\022\r\n\tPRE_TRADE\020"
    "\001\022\016\n\nPOST_TRADE\020\002*/\n\nAdjustType\022\r\n\tNO_AD"
    "JUST\020\000\022\022\n\016FORWARD_ADJUST\020\001*\242\001\n\006Period\022\022\n"
    "\016UNKNOWN_PERIOD\020\000\022\016\n\nONE_MINUTE\020\001\022\017\n\013FIV"
    "E_MINUTE\020\005\022\022\n\016FIFTEEN_MINUTE\020\017\022\021\n\rTHIRTY"
    "_MINUTE\020\036\022\020\n\014SIXTY_MINUTE\020<\022\010\n\003DAY\020\350\007\022\t\n"
    "\004WEEK\020\320\017\022\n\n\005MONTH\020\270\027\022\t\n\004YEAR\020\240\037*I\n\007SubTy"
    "pe\022\020\n\014UNKNOWN_TYPE\020\000\022\t\n\005QUOTE\020\001\022\t\n\005DEPTH"
    "\020\002\022\013\n\007BROKERS\020\003\022\t\n\005TRADE\020\004*\226\t\n\tCalcIndex"
    "\022\025\n\021CALCINDEX_UNKNOWN\020\000\022\027\n\023CALCINDEX_LAS"
    "T_DONE\020\001\022\030\n\024CALCINDEX_CHANGE_VAL\020\002\022\031\n\025CA"
    "LCINDEX_CHANGE_RATE\020\003\022\024\n\020CALCINDEX_VOLUM"
    "E\020\004\022\026\n\022CALCINDEX_TURNOVER\020\005\022\035\n\031CALCINDEX"
    "_YTD_CHANGE_RATE\020\006\022\033\n\027CALCINDEX_TURNOVER"
    "_RATE\020\007\022 \n\034CALCINDEX_TOTAL_MARKET_VALUE\020"
    "\010\022\032\n\026CALCINDEX_CAPITAL_FLOW\020\t\022\027\n\023CALCIND"
    "EX_AMPLITUDE\020\n\022\032\n\026CALCINDEX_VOLUME_RATIO"
    "\020\013\022\032\n\026CALCINDEX_PE_TTM_RATIO\020\014\022\026\n\022CALCIN"
    "DEX_PB_RATIO\020\r\022 \n\034CALCINDEX_DIVIDEND_RAT"
    "IO_TTM\020\016\022\"\n\036CALCINDEX_FIVE_DAY_CHANGE_RA"
    "TE\020\017\022!\n\035CALCINDEX_TEN_DAY_CHANGE_RATE\020\020\022"
    "#\n\037CALCINDEX_HALF_YEAR_CHANGE_RATE\020\021\022&\n\""
    "CALCINDEX_FIVE_MINUTES_CHANGE_RATE\020\022\022\031\n\025"
    "CALCINDEX_EXPIRY_DATE\020\023\022\032\n\026CALCINDEX_STR"
    "IKE_PRICE\020\024\022 \n\034CALCINDEX_UPPER_STRIKE_PR"
    "ICE\020\025\022 \n\034CALCINDEX_LOWER_STRIKE_PRICE\020\026\022"
    "\035\n\031CALCINDEX_OUTSTANDING_QTY\020\027\022\037\n\033CALCIN"
    "DEX_OUTSTANDING_RATIO\020\030\022\025\n\021CALCINDEX_PRE"
    "MIUM\020\031\022\025\n\021CALCINDEX_ITM_OTM\020\032\022 \n\034CALCIND"
    "EX_IMPLIED_VOLATILITY\020\033\022\033\n\027CALCINDEX_WAR"
    "RANT_DELTA\020\034\022\030\n\024CALCINDEX_CALL_PRICE\020\035\022\033"
    "\n\027CALCINDEX_TO_CALL_PRICE\020\036\022 \n\034CALCINDEX"
    "_EFFECTIVE_LEVERAGE\020\037\022\034\n\030CALCINDEX_LEVER"
    "AGE_RATIO\020 \022\036\n\032CALCINDEX_CONVERSION_RATI"
    "O\020!\022\033\n\027CALCINDEX_BALANCE_POINT\020\"\022\033\n\027CALC"
    "INDEX_OPEN_INTEREST\020#\022\023\n\017CALCINDEX_DELTA"
    "\020$\022\023\n\017CALCINDEX_GAMMA\020%\022\023\n\017CALCINDEX_THE"
    "TA\020&\022\022\n\016CALCINDEX_VEGA\020\'\022\021\n\rCALCINDEX_RH"
    "O\020(*]\n\033HistoryCandlestickQueryType\022\026\n\022UN"
    "KNOWN_QUERY_TYPE\020\000\022\023\n\017QUERY_BY_OFFSET\020\001\022"
    "\021\n\rQUERY_BY_DATE\020\002*&\n\tDirection\022\014\n\010BACKW"
    "ARD\020\000\022\013\n\007FORWARD\020\001B\325\001\n\030com.longportapp.q"
    "uote.v1B\010ApiProtoP\001Z=github.com/longport"
    "app/openapi-protobufs/gen/go/quote;quote"
    "v1\242\002\003LQX\252\002\024Longportapp.Quote.V1\312\002\024Longpo"
    "rtapp\\Quote\\V1\342\002 Longportapp\\Quote\\V1\\GP"
    "BMetadata\352\002\026Longportapp::Quote::V1b\006prot"
    "o3"
};
static ::absl::once_flag descriptor_table_quote_2fapi_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_quote_2fapi_2eproto = {
    false,
    false,
    15282,
    descriptor_table_protodef_quote_2fapi_2eproto,
    "quote/api.proto",
    &descriptor_table_quote_2fapi_2eproto_once,
    nullptr,
    0,
    64,
    schemas,
    file_default_instances,
    TableStruct_quote_2fapi_2eproto::offsets,
    file_level_metadata_quote_2fapi_2eproto,
    file_level_enum_descriptors_quote_2fapi_2eproto,
    file_level_service_descriptors_quote_2fapi_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_quote_2fapi_2eproto_getter() {
  return &descriptor_table_quote_2fapi_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_quote_2fapi_2eproto(&descriptor_table_quote_2fapi_2eproto);
namespace longportapp {
namespace quote {
namespace v1 {
const ::google::protobuf::EnumDescriptor* Command_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_quote_2fapi_2eproto);
  return file_level_enum_descriptors_quote_2fapi_2eproto[0];
}
bool Command_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 101:
    case 102:
    case 103:
    case 104:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* TradeStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_quote_2fapi_2eproto);
  return file_level_enum_descriptors_quote_2fapi_2eproto[1];
}
bool TradeStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* TradeSession_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_quote_2fapi_2eproto);
  return file_level_enum_descriptors_quote_2fapi_2eproto[2];
}
bool TradeSession_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* AdjustType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_quote_2fapi_2eproto);
  return file_level_enum_descriptors_quote_2fapi_2eproto[3];
}
bool AdjustType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* Period_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_quote_2fapi_2eproto);
  return file_level_enum_descriptors_quote_2fapi_2eproto[4];
}
bool Period_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5:
    case 15:
    case 30:
    case 60:
    case 1000:
    case 2000:
    case 3000:
    case 4000:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* SubType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_quote_2fapi_2eproto);
  return file_level_enum_descriptors_quote_2fapi_2eproto[5];
}
bool SubType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* CalcIndex_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_quote_2fapi_2eproto);
  return file_level_enum_descriptors_quote_2fapi_2eproto[6];
}
bool CalcIndex_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* HistoryCandlestickQueryType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_quote_2fapi_2eproto);
  return file_level_enum_descriptors_quote_2fapi_2eproto[7];
}
bool HistoryCandlestickQueryType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* Direction_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_quote_2fapi_2eproto);
  return file_level_enum_descriptors_quote_2fapi_2eproto[8];
}
bool Direction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class SecurityRequest::_Internal {
 public:
};

SecurityRequest::SecurityRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityRequest)
}
SecurityRequest::SecurityRequest(const SecurityRequest& from) : ::google::protobuf::Message() {
  SecurityRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityRequest)
}
inline void SecurityRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SecurityRequest::~SecurityRequest() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
}
void SecurityRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 51, 2> SecurityRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SecurityRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityRequest, _impl_.symbol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SecurityRequest, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\6\0\0\0\0\0\0"
    "longportapp.quote.v1.SecurityRequest"
    "symbol"
  }},
};

::uint8_t* SecurityRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityRequest.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityRequest)
  return target;
}

::size_t SecurityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityRequest::GetClassData() const { return &_class_data_; }


void SecurityRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityRequest*>(&to_msg);
  auto& from = static_cast<const SecurityRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityRequest::CopyFrom(const SecurityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityRequest::IsInitialized() const {
  return true;
}

void SecurityRequest::InternalSwap(SecurityRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
}

::google::protobuf::Metadata SecurityRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[0]);
}
// ===================================================================

class MultiSecurityRequest::_Internal {
 public:
};

MultiSecurityRequest::MultiSecurityRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.MultiSecurityRequest)
}
MultiSecurityRequest::MultiSecurityRequest(const MultiSecurityRequest& from) : ::google::protobuf::Message() {
  MultiSecurityRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){from._impl_.symbol_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.MultiSecurityRequest)
}
inline void MultiSecurityRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
MultiSecurityRequest::~MultiSecurityRequest() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.MultiSecurityRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MultiSecurityRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_symbol()->~RepeatedPtrField();
}
void MultiSecurityRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MultiSecurityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.MultiSecurityRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_symbol()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MultiSecurityRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 56, 2> MultiSecurityRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MultiSecurityRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MultiSecurityRequest, _impl_.symbol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(MultiSecurityRequest, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\51\6\0\0\0\0\0\0"
    "longportapp.quote.v1.MultiSecurityRequest"
    "symbol"
  }},
};

::uint8_t* MultiSecurityRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.MultiSecurityRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string symbol = 1 [json_name = "symbol"];
  for (int i = 0, n = this->_internal_symbol_size(); i < n; ++i) {
    const auto& s = this->_internal_symbol().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.MultiSecurityRequest.symbol");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.MultiSecurityRequest)
  return target;
}

::size_t MultiSecurityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.MultiSecurityRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string symbol = 1 [json_name = "symbol"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_symbol().size());
  for (int i = 0, n = _internal_symbol().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_symbol().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MultiSecurityRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MultiSecurityRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*MultiSecurityRequest::GetClassData() const { return &_class_data_; }


void MultiSecurityRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MultiSecurityRequest*>(&to_msg);
  auto& from = static_cast<const MultiSecurityRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.MultiSecurityRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_symbol()->MergeFrom(from._internal_symbol());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MultiSecurityRequest::CopyFrom(const MultiSecurityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.MultiSecurityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MultiSecurityRequest::IsInitialized() const {
  return true;
}

void MultiSecurityRequest::InternalSwap(MultiSecurityRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.symbol_.InternalSwap(&other->_impl_.symbol_);
}

::google::protobuf::Metadata MultiSecurityRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[1]);
}
// ===================================================================

class SecurityStaticInfoResponse::_Internal {
 public:
};

SecurityStaticInfoResponse::SecurityStaticInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityStaticInfoResponse)
}
SecurityStaticInfoResponse::SecurityStaticInfoResponse(const SecurityStaticInfoResponse& from) : ::google::protobuf::Message() {
  SecurityStaticInfoResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.secu_static_info_){from._impl_.secu_static_info_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityStaticInfoResponse)
}
inline void SecurityStaticInfoResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.secu_static_info_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SecurityStaticInfoResponse::~SecurityStaticInfoResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityStaticInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityStaticInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.secu_static_info_.~RepeatedPtrField();
}
void SecurityStaticInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityStaticInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityStaticInfoResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_secu_static_info()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityStaticInfoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SecurityStaticInfoResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SecurityStaticInfoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.StaticInfo secu_static_info = 1 [json_name = "secuStaticInfo"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityStaticInfoResponse, _impl_.secu_static_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .longportapp.quote.v1.StaticInfo secu_static_info = 1 [json_name = "secuStaticInfo"];
    {PROTOBUF_FIELD_OFFSET(SecurityStaticInfoResponse, _impl_.secu_static_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::StaticInfo>()},
  }}, {{
  }},
};

::uint8_t* SecurityStaticInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityStaticInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .longportapp.quote.v1.StaticInfo secu_static_info = 1 [json_name = "secuStaticInfo"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_secu_static_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_secu_static_info().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityStaticInfoResponse)
  return target;
}

::size_t SecurityStaticInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityStaticInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.StaticInfo secu_static_info = 1 [json_name = "secuStaticInfo"];
  total_size += 1UL * this->_internal_secu_static_info_size();
  for (const auto& msg : this->_internal_secu_static_info()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityStaticInfoResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityStaticInfoResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityStaticInfoResponse::GetClassData() const { return &_class_data_; }


void SecurityStaticInfoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityStaticInfoResponse*>(&to_msg);
  auto& from = static_cast<const SecurityStaticInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityStaticInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_secu_static_info()->MergeFrom(from._internal_secu_static_info());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityStaticInfoResponse::CopyFrom(const SecurityStaticInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityStaticInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityStaticInfoResponse::IsInitialized() const {
  return true;
}

void SecurityStaticInfoResponse::InternalSwap(SecurityStaticInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.secu_static_info_.InternalSwap(&other->_impl_.secu_static_info_);
}

::google::protobuf::Metadata SecurityStaticInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[2]);
}
// ===================================================================

class StaticInfo::_Internal {
 public:
};

StaticInfo::StaticInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.StaticInfo)
}
StaticInfo::StaticInfo(const StaticInfo& from) : ::google::protobuf::Message() {
  StaticInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stock_derivatives_){from._impl_.stock_derivatives_},
      /* _impl_._stock_derivatives_cached_byte_size_ = */ {0},
      decltype(_impl_.symbol_){},
      decltype(_impl_.name_cn_){},
      decltype(_impl_.name_en_){},
      decltype(_impl_.name_hk_){},
      decltype(_impl_.listing_date_){},
      decltype(_impl_.exchange_){},
      decltype(_impl_.currency_){},
      decltype(_impl_.eps_){},
      decltype(_impl_.eps_ttm_){},
      decltype(_impl_.bps_){},
      decltype(_impl_.dividend_yield_){},
      decltype(_impl_.board_){},
      decltype(_impl_.total_shares_){},
      decltype(_impl_.circulating_shares_){},
      decltype(_impl_.hk_shares_){},
      decltype(_impl_.lot_size_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  _impl_.name_cn_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_cn_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name_cn().empty()) {
    _this->_impl_.name_cn_.Set(from._internal_name_cn(), _this->GetArenaForAllocation());
  }
  _impl_.name_en_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_en_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name_en().empty()) {
    _this->_impl_.name_en_.Set(from._internal_name_en(), _this->GetArenaForAllocation());
  }
  _impl_.name_hk_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_hk_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name_hk().empty()) {
    _this->_impl_.name_hk_.Set(from._internal_name_hk(), _this->GetArenaForAllocation());
  }
  _impl_.listing_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.listing_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_listing_date().empty()) {
    _this->_impl_.listing_date_.Set(from._internal_listing_date(), _this->GetArenaForAllocation());
  }
  _impl_.exchange_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.exchange_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_exchange().empty()) {
    _this->_impl_.exchange_.Set(from._internal_exchange(), _this->GetArenaForAllocation());
  }
  _impl_.currency_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.currency_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_currency().empty()) {
    _this->_impl_.currency_.Set(from._internal_currency(), _this->GetArenaForAllocation());
  }
  _impl_.eps_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eps_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_eps().empty()) {
    _this->_impl_.eps_.Set(from._internal_eps(), _this->GetArenaForAllocation());
  }
  _impl_.eps_ttm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eps_ttm_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_eps_ttm().empty()) {
    _this->_impl_.eps_ttm_.Set(from._internal_eps_ttm(), _this->GetArenaForAllocation());
  }
  _impl_.bps_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bps_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_bps().empty()) {
    _this->_impl_.bps_.Set(from._internal_bps(), _this->GetArenaForAllocation());
  }
  _impl_.dividend_yield_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dividend_yield_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dividend_yield().empty()) {
    _this->_impl_.dividend_yield_.Set(from._internal_dividend_yield(), _this->GetArenaForAllocation());
  }
  _impl_.board_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.board_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_board().empty()) {
    _this->_impl_.board_.Set(from._internal_board(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.total_shares_, &from._impl_.total_shares_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.lot_size_) -
    reinterpret_cast<char*>(&_impl_.total_shares_)) + sizeof(_impl_.lot_size_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.StaticInfo)
}
inline void StaticInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.stock_derivatives_){arena},
      /* _impl_._stock_derivatives_cached_byte_size_ = */ {0},
      decltype(_impl_.symbol_){},
      decltype(_impl_.name_cn_){},
      decltype(_impl_.name_en_){},
      decltype(_impl_.name_hk_){},
      decltype(_impl_.listing_date_){},
      decltype(_impl_.exchange_){},
      decltype(_impl_.currency_){},
      decltype(_impl_.eps_){},
      decltype(_impl_.eps_ttm_){},
      decltype(_impl_.bps_){},
      decltype(_impl_.dividend_yield_){},
      decltype(_impl_.board_){},
      decltype(_impl_.total_shares_){::int64_t{0}},
      decltype(_impl_.circulating_shares_){::int64_t{0}},
      decltype(_impl_.hk_shares_){::int64_t{0}},
      decltype(_impl_.lot_size_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_cn_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_cn_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_en_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_en_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_hk_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_hk_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.listing_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.listing_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.exchange_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.exchange_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.currency_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.currency_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.eps_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eps_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.eps_ttm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.eps_ttm_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.bps_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.bps_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dividend_yield_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dividend_yield_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.board_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.board_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
StaticInfo::~StaticInfo() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.StaticInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StaticInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stock_derivatives_.~RepeatedField();
  _impl_.symbol_.Destroy();
  _impl_.name_cn_.Destroy();
  _impl_.name_en_.Destroy();
  _impl_.name_hk_.Destroy();
  _impl_.listing_date_.Destroy();
  _impl_.exchange_.Destroy();
  _impl_.currency_.Destroy();
  _impl_.eps_.Destroy();
  _impl_.eps_ttm_.Destroy();
  _impl_.bps_.Destroy();
  _impl_.dividend_yield_.Destroy();
  _impl_.board_.Destroy();
}
void StaticInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void StaticInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.StaticInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_stock_derivatives()->Clear();
  _impl_.symbol_.ClearToEmpty();
  _impl_.name_cn_.ClearToEmpty();
  _impl_.name_en_.ClearToEmpty();
  _impl_.name_hk_.ClearToEmpty();
  _impl_.listing_date_.ClearToEmpty();
  _impl_.exchange_.ClearToEmpty();
  _impl_.currency_.ClearToEmpty();
  _impl_.eps_.ClearToEmpty();
  _impl_.eps_ttm_.ClearToEmpty();
  _impl_.bps_.ClearToEmpty();
  _impl_.dividend_yield_.ClearToEmpty();
  _impl_.board_.ClearToEmpty();
  ::memset(&_impl_.total_shares_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.lot_size_) -
      reinterpret_cast<char*>(&_impl_.total_shares_)) + sizeof(_impl_.lot_size_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StaticInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 17, 0, 143, 2> StaticInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    17, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294836224,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StaticInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.symbol_)}},
    // string name_cn = 2 [json_name = "nameCn"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.name_cn_)}},
    // string name_en = 3 [json_name = "nameEn"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.name_en_)}},
    // string name_hk = 4 [json_name = "nameHk"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.name_hk_)}},
    // string listing_date = 5 [json_name = "listingDate"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.listing_date_)}},
    // string exchange = 6 [json_name = "exchange"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.exchange_)}},
    // string currency = 7 [json_name = "currency"];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.currency_)}},
    // int32 lot_size = 8 [json_name = "lotSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StaticInfo, _impl_.lot_size_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.lot_size_)}},
    // int64 total_shares = 9 [json_name = "totalShares"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StaticInfo, _impl_.total_shares_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.total_shares_)}},
    // int64 circulating_shares = 10 [json_name = "circulatingShares"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StaticInfo, _impl_.circulating_shares_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.circulating_shares_)}},
    // int64 hk_shares = 11 [json_name = "hkShares"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StaticInfo, _impl_.hk_shares_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.hk_shares_)}},
    // string eps = 12 [json_name = "eps"];
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.eps_)}},
    // string eps_ttm = 13 [json_name = "epsTtm"];
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.eps_ttm_)}},
    // string bps = 14 [json_name = "bps"];
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.bps_)}},
    // string dividend_yield = 15 [json_name = "dividendYield"];
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.dividend_yield_)}},
    // repeated int32 stock_derivatives = 16 [json_name = "stockDerivatives"];
    {::_pbi::TcParser::FastV32P2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.stock_derivatives_)}},
    // string board = 17 [json_name = "board"];
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.board_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name_cn = 2 [json_name = "nameCn"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.name_cn_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name_en = 3 [json_name = "nameEn"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.name_en_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name_hk = 4 [json_name = "nameHk"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.name_hk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string listing_date = 5 [json_name = "listingDate"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.listing_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string exchange = 6 [json_name = "exchange"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.exchange_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string currency = 7 [json_name = "currency"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.currency_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 lot_size = 8 [json_name = "lotSize"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.lot_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 total_shares = 9 [json_name = "totalShares"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.total_shares_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 circulating_shares = 10 [json_name = "circulatingShares"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.circulating_shares_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 hk_shares = 11 [json_name = "hkShares"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.hk_shares_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string eps = 12 [json_name = "eps"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.eps_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string eps_ttm = 13 [json_name = "epsTtm"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.eps_ttm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string bps = 14 [json_name = "bps"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.bps_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string dividend_yield = 15 [json_name = "dividendYield"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.dividend_yield_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated int32 stock_derivatives = 16 [json_name = "stockDerivatives"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.stock_derivatives_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // string board = 17 [json_name = "board"];
    {PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.board_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\6\7\7\7\14\10\10\0\0\0\0\3\7\3\16\0\5\0\0\0\0\0\0"
    "longportapp.quote.v1.StaticInfo"
    "symbol"
    "name_cn"
    "name_en"
    "name_hk"
    "listing_date"
    "exchange"
    "currency"
    "eps"
    "eps_ttm"
    "bps"
    "dividend_yield"
    "board"
  }},
};

::uint8_t* StaticInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.StaticInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StaticInfo.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name_cn = 2 [json_name = "nameCn"];
  if (!this->_internal_name_cn().empty()) {
    const std::string& _s = this->_internal_name_cn();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StaticInfo.name_cn");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string name_en = 3 [json_name = "nameEn"];
  if (!this->_internal_name_en().empty()) {
    const std::string& _s = this->_internal_name_en();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StaticInfo.name_en");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string name_hk = 4 [json_name = "nameHk"];
  if (!this->_internal_name_hk().empty()) {
    const std::string& _s = this->_internal_name_hk();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StaticInfo.name_hk");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string listing_date = 5 [json_name = "listingDate"];
  if (!this->_internal_listing_date().empty()) {
    const std::string& _s = this->_internal_listing_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StaticInfo.listing_date");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string exchange = 6 [json_name = "exchange"];
  if (!this->_internal_exchange().empty()) {
    const std::string& _s = this->_internal_exchange();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StaticInfo.exchange");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string currency = 7 [json_name = "currency"];
  if (!this->_internal_currency().empty()) {
    const std::string& _s = this->_internal_currency();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StaticInfo.currency");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // int32 lot_size = 8 [json_name = "lotSize"];
  if (this->_internal_lot_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_lot_size(), target);
  }

  // int64 total_shares = 9 [json_name = "totalShares"];
  if (this->_internal_total_shares() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<9>(
            stream, this->_internal_total_shares(), target);
  }

  // int64 circulating_shares = 10 [json_name = "circulatingShares"];
  if (this->_internal_circulating_shares() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<10>(
            stream, this->_internal_circulating_shares(), target);
  }

  // int64 hk_shares = 11 [json_name = "hkShares"];
  if (this->_internal_hk_shares() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<11>(
            stream, this->_internal_hk_shares(), target);
  }

  // string eps = 12 [json_name = "eps"];
  if (!this->_internal_eps().empty()) {
    const std::string& _s = this->_internal_eps();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StaticInfo.eps");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // string eps_ttm = 13 [json_name = "epsTtm"];
  if (!this->_internal_eps_ttm().empty()) {
    const std::string& _s = this->_internal_eps_ttm();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StaticInfo.eps_ttm");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // string bps = 14 [json_name = "bps"];
  if (!this->_internal_bps().empty()) {
    const std::string& _s = this->_internal_bps();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StaticInfo.bps");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // string dividend_yield = 15 [json_name = "dividendYield"];
  if (!this->_internal_dividend_yield().empty()) {
    const std::string& _s = this->_internal_dividend_yield();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StaticInfo.dividend_yield");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  // repeated int32 stock_derivatives = 16 [json_name = "stockDerivatives"];
  {
    int byte_size = _impl_._stock_derivatives_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(16, _internal_stock_derivatives(),
                                                 byte_size, target);
    }
  }

  // string board = 17 [json_name = "board"];
  if (!this->_internal_board().empty()) {
    const std::string& _s = this->_internal_board();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StaticInfo.board");
    target = stream->WriteStringMaybeAliased(17, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.StaticInfo)
  return target;
}

::size_t StaticInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.StaticInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 stock_derivatives = 16 [json_name = "stockDerivatives"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_stock_derivatives())
    ;
    _impl_._stock_derivatives_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 2 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // string name_cn = 2 [json_name = "nameCn"];
  if (!this->_internal_name_cn().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name_cn());
  }

  // string name_en = 3 [json_name = "nameEn"];
  if (!this->_internal_name_en().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name_en());
  }

  // string name_hk = 4 [json_name = "nameHk"];
  if (!this->_internal_name_hk().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name_hk());
  }

  // string listing_date = 5 [json_name = "listingDate"];
  if (!this->_internal_listing_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_listing_date());
  }

  // string exchange = 6 [json_name = "exchange"];
  if (!this->_internal_exchange().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_exchange());
  }

  // string currency = 7 [json_name = "currency"];
  if (!this->_internal_currency().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_currency());
  }

  // string eps = 12 [json_name = "eps"];
  if (!this->_internal_eps().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_eps());
  }

  // string eps_ttm = 13 [json_name = "epsTtm"];
  if (!this->_internal_eps_ttm().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_eps_ttm());
  }

  // string bps = 14 [json_name = "bps"];
  if (!this->_internal_bps().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_bps());
  }

  // string dividend_yield = 15 [json_name = "dividendYield"];
  if (!this->_internal_dividend_yield().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dividend_yield());
  }

  // string board = 17 [json_name = "board"];
  if (!this->_internal_board().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_board());
  }

  // int64 total_shares = 9 [json_name = "totalShares"];
  if (this->_internal_total_shares() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_total_shares());
  }

  // int64 circulating_shares = 10 [json_name = "circulatingShares"];
  if (this->_internal_circulating_shares() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_circulating_shares());
  }

  // int64 hk_shares = 11 [json_name = "hkShares"];
  if (this->_internal_hk_shares() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_hk_shares());
  }

  // int32 lot_size = 8 [json_name = "lotSize"];
  if (this->_internal_lot_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_lot_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StaticInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    StaticInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*StaticInfo::GetClassData() const { return &_class_data_; }


void StaticInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StaticInfo*>(&to_msg);
  auto& from = static_cast<const StaticInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.StaticInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stock_derivatives()->MergeFrom(from._internal_stock_derivatives());
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_name_cn().empty()) {
    _this->_internal_set_name_cn(from._internal_name_cn());
  }
  if (!from._internal_name_en().empty()) {
    _this->_internal_set_name_en(from._internal_name_en());
  }
  if (!from._internal_name_hk().empty()) {
    _this->_internal_set_name_hk(from._internal_name_hk());
  }
  if (!from._internal_listing_date().empty()) {
    _this->_internal_set_listing_date(from._internal_listing_date());
  }
  if (!from._internal_exchange().empty()) {
    _this->_internal_set_exchange(from._internal_exchange());
  }
  if (!from._internal_currency().empty()) {
    _this->_internal_set_currency(from._internal_currency());
  }
  if (!from._internal_eps().empty()) {
    _this->_internal_set_eps(from._internal_eps());
  }
  if (!from._internal_eps_ttm().empty()) {
    _this->_internal_set_eps_ttm(from._internal_eps_ttm());
  }
  if (!from._internal_bps().empty()) {
    _this->_internal_set_bps(from._internal_bps());
  }
  if (!from._internal_dividend_yield().empty()) {
    _this->_internal_set_dividend_yield(from._internal_dividend_yield());
  }
  if (!from._internal_board().empty()) {
    _this->_internal_set_board(from._internal_board());
  }
  if (from._internal_total_shares() != 0) {
    _this->_internal_set_total_shares(from._internal_total_shares());
  }
  if (from._internal_circulating_shares() != 0) {
    _this->_internal_set_circulating_shares(from._internal_circulating_shares());
  }
  if (from._internal_hk_shares() != 0) {
    _this->_internal_set_hk_shares(from._internal_hk_shares());
  }
  if (from._internal_lot_size() != 0) {
    _this->_internal_set_lot_size(from._internal_lot_size());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StaticInfo::CopyFrom(const StaticInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.StaticInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StaticInfo::IsInitialized() const {
  return true;
}

void StaticInfo::InternalSwap(StaticInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.stock_derivatives_.InternalSwap(&other->_impl_.stock_derivatives_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_cn_, lhs_arena,
                                       &other->_impl_.name_cn_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_en_, lhs_arena,
                                       &other->_impl_.name_en_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_hk_, lhs_arena,
                                       &other->_impl_.name_hk_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.listing_date_, lhs_arena,
                                       &other->_impl_.listing_date_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_, lhs_arena,
                                       &other->_impl_.exchange_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, lhs_arena,
                                       &other->_impl_.currency_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.eps_, lhs_arena,
                                       &other->_impl_.eps_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.eps_ttm_, lhs_arena,
                                       &other->_impl_.eps_ttm_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bps_, lhs_arena,
                                       &other->_impl_.bps_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dividend_yield_, lhs_arena,
                                       &other->_impl_.dividend_yield_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.board_, lhs_arena,
                                       &other->_impl_.board_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.lot_size_)
      + sizeof(StaticInfo::_impl_.lot_size_)
      - PROTOBUF_FIELD_OFFSET(StaticInfo, _impl_.total_shares_)>(
          reinterpret_cast<char*>(&_impl_.total_shares_),
          reinterpret_cast<char*>(&other->_impl_.total_shares_));
}

::google::protobuf::Metadata StaticInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[3]);
}
// ===================================================================

class SecurityQuoteResponse::_Internal {
 public:
};

SecurityQuoteResponse::SecurityQuoteResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityQuoteResponse)
}
SecurityQuoteResponse::SecurityQuoteResponse(const SecurityQuoteResponse& from) : ::google::protobuf::Message() {
  SecurityQuoteResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.secu_quote_){from._impl_.secu_quote_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityQuoteResponse)
}
inline void SecurityQuoteResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.secu_quote_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SecurityQuoteResponse::~SecurityQuoteResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityQuoteResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityQuoteResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.secu_quote_.~RepeatedPtrField();
}
void SecurityQuoteResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityQuoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityQuoteResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_secu_quote()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityQuoteResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SecurityQuoteResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SecurityQuoteResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.SecurityQuote secu_quote = 1 [json_name = "secuQuote"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityQuoteResponse, _impl_.secu_quote_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .longportapp.quote.v1.SecurityQuote secu_quote = 1 [json_name = "secuQuote"];
    {PROTOBUF_FIELD_OFFSET(SecurityQuoteResponse, _impl_.secu_quote_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::SecurityQuote>()},
  }}, {{
  }},
};

::uint8_t* SecurityQuoteResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityQuoteResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .longportapp.quote.v1.SecurityQuote secu_quote = 1 [json_name = "secuQuote"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_secu_quote_size()); i < n; i++) {
    const auto& repfield = this->_internal_secu_quote().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityQuoteResponse)
  return target;
}

::size_t SecurityQuoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityQuoteResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.SecurityQuote secu_quote = 1 [json_name = "secuQuote"];
  total_size += 1UL * this->_internal_secu_quote_size();
  for (const auto& msg : this->_internal_secu_quote()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityQuoteResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityQuoteResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityQuoteResponse::GetClassData() const { return &_class_data_; }


void SecurityQuoteResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityQuoteResponse*>(&to_msg);
  auto& from = static_cast<const SecurityQuoteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityQuoteResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_secu_quote()->MergeFrom(from._internal_secu_quote());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityQuoteResponse::CopyFrom(const SecurityQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityQuoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityQuoteResponse::IsInitialized() const {
  return true;
}

void SecurityQuoteResponse::InternalSwap(SecurityQuoteResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.secu_quote_.InternalSwap(&other->_impl_.secu_quote_);
}

::google::protobuf::Metadata SecurityQuoteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[4]);
}
// ===================================================================

class SecurityQuote::_Internal {
 public:
  using HasBits = decltype(std::declval<SecurityQuote>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_._has_bits_);
  static const ::longportapp::quote::v1::PrePostQuote& pre_market_quote(const SecurityQuote* msg);
  static void set_has_pre_market_quote(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::longportapp::quote::v1::PrePostQuote& post_market_quote(const SecurityQuote* msg);
  static void set_has_post_market_quote(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::longportapp::quote::v1::PrePostQuote& SecurityQuote::_Internal::pre_market_quote(const SecurityQuote* msg) {
  return *msg->_impl_.pre_market_quote_;
}
const ::longportapp::quote::v1::PrePostQuote& SecurityQuote::_Internal::post_market_quote(const SecurityQuote* msg) {
  return *msg->_impl_.post_market_quote_;
}
SecurityQuote::SecurityQuote(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityQuote)
}
SecurityQuote::SecurityQuote(const SecurityQuote& from) : ::google::protobuf::Message() {
  SecurityQuote* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.symbol_){},
      decltype(_impl_.last_done_){},
      decltype(_impl_.prev_close_){},
      decltype(_impl_.open_){},
      decltype(_impl_.high_){},
      decltype(_impl_.low_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.pre_market_quote_){nullptr},
      decltype(_impl_.post_market_quote_){nullptr},
      decltype(_impl_.timestamp_){},
      decltype(_impl_.volume_){},
      decltype(_impl_.trade_status_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  _impl_.last_done_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_done_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_done().empty()) {
    _this->_impl_.last_done_.Set(from._internal_last_done(), _this->GetArenaForAllocation());
  }
  _impl_.prev_close_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.prev_close_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_prev_close().empty()) {
    _this->_impl_.prev_close_.Set(from._internal_prev_close(), _this->GetArenaForAllocation());
  }
  _impl_.open_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_open().empty()) {
    _this->_impl_.open_.Set(from._internal_open(), _this->GetArenaForAllocation());
  }
  _impl_.high_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.high_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_high().empty()) {
    _this->_impl_.high_.Set(from._internal_high(), _this->GetArenaForAllocation());
  }
  _impl_.low_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.low_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_low().empty()) {
    _this->_impl_.low_.Set(from._internal_low(), _this->GetArenaForAllocation());
  }
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_turnover().empty()) {
    _this->_impl_.turnover_.Set(from._internal_turnover(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.pre_market_quote_ = new ::longportapp::quote::v1::PrePostQuote(*from._impl_.pre_market_quote_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.post_market_quote_ = new ::longportapp::quote::v1::PrePostQuote(*from._impl_.post_market_quote_);
  }
  ::memcpy(&_impl_.timestamp_, &from._impl_.timestamp_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.trade_status_) -
    reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.trade_status_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityQuote)
}
inline void SecurityQuote::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.symbol_){},
      decltype(_impl_.last_done_){},
      decltype(_impl_.prev_close_){},
      decltype(_impl_.open_){},
      decltype(_impl_.high_){},
      decltype(_impl_.low_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.pre_market_quote_){nullptr},
      decltype(_impl_.post_market_quote_){nullptr},
      decltype(_impl_.timestamp_){::int64_t{0}},
      decltype(_impl_.volume_){::int64_t{0}},
      decltype(_impl_.trade_status_){0},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.last_done_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_done_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.prev_close_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.prev_close_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.open_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.high_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.high_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.low_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.low_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SecurityQuote::~SecurityQuote() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityQuote)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityQuote::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
  _impl_.last_done_.Destroy();
  _impl_.prev_close_.Destroy();
  _impl_.open_.Destroy();
  _impl_.high_.Destroy();
  _impl_.low_.Destroy();
  _impl_.turnover_.Destroy();
  if (this != internal_default_instance()) delete _impl_.pre_market_quote_;
  if (this != internal_default_instance()) delete _impl_.post_market_quote_;
}
void SecurityQuote::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityQuote::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityQuote)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _impl_.last_done_.ClearToEmpty();
  _impl_.prev_close_.ClearToEmpty();
  _impl_.open_.ClearToEmpty();
  _impl_.high_.ClearToEmpty();
  _impl_.low_.ClearToEmpty();
  _impl_.turnover_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.pre_market_quote_ != nullptr);
      _impl_.pre_market_quote_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.post_market_quote_ != nullptr);
      _impl_.post_market_quote_->Clear();
    }
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.trade_status_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.trade_status_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityQuote::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 2, 95, 2> SecurityQuote::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_._has_bits_),
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SecurityQuote_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.symbol_)}},
    // string last_done = 2 [json_name = "lastDone"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.last_done_)}},
    // string prev_close = 3 [json_name = "prevClose"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.prev_close_)}},
    // string open = 4 [json_name = "open"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.open_)}},
    // string high = 5 [json_name = "high"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.high_)}},
    // string low = 6 [json_name = "low"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.low_)}},
    // int64 timestamp = 7 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SecurityQuote, _impl_.timestamp_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.timestamp_)}},
    // int64 volume = 8 [json_name = "volume"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SecurityQuote, _impl_.volume_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.volume_)}},
    // string turnover = 9 [json_name = "turnover"];
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.turnover_)}},
    // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SecurityQuote, _impl_.trade_status_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.trade_status_)}},
    // .longportapp.quote.v1.PrePostQuote pre_market_quote = 11 [json_name = "preMarketQuote"];
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 0, PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.pre_market_quote_)}},
    // .longportapp.quote.v1.PrePostQuote post_market_quote = 12 [json_name = "postMarketQuote"];
    {::_pbi::TcParser::FastMtS1,
     {98, 1, 1, PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.post_market_quote_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.symbol_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string last_done = 2 [json_name = "lastDone"];
    {PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.last_done_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string prev_close = 3 [json_name = "prevClose"];
    {PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.prev_close_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string open = 4 [json_name = "open"];
    {PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.open_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string high = 5 [json_name = "high"];
    {PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.high_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string low = 6 [json_name = "low"];
    {PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.low_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 7 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 volume = 8 [json_name = "volume"];
    {PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.volume_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string turnover = 9 [json_name = "turnover"];
    {PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.turnover_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
    {PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.trade_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .longportapp.quote.v1.PrePostQuote pre_market_quote = 11 [json_name = "preMarketQuote"];
    {PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.pre_market_quote_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .longportapp.quote.v1.PrePostQuote post_market_quote = 12 [json_name = "postMarketQuote"];
    {PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.post_market_quote_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::PrePostQuote>()},
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::PrePostQuote>()},
  }}, {{
    "\42\6\11\12\4\4\3\0\0\10\0\0\0\0\0\0"
    "longportapp.quote.v1.SecurityQuote"
    "symbol"
    "last_done"
    "prev_close"
    "open"
    "high"
    "low"
    "turnover"
  }},
};

::uint8_t* SecurityQuote::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityQuote)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityQuote.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string last_done = 2 [json_name = "lastDone"];
  if (!this->_internal_last_done().empty()) {
    const std::string& _s = this->_internal_last_done();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityQuote.last_done");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string prev_close = 3 [json_name = "prevClose"];
  if (!this->_internal_prev_close().empty()) {
    const std::string& _s = this->_internal_prev_close();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityQuote.prev_close");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string open = 4 [json_name = "open"];
  if (!this->_internal_open().empty()) {
    const std::string& _s = this->_internal_open();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityQuote.open");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string high = 5 [json_name = "high"];
  if (!this->_internal_high().empty()) {
    const std::string& _s = this->_internal_high();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityQuote.high");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string low = 6 [json_name = "low"];
  if (!this->_internal_low().empty()) {
    const std::string& _s = this->_internal_low();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityQuote.low");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // int64 timestamp = 7 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<7>(
            stream, this->_internal_timestamp(), target);
  }

  // int64 volume = 8 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<8>(
            stream, this->_internal_volume(), target);
  }

  // string turnover = 9 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    const std::string& _s = this->_internal_turnover();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityQuote.turnover");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
  if (this->_internal_trade_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        10, this->_internal_trade_status(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .longportapp.quote.v1.PrePostQuote pre_market_quote = 11 [json_name = "preMarketQuote"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::pre_market_quote(this),
        _Internal::pre_market_quote(this).GetCachedSize(), target, stream);
  }

  // .longportapp.quote.v1.PrePostQuote post_market_quote = 12 [json_name = "postMarketQuote"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::post_market_quote(this),
        _Internal::post_market_quote(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityQuote)
  return target;
}

::size_t SecurityQuote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityQuote)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // string last_done = 2 [json_name = "lastDone"];
  if (!this->_internal_last_done().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_last_done());
  }

  // string prev_close = 3 [json_name = "prevClose"];
  if (!this->_internal_prev_close().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_prev_close());
  }

  // string open = 4 [json_name = "open"];
  if (!this->_internal_open().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_open());
  }

  // string high = 5 [json_name = "high"];
  if (!this->_internal_high().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_high());
  }

  // string low = 6 [json_name = "low"];
  if (!this->_internal_low().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_low());
  }

  // string turnover = 9 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_turnover());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .longportapp.quote.v1.PrePostQuote pre_market_quote = 11 [json_name = "preMarketQuote"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.pre_market_quote_);
    }

    // .longportapp.quote.v1.PrePostQuote post_market_quote = 12 [json_name = "postMarketQuote"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.post_market_quote_);
    }

  }
  // int64 timestamp = 7 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // int64 volume = 8 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_volume());
  }

  // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
  if (this->_internal_trade_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_trade_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityQuote::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityQuote::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityQuote::GetClassData() const { return &_class_data_; }


void SecurityQuote::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityQuote*>(&to_msg);
  auto& from = static_cast<const SecurityQuote&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityQuote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_last_done().empty()) {
    _this->_internal_set_last_done(from._internal_last_done());
  }
  if (!from._internal_prev_close().empty()) {
    _this->_internal_set_prev_close(from._internal_prev_close());
  }
  if (!from._internal_open().empty()) {
    _this->_internal_set_open(from._internal_open());
  }
  if (!from._internal_high().empty()) {
    _this->_internal_set_high(from._internal_high());
  }
  if (!from._internal_low().empty()) {
    _this->_internal_set_low(from._internal_low());
  }
  if (!from._internal_turnover().empty()) {
    _this->_internal_set_turnover(from._internal_turnover());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_pre_market_quote()->::longportapp::quote::v1::PrePostQuote::MergeFrom(
          from._internal_pre_market_quote());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_post_market_quote()->::longportapp::quote::v1::PrePostQuote::MergeFrom(
          from._internal_post_market_quote());
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_volume() != 0) {
    _this->_internal_set_volume(from._internal_volume());
  }
  if (from._internal_trade_status() != 0) {
    _this->_internal_set_trade_status(from._internal_trade_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityQuote::CopyFrom(const SecurityQuote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityQuote::IsInitialized() const {
  return true;
}

void SecurityQuote::InternalSwap(SecurityQuote* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_done_, lhs_arena,
                                       &other->_impl_.last_done_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prev_close_, lhs_arena,
                                       &other->_impl_.prev_close_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_, lhs_arena,
                                       &other->_impl_.open_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.high_, lhs_arena,
                                       &other->_impl_.high_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.low_, lhs_arena,
                                       &other->_impl_.low_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.turnover_, lhs_arena,
                                       &other->_impl_.turnover_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.trade_status_)
      + sizeof(SecurityQuote::_impl_.trade_status_)
      - PROTOBUF_FIELD_OFFSET(SecurityQuote, _impl_.pre_market_quote_)>(
          reinterpret_cast<char*>(&_impl_.pre_market_quote_),
          reinterpret_cast<char*>(&other->_impl_.pre_market_quote_));
}

::google::protobuf::Metadata SecurityQuote::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[5]);
}
// ===================================================================

class PrePostQuote::_Internal {
 public:
};

PrePostQuote::PrePostQuote(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.PrePostQuote)
}
PrePostQuote::PrePostQuote(const PrePostQuote& from) : ::google::protobuf::Message() {
  PrePostQuote* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.last_done_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.high_){},
      decltype(_impl_.low_){},
      decltype(_impl_.prev_close_){},
      decltype(_impl_.timestamp_){},
      decltype(_impl_.volume_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.last_done_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_done_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_done().empty()) {
    _this->_impl_.last_done_.Set(from._internal_last_done(), _this->GetArenaForAllocation());
  }
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_turnover().empty()) {
    _this->_impl_.turnover_.Set(from._internal_turnover(), _this->GetArenaForAllocation());
  }
  _impl_.high_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.high_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_high().empty()) {
    _this->_impl_.high_.Set(from._internal_high(), _this->GetArenaForAllocation());
  }
  _impl_.low_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.low_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_low().empty()) {
    _this->_impl_.low_.Set(from._internal_low(), _this->GetArenaForAllocation());
  }
  _impl_.prev_close_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.prev_close_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_prev_close().empty()) {
    _this->_impl_.prev_close_.Set(from._internal_prev_close(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.timestamp_, &from._impl_.timestamp_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.volume_) -
    reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.volume_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.PrePostQuote)
}
inline void PrePostQuote::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.last_done_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.high_){},
      decltype(_impl_.low_){},
      decltype(_impl_.prev_close_){},
      decltype(_impl_.timestamp_){::int64_t{0}},
      decltype(_impl_.volume_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.last_done_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_done_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.high_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.high_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.low_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.low_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.prev_close_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.prev_close_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
PrePostQuote::~PrePostQuote() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.PrePostQuote)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PrePostQuote::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.last_done_.Destroy();
  _impl_.turnover_.Destroy();
  _impl_.high_.Destroy();
  _impl_.low_.Destroy();
  _impl_.prev_close_.Destroy();
}
void PrePostQuote::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PrePostQuote::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.PrePostQuote)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.last_done_.ClearToEmpty();
  _impl_.turnover_.ClearToEmpty();
  _impl_.high_.ClearToEmpty();
  _impl_.low_.ClearToEmpty();
  _impl_.prev_close_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.volume_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.volume_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PrePostQuote::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 76, 2> PrePostQuote::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PrePostQuote_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string last_done = 1 [json_name = "lastDone"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.last_done_)}},
    // int64 timestamp = 2 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PrePostQuote, _impl_.timestamp_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.timestamp_)}},
    // int64 volume = 3 [json_name = "volume"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PrePostQuote, _impl_.volume_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.volume_)}},
    // string turnover = 4 [json_name = "turnover"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.turnover_)}},
    // string high = 5 [json_name = "high"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.high_)}},
    // string low = 6 [json_name = "low"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.low_)}},
    // string prev_close = 7 [json_name = "prevClose"];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.prev_close_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string last_done = 1 [json_name = "lastDone"];
    {PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.last_done_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 2 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 volume = 3 [json_name = "volume"];
    {PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.volume_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string turnover = 4 [json_name = "turnover"];
    {PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.turnover_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string high = 5 [json_name = "high"];
    {PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.high_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string low = 6 [json_name = "low"];
    {PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.low_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string prev_close = 7 [json_name = "prevClose"];
    {PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.prev_close_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\11\0\0\10\4\3\12"
    "longportapp.quote.v1.PrePostQuote"
    "last_done"
    "turnover"
    "high"
    "low"
    "prev_close"
  }},
};

::uint8_t* PrePostQuote::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.PrePostQuote)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string last_done = 1 [json_name = "lastDone"];
  if (!this->_internal_last_done().empty()) {
    const std::string& _s = this->_internal_last_done();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PrePostQuote.last_done");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 timestamp = 2 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_timestamp(), target);
  }

  // int64 volume = 3 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_volume(), target);
  }

  // string turnover = 4 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    const std::string& _s = this->_internal_turnover();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PrePostQuote.turnover");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string high = 5 [json_name = "high"];
  if (!this->_internal_high().empty()) {
    const std::string& _s = this->_internal_high();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PrePostQuote.high");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string low = 6 [json_name = "low"];
  if (!this->_internal_low().empty()) {
    const std::string& _s = this->_internal_low();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PrePostQuote.low");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string prev_close = 7 [json_name = "prevClose"];
  if (!this->_internal_prev_close().empty()) {
    const std::string& _s = this->_internal_prev_close();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PrePostQuote.prev_close");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.PrePostQuote)
  return target;
}

::size_t PrePostQuote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.PrePostQuote)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string last_done = 1 [json_name = "lastDone"];
  if (!this->_internal_last_done().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_last_done());
  }

  // string turnover = 4 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_turnover());
  }

  // string high = 5 [json_name = "high"];
  if (!this->_internal_high().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_high());
  }

  // string low = 6 [json_name = "low"];
  if (!this->_internal_low().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_low());
  }

  // string prev_close = 7 [json_name = "prevClose"];
  if (!this->_internal_prev_close().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_prev_close());
  }

  // int64 timestamp = 2 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // int64 volume = 3 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_volume());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PrePostQuote::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PrePostQuote::MergeImpl
};
const ::google::protobuf::Message::ClassData*PrePostQuote::GetClassData() const { return &_class_data_; }


void PrePostQuote::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PrePostQuote*>(&to_msg);
  auto& from = static_cast<const PrePostQuote&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.PrePostQuote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_last_done().empty()) {
    _this->_internal_set_last_done(from._internal_last_done());
  }
  if (!from._internal_turnover().empty()) {
    _this->_internal_set_turnover(from._internal_turnover());
  }
  if (!from._internal_high().empty()) {
    _this->_internal_set_high(from._internal_high());
  }
  if (!from._internal_low().empty()) {
    _this->_internal_set_low(from._internal_low());
  }
  if (!from._internal_prev_close().empty()) {
    _this->_internal_set_prev_close(from._internal_prev_close());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_volume() != 0) {
    _this->_internal_set_volume(from._internal_volume());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PrePostQuote::CopyFrom(const PrePostQuote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.PrePostQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PrePostQuote::IsInitialized() const {
  return true;
}

void PrePostQuote::InternalSwap(PrePostQuote* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_done_, lhs_arena,
                                       &other->_impl_.last_done_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.turnover_, lhs_arena,
                                       &other->_impl_.turnover_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.high_, lhs_arena,
                                       &other->_impl_.high_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.low_, lhs_arena,
                                       &other->_impl_.low_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prev_close_, lhs_arena,
                                       &other->_impl_.prev_close_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.volume_)
      + sizeof(PrePostQuote::_impl_.volume_)
      - PROTOBUF_FIELD_OFFSET(PrePostQuote, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata PrePostQuote::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[6]);
}
// ===================================================================

class OptionQuoteResponse::_Internal {
 public:
};

OptionQuoteResponse::OptionQuoteResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.OptionQuoteResponse)
}
OptionQuoteResponse::OptionQuoteResponse(const OptionQuoteResponse& from) : ::google::protobuf::Message() {
  OptionQuoteResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.secu_quote_){from._impl_.secu_quote_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.OptionQuoteResponse)
}
inline void OptionQuoteResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.secu_quote_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
OptionQuoteResponse::~OptionQuoteResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.OptionQuoteResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OptionQuoteResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.secu_quote_.~RepeatedPtrField();
}
void OptionQuoteResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OptionQuoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.OptionQuoteResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_secu_quote()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OptionQuoteResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> OptionQuoteResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OptionQuoteResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.OptionQuote secu_quote = 1 [json_name = "secuQuote"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OptionQuoteResponse, _impl_.secu_quote_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .longportapp.quote.v1.OptionQuote secu_quote = 1 [json_name = "secuQuote"];
    {PROTOBUF_FIELD_OFFSET(OptionQuoteResponse, _impl_.secu_quote_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::OptionQuote>()},
  }}, {{
  }},
};

::uint8_t* OptionQuoteResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.OptionQuoteResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .longportapp.quote.v1.OptionQuote secu_quote = 1 [json_name = "secuQuote"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_secu_quote_size()); i < n; i++) {
    const auto& repfield = this->_internal_secu_quote().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.OptionQuoteResponse)
  return target;
}

::size_t OptionQuoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.OptionQuoteResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.OptionQuote secu_quote = 1 [json_name = "secuQuote"];
  total_size += 1UL * this->_internal_secu_quote_size();
  for (const auto& msg : this->_internal_secu_quote()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OptionQuoteResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OptionQuoteResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*OptionQuoteResponse::GetClassData() const { return &_class_data_; }


void OptionQuoteResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OptionQuoteResponse*>(&to_msg);
  auto& from = static_cast<const OptionQuoteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.OptionQuoteResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_secu_quote()->MergeFrom(from._internal_secu_quote());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OptionQuoteResponse::CopyFrom(const OptionQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.OptionQuoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OptionQuoteResponse::IsInitialized() const {
  return true;
}

void OptionQuoteResponse::InternalSwap(OptionQuoteResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.secu_quote_.InternalSwap(&other->_impl_.secu_quote_);
}

::google::protobuf::Metadata OptionQuoteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[7]);
}
// ===================================================================

class OptionQuote::_Internal {
 public:
  using HasBits = decltype(std::declval<OptionQuote>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_._has_bits_);
  static const ::longportapp::quote::v1::OptionExtend& option_extend(const OptionQuote* msg);
  static void set_has_option_extend(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::longportapp::quote::v1::OptionExtend& OptionQuote::_Internal::option_extend(const OptionQuote* msg) {
  return *msg->_impl_.option_extend_;
}
OptionQuote::OptionQuote(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.OptionQuote)
}
OptionQuote::OptionQuote(const OptionQuote& from) : ::google::protobuf::Message() {
  OptionQuote* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.symbol_){},
      decltype(_impl_.last_done_){},
      decltype(_impl_.prev_close_){},
      decltype(_impl_.open_){},
      decltype(_impl_.high_){},
      decltype(_impl_.low_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.option_extend_){nullptr},
      decltype(_impl_.timestamp_){},
      decltype(_impl_.volume_){},
      decltype(_impl_.trade_status_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  _impl_.last_done_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_done_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_done().empty()) {
    _this->_impl_.last_done_.Set(from._internal_last_done(), _this->GetArenaForAllocation());
  }
  _impl_.prev_close_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.prev_close_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_prev_close().empty()) {
    _this->_impl_.prev_close_.Set(from._internal_prev_close(), _this->GetArenaForAllocation());
  }
  _impl_.open_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_open().empty()) {
    _this->_impl_.open_.Set(from._internal_open(), _this->GetArenaForAllocation());
  }
  _impl_.high_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.high_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_high().empty()) {
    _this->_impl_.high_.Set(from._internal_high(), _this->GetArenaForAllocation());
  }
  _impl_.low_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.low_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_low().empty()) {
    _this->_impl_.low_.Set(from._internal_low(), _this->GetArenaForAllocation());
  }
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_turnover().empty()) {
    _this->_impl_.turnover_.Set(from._internal_turnover(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.option_extend_ = new ::longportapp::quote::v1::OptionExtend(*from._impl_.option_extend_);
  }
  ::memcpy(&_impl_.timestamp_, &from._impl_.timestamp_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.trade_status_) -
    reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.trade_status_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.OptionQuote)
}
inline void OptionQuote::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.symbol_){},
      decltype(_impl_.last_done_){},
      decltype(_impl_.prev_close_){},
      decltype(_impl_.open_){},
      decltype(_impl_.high_){},
      decltype(_impl_.low_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.option_extend_){nullptr},
      decltype(_impl_.timestamp_){::int64_t{0}},
      decltype(_impl_.volume_){::int64_t{0}},
      decltype(_impl_.trade_status_){0},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.last_done_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_done_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.prev_close_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.prev_close_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.open_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.high_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.high_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.low_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.low_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
OptionQuote::~OptionQuote() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.OptionQuote)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OptionQuote::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
  _impl_.last_done_.Destroy();
  _impl_.prev_close_.Destroy();
  _impl_.open_.Destroy();
  _impl_.high_.Destroy();
  _impl_.low_.Destroy();
  _impl_.turnover_.Destroy();
  if (this != internal_default_instance()) delete _impl_.option_extend_;
}
void OptionQuote::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OptionQuote::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.OptionQuote)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _impl_.last_done_.ClearToEmpty();
  _impl_.prev_close_.ClearToEmpty();
  _impl_.open_.ClearToEmpty();
  _impl_.high_.ClearToEmpty();
  _impl_.low_.ClearToEmpty();
  _impl_.turnover_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.option_extend_ != nullptr);
    _impl_.option_extend_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.trade_status_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.trade_status_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OptionQuote::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 93, 2> OptionQuote::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OptionQuote_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.symbol_)}},
    // string last_done = 2 [json_name = "lastDone"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.last_done_)}},
    // string prev_close = 3 [json_name = "prevClose"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.prev_close_)}},
    // string open = 4 [json_name = "open"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.open_)}},
    // string high = 5 [json_name = "high"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.high_)}},
    // string low = 6 [json_name = "low"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.low_)}},
    // int64 timestamp = 7 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OptionQuote, _impl_.timestamp_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.timestamp_)}},
    // int64 volume = 8 [json_name = "volume"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OptionQuote, _impl_.volume_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.volume_)}},
    // string turnover = 9 [json_name = "turnover"];
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.turnover_)}},
    // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OptionQuote, _impl_.trade_status_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.trade_status_)}},
    // .longportapp.quote.v1.OptionExtend option_extend = 11 [json_name = "optionExtend"];
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 0, PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.option_extend_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.symbol_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string last_done = 2 [json_name = "lastDone"];
    {PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.last_done_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string prev_close = 3 [json_name = "prevClose"];
    {PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.prev_close_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string open = 4 [json_name = "open"];
    {PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.open_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string high = 5 [json_name = "high"];
    {PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.high_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string low = 6 [json_name = "low"];
    {PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.low_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 7 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 volume = 8 [json_name = "volume"];
    {PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.volume_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string turnover = 9 [json_name = "turnover"];
    {PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.turnover_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
    {PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.trade_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .longportapp.quote.v1.OptionExtend option_extend = 11 [json_name = "optionExtend"];
    {PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.option_extend_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::OptionExtend>()},
  }}, {{
    "\40\6\11\12\4\4\3\0\0\10\0\0\0\0\0\0"
    "longportapp.quote.v1.OptionQuote"
    "symbol"
    "last_done"
    "prev_close"
    "open"
    "high"
    "low"
    "turnover"
  }},
};

::uint8_t* OptionQuote::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.OptionQuote)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionQuote.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string last_done = 2 [json_name = "lastDone"];
  if (!this->_internal_last_done().empty()) {
    const std::string& _s = this->_internal_last_done();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionQuote.last_done");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string prev_close = 3 [json_name = "prevClose"];
  if (!this->_internal_prev_close().empty()) {
    const std::string& _s = this->_internal_prev_close();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionQuote.prev_close");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string open = 4 [json_name = "open"];
  if (!this->_internal_open().empty()) {
    const std::string& _s = this->_internal_open();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionQuote.open");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string high = 5 [json_name = "high"];
  if (!this->_internal_high().empty()) {
    const std::string& _s = this->_internal_high();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionQuote.high");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string low = 6 [json_name = "low"];
  if (!this->_internal_low().empty()) {
    const std::string& _s = this->_internal_low();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionQuote.low");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // int64 timestamp = 7 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<7>(
            stream, this->_internal_timestamp(), target);
  }

  // int64 volume = 8 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<8>(
            stream, this->_internal_volume(), target);
  }

  // string turnover = 9 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    const std::string& _s = this->_internal_turnover();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionQuote.turnover");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
  if (this->_internal_trade_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        10, this->_internal_trade_status(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .longportapp.quote.v1.OptionExtend option_extend = 11 [json_name = "optionExtend"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::option_extend(this),
        _Internal::option_extend(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.OptionQuote)
  return target;
}

::size_t OptionQuote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.OptionQuote)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // string last_done = 2 [json_name = "lastDone"];
  if (!this->_internal_last_done().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_last_done());
  }

  // string prev_close = 3 [json_name = "prevClose"];
  if (!this->_internal_prev_close().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_prev_close());
  }

  // string open = 4 [json_name = "open"];
  if (!this->_internal_open().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_open());
  }

  // string high = 5 [json_name = "high"];
  if (!this->_internal_high().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_high());
  }

  // string low = 6 [json_name = "low"];
  if (!this->_internal_low().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_low());
  }

  // string turnover = 9 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_turnover());
  }

  // .longportapp.quote.v1.OptionExtend option_extend = 11 [json_name = "optionExtend"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.option_extend_);
  }

  // int64 timestamp = 7 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // int64 volume = 8 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_volume());
  }

  // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
  if (this->_internal_trade_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_trade_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OptionQuote::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OptionQuote::MergeImpl
};
const ::google::protobuf::Message::ClassData*OptionQuote::GetClassData() const { return &_class_data_; }


void OptionQuote::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OptionQuote*>(&to_msg);
  auto& from = static_cast<const OptionQuote&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.OptionQuote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_last_done().empty()) {
    _this->_internal_set_last_done(from._internal_last_done());
  }
  if (!from._internal_prev_close().empty()) {
    _this->_internal_set_prev_close(from._internal_prev_close());
  }
  if (!from._internal_open().empty()) {
    _this->_internal_set_open(from._internal_open());
  }
  if (!from._internal_high().empty()) {
    _this->_internal_set_high(from._internal_high());
  }
  if (!from._internal_low().empty()) {
    _this->_internal_set_low(from._internal_low());
  }
  if (!from._internal_turnover().empty()) {
    _this->_internal_set_turnover(from._internal_turnover());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_option_extend()->::longportapp::quote::v1::OptionExtend::MergeFrom(
        from._internal_option_extend());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_volume() != 0) {
    _this->_internal_set_volume(from._internal_volume());
  }
  if (from._internal_trade_status() != 0) {
    _this->_internal_set_trade_status(from._internal_trade_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OptionQuote::CopyFrom(const OptionQuote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.OptionQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OptionQuote::IsInitialized() const {
  return true;
}

void OptionQuote::InternalSwap(OptionQuote* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_done_, lhs_arena,
                                       &other->_impl_.last_done_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prev_close_, lhs_arena,
                                       &other->_impl_.prev_close_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_, lhs_arena,
                                       &other->_impl_.open_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.high_, lhs_arena,
                                       &other->_impl_.high_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.low_, lhs_arena,
                                       &other->_impl_.low_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.turnover_, lhs_arena,
                                       &other->_impl_.turnover_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.trade_status_)
      + sizeof(OptionQuote::_impl_.trade_status_)
      - PROTOBUF_FIELD_OFFSET(OptionQuote, _impl_.option_extend_)>(
          reinterpret_cast<char*>(&_impl_.option_extend_),
          reinterpret_cast<char*>(&other->_impl_.option_extend_));
}

::google::protobuf::Metadata OptionQuote::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[8]);
}
// ===================================================================

class OptionExtend::_Internal {
 public:
};

OptionExtend::OptionExtend(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.OptionExtend)
}
OptionExtend::OptionExtend(const OptionExtend& from) : ::google::protobuf::Message() {
  OptionExtend* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.implied_volatility_){},
      decltype(_impl_.expiry_date_){},
      decltype(_impl_.strike_price_){},
      decltype(_impl_.contract_multiplier_){},
      decltype(_impl_.contract_type_){},
      decltype(_impl_.contract_size_){},
      decltype(_impl_.direction_){},
      decltype(_impl_.historical_volatility_){},
      decltype(_impl_.underlying_symbol_){},
      decltype(_impl_.open_interest_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.implied_volatility_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.implied_volatility_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_implied_volatility().empty()) {
    _this->_impl_.implied_volatility_.Set(from._internal_implied_volatility(), _this->GetArenaForAllocation());
  }
  _impl_.expiry_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.expiry_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_expiry_date().empty()) {
    _this->_impl_.expiry_date_.Set(from._internal_expiry_date(), _this->GetArenaForAllocation());
  }
  _impl_.strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strike_price().empty()) {
    _this->_impl_.strike_price_.Set(from._internal_strike_price(), _this->GetArenaForAllocation());
  }
  _impl_.contract_multiplier_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_multiplier_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_multiplier().empty()) {
    _this->_impl_.contract_multiplier_.Set(from._internal_contract_multiplier(), _this->GetArenaForAllocation());
  }
  _impl_.contract_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_type().empty()) {
    _this->_impl_.contract_type_.Set(from._internal_contract_type(), _this->GetArenaForAllocation());
  }
  _impl_.contract_size_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_size_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract_size().empty()) {
    _this->_impl_.contract_size_.Set(from._internal_contract_size(), _this->GetArenaForAllocation());
  }
  _impl_.direction_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.direction_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_direction().empty()) {
    _this->_impl_.direction_.Set(from._internal_direction(), _this->GetArenaForAllocation());
  }
  _impl_.historical_volatility_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.historical_volatility_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_historical_volatility().empty()) {
    _this->_impl_.historical_volatility_.Set(from._internal_historical_volatility(), _this->GetArenaForAllocation());
  }
  _impl_.underlying_symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.underlying_symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_underlying_symbol().empty()) {
    _this->_impl_.underlying_symbol_.Set(from._internal_underlying_symbol(), _this->GetArenaForAllocation());
  }
  _this->_impl_.open_interest_ = from._impl_.open_interest_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.OptionExtend)
}
inline void OptionExtend::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.implied_volatility_){},
      decltype(_impl_.expiry_date_){},
      decltype(_impl_.strike_price_){},
      decltype(_impl_.contract_multiplier_){},
      decltype(_impl_.contract_type_){},
      decltype(_impl_.contract_size_){},
      decltype(_impl_.direction_){},
      decltype(_impl_.historical_volatility_){},
      decltype(_impl_.underlying_symbol_){},
      decltype(_impl_.open_interest_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.implied_volatility_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.implied_volatility_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.expiry_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.expiry_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.contract_multiplier_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_multiplier_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.contract_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.contract_size_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.contract_size_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.direction_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.direction_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.historical_volatility_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.historical_volatility_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.underlying_symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.underlying_symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
OptionExtend::~OptionExtend() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.OptionExtend)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OptionExtend::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.implied_volatility_.Destroy();
  _impl_.expiry_date_.Destroy();
  _impl_.strike_price_.Destroy();
  _impl_.contract_multiplier_.Destroy();
  _impl_.contract_type_.Destroy();
  _impl_.contract_size_.Destroy();
  _impl_.direction_.Destroy();
  _impl_.historical_volatility_.Destroy();
  _impl_.underlying_symbol_.Destroy();
}
void OptionExtend::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OptionExtend::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.OptionExtend)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.implied_volatility_.ClearToEmpty();
  _impl_.expiry_date_.ClearToEmpty();
  _impl_.strike_price_.ClearToEmpty();
  _impl_.contract_multiplier_.ClearToEmpty();
  _impl_.contract_type_.ClearToEmpty();
  _impl_.contract_size_.ClearToEmpty();
  _impl_.direction_.ClearToEmpty();
  _impl_.historical_volatility_.ClearToEmpty();
  _impl_.underlying_symbol_.ClearToEmpty();
  _impl_.open_interest_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OptionExtend::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 183, 2> OptionExtend::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OptionExtend_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string implied_volatility = 1 [json_name = "impliedVolatility"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.implied_volatility_)}},
    // int64 open_interest = 2 [json_name = "openInterest"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OptionExtend, _impl_.open_interest_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.open_interest_)}},
    // string expiry_date = 3 [json_name = "expiryDate"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.expiry_date_)}},
    // string strike_price = 4 [json_name = "strikePrice"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.strike_price_)}},
    // string contract_multiplier = 5 [json_name = "contractMultiplier"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.contract_multiplier_)}},
    // string contract_type = 6 [json_name = "contractType"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.contract_type_)}},
    // string contract_size = 7 [json_name = "contractSize"];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.contract_size_)}},
    // string direction = 8 [json_name = "direction"];
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.direction_)}},
    // string historical_volatility = 9 [json_name = "historicalVolatility"];
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.historical_volatility_)}},
    // string underlying_symbol = 10 [json_name = "underlyingSymbol"];
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.underlying_symbol_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string implied_volatility = 1 [json_name = "impliedVolatility"];
    {PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.implied_volatility_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 open_interest = 2 [json_name = "openInterest"];
    {PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.open_interest_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string expiry_date = 3 [json_name = "expiryDate"];
    {PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.expiry_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string strike_price = 4 [json_name = "strikePrice"];
    {PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.strike_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contract_multiplier = 5 [json_name = "contractMultiplier"];
    {PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.contract_multiplier_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contract_type = 6 [json_name = "contractType"];
    {PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.contract_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contract_size = 7 [json_name = "contractSize"];
    {PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.contract_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string direction = 8 [json_name = "direction"];
    {PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string historical_volatility = 9 [json_name = "historicalVolatility"];
    {PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.historical_volatility_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string underlying_symbol = 10 [json_name = "underlyingSymbol"];
    {PROTOBUF_FIELD_OFFSET(OptionExtend, _impl_.underlying_symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\22\0\13\14\23\15\15\11\25\21\0\0\0\0\0"
    "longportapp.quote.v1.OptionExtend"
    "implied_volatility"
    "expiry_date"
    "strike_price"
    "contract_multiplier"
    "contract_type"
    "contract_size"
    "direction"
    "historical_volatility"
    "underlying_symbol"
  }},
};

::uint8_t* OptionExtend::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.OptionExtend)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string implied_volatility = 1 [json_name = "impliedVolatility"];
  if (!this->_internal_implied_volatility().empty()) {
    const std::string& _s = this->_internal_implied_volatility();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionExtend.implied_volatility");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 open_interest = 2 [json_name = "openInterest"];
  if (this->_internal_open_interest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_open_interest(), target);
  }

  // string expiry_date = 3 [json_name = "expiryDate"];
  if (!this->_internal_expiry_date().empty()) {
    const std::string& _s = this->_internal_expiry_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionExtend.expiry_date");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string strike_price = 4 [json_name = "strikePrice"];
  if (!this->_internal_strike_price().empty()) {
    const std::string& _s = this->_internal_strike_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionExtend.strike_price");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string contract_multiplier = 5 [json_name = "contractMultiplier"];
  if (!this->_internal_contract_multiplier().empty()) {
    const std::string& _s = this->_internal_contract_multiplier();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionExtend.contract_multiplier");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string contract_type = 6 [json_name = "contractType"];
  if (!this->_internal_contract_type().empty()) {
    const std::string& _s = this->_internal_contract_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionExtend.contract_type");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string contract_size = 7 [json_name = "contractSize"];
  if (!this->_internal_contract_size().empty()) {
    const std::string& _s = this->_internal_contract_size();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionExtend.contract_size");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string direction = 8 [json_name = "direction"];
  if (!this->_internal_direction().empty()) {
    const std::string& _s = this->_internal_direction();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionExtend.direction");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // string historical_volatility = 9 [json_name = "historicalVolatility"];
  if (!this->_internal_historical_volatility().empty()) {
    const std::string& _s = this->_internal_historical_volatility();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionExtend.historical_volatility");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string underlying_symbol = 10 [json_name = "underlyingSymbol"];
  if (!this->_internal_underlying_symbol().empty()) {
    const std::string& _s = this->_internal_underlying_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionExtend.underlying_symbol");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.OptionExtend)
  return target;
}

::size_t OptionExtend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.OptionExtend)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string implied_volatility = 1 [json_name = "impliedVolatility"];
  if (!this->_internal_implied_volatility().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_implied_volatility());
  }

  // string expiry_date = 3 [json_name = "expiryDate"];
  if (!this->_internal_expiry_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_expiry_date());
  }

  // string strike_price = 4 [json_name = "strikePrice"];
  if (!this->_internal_strike_price().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_strike_price());
  }

  // string contract_multiplier = 5 [json_name = "contractMultiplier"];
  if (!this->_internal_contract_multiplier().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_contract_multiplier());
  }

  // string contract_type = 6 [json_name = "contractType"];
  if (!this->_internal_contract_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_contract_type());
  }

  // string contract_size = 7 [json_name = "contractSize"];
  if (!this->_internal_contract_size().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_contract_size());
  }

  // string direction = 8 [json_name = "direction"];
  if (!this->_internal_direction().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_direction());
  }

  // string historical_volatility = 9 [json_name = "historicalVolatility"];
  if (!this->_internal_historical_volatility().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_historical_volatility());
  }

  // string underlying_symbol = 10 [json_name = "underlyingSymbol"];
  if (!this->_internal_underlying_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_underlying_symbol());
  }

  // int64 open_interest = 2 [json_name = "openInterest"];
  if (this->_internal_open_interest() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_open_interest());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OptionExtend::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OptionExtend::MergeImpl
};
const ::google::protobuf::Message::ClassData*OptionExtend::GetClassData() const { return &_class_data_; }


void OptionExtend::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OptionExtend*>(&to_msg);
  auto& from = static_cast<const OptionExtend&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.OptionExtend)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_implied_volatility().empty()) {
    _this->_internal_set_implied_volatility(from._internal_implied_volatility());
  }
  if (!from._internal_expiry_date().empty()) {
    _this->_internal_set_expiry_date(from._internal_expiry_date());
  }
  if (!from._internal_strike_price().empty()) {
    _this->_internal_set_strike_price(from._internal_strike_price());
  }
  if (!from._internal_contract_multiplier().empty()) {
    _this->_internal_set_contract_multiplier(from._internal_contract_multiplier());
  }
  if (!from._internal_contract_type().empty()) {
    _this->_internal_set_contract_type(from._internal_contract_type());
  }
  if (!from._internal_contract_size().empty()) {
    _this->_internal_set_contract_size(from._internal_contract_size());
  }
  if (!from._internal_direction().empty()) {
    _this->_internal_set_direction(from._internal_direction());
  }
  if (!from._internal_historical_volatility().empty()) {
    _this->_internal_set_historical_volatility(from._internal_historical_volatility());
  }
  if (!from._internal_underlying_symbol().empty()) {
    _this->_internal_set_underlying_symbol(from._internal_underlying_symbol());
  }
  if (from._internal_open_interest() != 0) {
    _this->_internal_set_open_interest(from._internal_open_interest());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OptionExtend::CopyFrom(const OptionExtend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.OptionExtend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OptionExtend::IsInitialized() const {
  return true;
}

void OptionExtend::InternalSwap(OptionExtend* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.implied_volatility_, lhs_arena,
                                       &other->_impl_.implied_volatility_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expiry_date_, lhs_arena,
                                       &other->_impl_.expiry_date_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.strike_price_, lhs_arena,
                                       &other->_impl_.strike_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_multiplier_, lhs_arena,
                                       &other->_impl_.contract_multiplier_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_type_, lhs_arena,
                                       &other->_impl_.contract_type_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_size_, lhs_arena,
                                       &other->_impl_.contract_size_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.direction_, lhs_arena,
                                       &other->_impl_.direction_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.historical_volatility_, lhs_arena,
                                       &other->_impl_.historical_volatility_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.underlying_symbol_, lhs_arena,
                                       &other->_impl_.underlying_symbol_, rhs_arena);
        swap(_impl_.open_interest_, other->_impl_.open_interest_);
}

::google::protobuf::Metadata OptionExtend::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[9]);
}
// ===================================================================

class WarrantQuoteResponse::_Internal {
 public:
};

WarrantQuoteResponse::WarrantQuoteResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.WarrantQuoteResponse)
}
WarrantQuoteResponse::WarrantQuoteResponse(const WarrantQuoteResponse& from) : ::google::protobuf::Message() {
  WarrantQuoteResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.secu_quote_){from._impl_.secu_quote_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.WarrantQuoteResponse)
}
inline void WarrantQuoteResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.secu_quote_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
WarrantQuoteResponse::~WarrantQuoteResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.WarrantQuoteResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WarrantQuoteResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.secu_quote_.~RepeatedPtrField();
}
void WarrantQuoteResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WarrantQuoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.WarrantQuoteResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_secu_quote()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WarrantQuoteResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> WarrantQuoteResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WarrantQuoteResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.WarrantQuote secu_quote = 2 [json_name = "secuQuote"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantQuoteResponse, _impl_.secu_quote_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .longportapp.quote.v1.WarrantQuote secu_quote = 2 [json_name = "secuQuote"];
    {PROTOBUF_FIELD_OFFSET(WarrantQuoteResponse, _impl_.secu_quote_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::WarrantQuote>()},
  }}, {{
  }},
};

::uint8_t* WarrantQuoteResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.WarrantQuoteResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .longportapp.quote.v1.WarrantQuote secu_quote = 2 [json_name = "secuQuote"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_secu_quote_size()); i < n; i++) {
    const auto& repfield = this->_internal_secu_quote().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.WarrantQuoteResponse)
  return target;
}

::size_t WarrantQuoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.WarrantQuoteResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.WarrantQuote secu_quote = 2 [json_name = "secuQuote"];
  total_size += 1UL * this->_internal_secu_quote_size();
  for (const auto& msg : this->_internal_secu_quote()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WarrantQuoteResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WarrantQuoteResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*WarrantQuoteResponse::GetClassData() const { return &_class_data_; }


void WarrantQuoteResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WarrantQuoteResponse*>(&to_msg);
  auto& from = static_cast<const WarrantQuoteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.WarrantQuoteResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_secu_quote()->MergeFrom(from._internal_secu_quote());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WarrantQuoteResponse::CopyFrom(const WarrantQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.WarrantQuoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WarrantQuoteResponse::IsInitialized() const {
  return true;
}

void WarrantQuoteResponse::InternalSwap(WarrantQuoteResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.secu_quote_.InternalSwap(&other->_impl_.secu_quote_);
}

::google::protobuf::Metadata WarrantQuoteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[10]);
}
// ===================================================================

class WarrantQuote::_Internal {
 public:
  using HasBits = decltype(std::declval<WarrantQuote>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_._has_bits_);
  static const ::longportapp::quote::v1::WarrantExtend& warrant_extend(const WarrantQuote* msg);
  static void set_has_warrant_extend(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::longportapp::quote::v1::WarrantExtend& WarrantQuote::_Internal::warrant_extend(const WarrantQuote* msg) {
  return *msg->_impl_.warrant_extend_;
}
WarrantQuote::WarrantQuote(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.WarrantQuote)
}
WarrantQuote::WarrantQuote(const WarrantQuote& from) : ::google::protobuf::Message() {
  WarrantQuote* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.symbol_){},
      decltype(_impl_.last_done_){},
      decltype(_impl_.prev_close_){},
      decltype(_impl_.open_){},
      decltype(_impl_.high_){},
      decltype(_impl_.low_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.warrant_extend_){nullptr},
      decltype(_impl_.timestamp_){},
      decltype(_impl_.volume_){},
      decltype(_impl_.trade_status_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  _impl_.last_done_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_done_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_done().empty()) {
    _this->_impl_.last_done_.Set(from._internal_last_done(), _this->GetArenaForAllocation());
  }
  _impl_.prev_close_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.prev_close_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_prev_close().empty()) {
    _this->_impl_.prev_close_.Set(from._internal_prev_close(), _this->GetArenaForAllocation());
  }
  _impl_.open_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_open().empty()) {
    _this->_impl_.open_.Set(from._internal_open(), _this->GetArenaForAllocation());
  }
  _impl_.high_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.high_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_high().empty()) {
    _this->_impl_.high_.Set(from._internal_high(), _this->GetArenaForAllocation());
  }
  _impl_.low_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.low_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_low().empty()) {
    _this->_impl_.low_.Set(from._internal_low(), _this->GetArenaForAllocation());
  }
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_turnover().empty()) {
    _this->_impl_.turnover_.Set(from._internal_turnover(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.warrant_extend_ = new ::longportapp::quote::v1::WarrantExtend(*from._impl_.warrant_extend_);
  }
  ::memcpy(&_impl_.timestamp_, &from._impl_.timestamp_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.trade_status_) -
    reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.trade_status_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.WarrantQuote)
}
inline void WarrantQuote::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.symbol_){},
      decltype(_impl_.last_done_){},
      decltype(_impl_.prev_close_){},
      decltype(_impl_.open_){},
      decltype(_impl_.high_){},
      decltype(_impl_.low_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.warrant_extend_){nullptr},
      decltype(_impl_.timestamp_){::int64_t{0}},
      decltype(_impl_.volume_){::int64_t{0}},
      decltype(_impl_.trade_status_){0},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.last_done_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_done_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.prev_close_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.prev_close_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.open_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.high_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.high_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.low_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.low_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
WarrantQuote::~WarrantQuote() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.WarrantQuote)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WarrantQuote::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
  _impl_.last_done_.Destroy();
  _impl_.prev_close_.Destroy();
  _impl_.open_.Destroy();
  _impl_.high_.Destroy();
  _impl_.low_.Destroy();
  _impl_.turnover_.Destroy();
  if (this != internal_default_instance()) delete _impl_.warrant_extend_;
}
void WarrantQuote::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WarrantQuote::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.WarrantQuote)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _impl_.last_done_.ClearToEmpty();
  _impl_.prev_close_.ClearToEmpty();
  _impl_.open_.ClearToEmpty();
  _impl_.high_.ClearToEmpty();
  _impl_.low_.ClearToEmpty();
  _impl_.turnover_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.warrant_extend_ != nullptr);
    _impl_.warrant_extend_->Clear();
  }
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.trade_status_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.trade_status_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WarrantQuote::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 1, 94, 2> WarrantQuote::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WarrantQuote_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.symbol_)}},
    // string last_done = 2 [json_name = "lastDone"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.last_done_)}},
    // string prev_close = 3 [json_name = "prevClose"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.prev_close_)}},
    // string open = 4 [json_name = "open"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.open_)}},
    // string high = 5 [json_name = "high"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.high_)}},
    // string low = 6 [json_name = "low"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.low_)}},
    // int64 timestamp = 7 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WarrantQuote, _impl_.timestamp_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.timestamp_)}},
    // int64 volume = 8 [json_name = "volume"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WarrantQuote, _impl_.volume_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.volume_)}},
    // string turnover = 9 [json_name = "turnover"];
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.turnover_)}},
    // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WarrantQuote, _impl_.trade_status_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.trade_status_)}},
    // .longportapp.quote.v1.WarrantExtend warrant_extend = 11 [json_name = "warrantExtend"];
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 0, PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.warrant_extend_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.symbol_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string last_done = 2 [json_name = "lastDone"];
    {PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.last_done_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string prev_close = 3 [json_name = "prevClose"];
    {PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.prev_close_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string open = 4 [json_name = "open"];
    {PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.open_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string high = 5 [json_name = "high"];
    {PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.high_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string low = 6 [json_name = "low"];
    {PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.low_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 7 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 volume = 8 [json_name = "volume"];
    {PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.volume_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string turnover = 9 [json_name = "turnover"];
    {PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.turnover_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
    {PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.trade_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .longportapp.quote.v1.WarrantExtend warrant_extend = 11 [json_name = "warrantExtend"];
    {PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.warrant_extend_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::WarrantExtend>()},
  }}, {{
    "\41\6\11\12\4\4\3\0\0\10\0\0\0\0\0\0"
    "longportapp.quote.v1.WarrantQuote"
    "symbol"
    "last_done"
    "prev_close"
    "open"
    "high"
    "low"
    "turnover"
  }},
};

::uint8_t* WarrantQuote::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.WarrantQuote)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantQuote.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string last_done = 2 [json_name = "lastDone"];
  if (!this->_internal_last_done().empty()) {
    const std::string& _s = this->_internal_last_done();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantQuote.last_done");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string prev_close = 3 [json_name = "prevClose"];
  if (!this->_internal_prev_close().empty()) {
    const std::string& _s = this->_internal_prev_close();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantQuote.prev_close");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string open = 4 [json_name = "open"];
  if (!this->_internal_open().empty()) {
    const std::string& _s = this->_internal_open();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantQuote.open");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string high = 5 [json_name = "high"];
  if (!this->_internal_high().empty()) {
    const std::string& _s = this->_internal_high();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantQuote.high");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string low = 6 [json_name = "low"];
  if (!this->_internal_low().empty()) {
    const std::string& _s = this->_internal_low();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantQuote.low");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // int64 timestamp = 7 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<7>(
            stream, this->_internal_timestamp(), target);
  }

  // int64 volume = 8 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<8>(
            stream, this->_internal_volume(), target);
  }

  // string turnover = 9 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    const std::string& _s = this->_internal_turnover();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantQuote.turnover");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
  if (this->_internal_trade_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        10, this->_internal_trade_status(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .longportapp.quote.v1.WarrantExtend warrant_extend = 11 [json_name = "warrantExtend"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::warrant_extend(this),
        _Internal::warrant_extend(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.WarrantQuote)
  return target;
}

::size_t WarrantQuote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.WarrantQuote)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // string last_done = 2 [json_name = "lastDone"];
  if (!this->_internal_last_done().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_last_done());
  }

  // string prev_close = 3 [json_name = "prevClose"];
  if (!this->_internal_prev_close().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_prev_close());
  }

  // string open = 4 [json_name = "open"];
  if (!this->_internal_open().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_open());
  }

  // string high = 5 [json_name = "high"];
  if (!this->_internal_high().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_high());
  }

  // string low = 6 [json_name = "low"];
  if (!this->_internal_low().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_low());
  }

  // string turnover = 9 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_turnover());
  }

  // .longportapp.quote.v1.WarrantExtend warrant_extend = 11 [json_name = "warrantExtend"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.warrant_extend_);
  }

  // int64 timestamp = 7 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // int64 volume = 8 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_volume());
  }

  // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
  if (this->_internal_trade_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_trade_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WarrantQuote::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WarrantQuote::MergeImpl
};
const ::google::protobuf::Message::ClassData*WarrantQuote::GetClassData() const { return &_class_data_; }


void WarrantQuote::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WarrantQuote*>(&to_msg);
  auto& from = static_cast<const WarrantQuote&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.WarrantQuote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_last_done().empty()) {
    _this->_internal_set_last_done(from._internal_last_done());
  }
  if (!from._internal_prev_close().empty()) {
    _this->_internal_set_prev_close(from._internal_prev_close());
  }
  if (!from._internal_open().empty()) {
    _this->_internal_set_open(from._internal_open());
  }
  if (!from._internal_high().empty()) {
    _this->_internal_set_high(from._internal_high());
  }
  if (!from._internal_low().empty()) {
    _this->_internal_set_low(from._internal_low());
  }
  if (!from._internal_turnover().empty()) {
    _this->_internal_set_turnover(from._internal_turnover());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_warrant_extend()->::longportapp::quote::v1::WarrantExtend::MergeFrom(
        from._internal_warrant_extend());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_volume() != 0) {
    _this->_internal_set_volume(from._internal_volume());
  }
  if (from._internal_trade_status() != 0) {
    _this->_internal_set_trade_status(from._internal_trade_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WarrantQuote::CopyFrom(const WarrantQuote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.WarrantQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WarrantQuote::IsInitialized() const {
  return true;
}

void WarrantQuote::InternalSwap(WarrantQuote* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_done_, lhs_arena,
                                       &other->_impl_.last_done_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prev_close_, lhs_arena,
                                       &other->_impl_.prev_close_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_, lhs_arena,
                                       &other->_impl_.open_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.high_, lhs_arena,
                                       &other->_impl_.high_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.low_, lhs_arena,
                                       &other->_impl_.low_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.turnover_, lhs_arena,
                                       &other->_impl_.turnover_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.trade_status_)
      + sizeof(WarrantQuote::_impl_.trade_status_)
      - PROTOBUF_FIELD_OFFSET(WarrantQuote, _impl_.warrant_extend_)>(
          reinterpret_cast<char*>(&_impl_.warrant_extend_),
          reinterpret_cast<char*>(&other->_impl_.warrant_extend_));
}

::google::protobuf::Metadata WarrantQuote::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[11]);
}
// ===================================================================

class WarrantExtend::_Internal {
 public:
};

WarrantExtend::WarrantExtend(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.WarrantExtend)
}
WarrantExtend::WarrantExtend(const WarrantExtend& from) : ::google::protobuf::Message() {
  WarrantExtend* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.implied_volatility_){},
      decltype(_impl_.expiry_date_){},
      decltype(_impl_.last_trade_date_){},
      decltype(_impl_.outstanding_ratio_){},
      decltype(_impl_.conversion_ratio_){},
      decltype(_impl_.category_){},
      decltype(_impl_.strike_price_){},
      decltype(_impl_.upper_strike_price_){},
      decltype(_impl_.lower_strike_price_){},
      decltype(_impl_.call_price_){},
      decltype(_impl_.underlying_symbol_){},
      decltype(_impl_.outstanding_qty_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.implied_volatility_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.implied_volatility_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_implied_volatility().empty()) {
    _this->_impl_.implied_volatility_.Set(from._internal_implied_volatility(), _this->GetArenaForAllocation());
  }
  _impl_.expiry_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.expiry_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_expiry_date().empty()) {
    _this->_impl_.expiry_date_.Set(from._internal_expiry_date(), _this->GetArenaForAllocation());
  }
  _impl_.last_trade_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_trade_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_trade_date().empty()) {
    _this->_impl_.last_trade_date_.Set(from._internal_last_trade_date(), _this->GetArenaForAllocation());
  }
  _impl_.outstanding_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.outstanding_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_outstanding_ratio().empty()) {
    _this->_impl_.outstanding_ratio_.Set(from._internal_outstanding_ratio(), _this->GetArenaForAllocation());
  }
  _impl_.conversion_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.conversion_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_conversion_ratio().empty()) {
    _this->_impl_.conversion_ratio_.Set(from._internal_conversion_ratio(), _this->GetArenaForAllocation());
  }
  _impl_.category_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.category_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_category().empty()) {
    _this->_impl_.category_.Set(from._internal_category(), _this->GetArenaForAllocation());
  }
  _impl_.strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strike_price().empty()) {
    _this->_impl_.strike_price_.Set(from._internal_strike_price(), _this->GetArenaForAllocation());
  }
  _impl_.upper_strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.upper_strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_upper_strike_price().empty()) {
    _this->_impl_.upper_strike_price_.Set(from._internal_upper_strike_price(), _this->GetArenaForAllocation());
  }
  _impl_.lower_strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lower_strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lower_strike_price().empty()) {
    _this->_impl_.lower_strike_price_.Set(from._internal_lower_strike_price(), _this->GetArenaForAllocation());
  }
  _impl_.call_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.call_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_call_price().empty()) {
    _this->_impl_.call_price_.Set(from._internal_call_price(), _this->GetArenaForAllocation());
  }
  _impl_.underlying_symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.underlying_symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_underlying_symbol().empty()) {
    _this->_impl_.underlying_symbol_.Set(from._internal_underlying_symbol(), _this->GetArenaForAllocation());
  }
  _this->_impl_.outstanding_qty_ = from._impl_.outstanding_qty_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.WarrantExtend)
}
inline void WarrantExtend::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.implied_volatility_){},
      decltype(_impl_.expiry_date_){},
      decltype(_impl_.last_trade_date_){},
      decltype(_impl_.outstanding_ratio_){},
      decltype(_impl_.conversion_ratio_){},
      decltype(_impl_.category_){},
      decltype(_impl_.strike_price_){},
      decltype(_impl_.upper_strike_price_){},
      decltype(_impl_.lower_strike_price_){},
      decltype(_impl_.call_price_){},
      decltype(_impl_.underlying_symbol_){},
      decltype(_impl_.outstanding_qty_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.implied_volatility_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.implied_volatility_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.expiry_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.expiry_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.last_trade_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_trade_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.outstanding_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.outstanding_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.conversion_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.conversion_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.category_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.category_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.upper_strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.upper_strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.lower_strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lower_strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.call_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.call_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.underlying_symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.underlying_symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
WarrantExtend::~WarrantExtend() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.WarrantExtend)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WarrantExtend::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.implied_volatility_.Destroy();
  _impl_.expiry_date_.Destroy();
  _impl_.last_trade_date_.Destroy();
  _impl_.outstanding_ratio_.Destroy();
  _impl_.conversion_ratio_.Destroy();
  _impl_.category_.Destroy();
  _impl_.strike_price_.Destroy();
  _impl_.upper_strike_price_.Destroy();
  _impl_.lower_strike_price_.Destroy();
  _impl_.call_price_.Destroy();
  _impl_.underlying_symbol_.Destroy();
}
void WarrantExtend::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WarrantExtend::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.WarrantExtend)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.implied_volatility_.ClearToEmpty();
  _impl_.expiry_date_.ClearToEmpty();
  _impl_.last_trade_date_.ClearToEmpty();
  _impl_.outstanding_ratio_.ClearToEmpty();
  _impl_.conversion_ratio_.ClearToEmpty();
  _impl_.category_.ClearToEmpty();
  _impl_.strike_price_.ClearToEmpty();
  _impl_.upper_strike_price_.ClearToEmpty();
  _impl_.lower_strike_price_.ClearToEmpty();
  _impl_.call_price_.ClearToEmpty();
  _impl_.underlying_symbol_.ClearToEmpty();
  _impl_.outstanding_qty_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WarrantExtend::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 211, 2> WarrantExtend::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WarrantExtend_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string implied_volatility = 1 [json_name = "impliedVolatility"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.implied_volatility_)}},
    // string expiry_date = 2 [json_name = "expiryDate"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.expiry_date_)}},
    // string last_trade_date = 3 [json_name = "lastTradeDate"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.last_trade_date_)}},
    // string outstanding_ratio = 4 [json_name = "outstandingRatio"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.outstanding_ratio_)}},
    // int64 outstanding_qty = 5 [json_name = "outstandingQty"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WarrantExtend, _impl_.outstanding_qty_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.outstanding_qty_)}},
    // string conversion_ratio = 6 [json_name = "conversionRatio"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.conversion_ratio_)}},
    // string category = 7 [json_name = "category"];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.category_)}},
    // string strike_price = 8 [json_name = "strikePrice"];
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.strike_price_)}},
    // string upper_strike_price = 9 [json_name = "upperStrikePrice"];
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.upper_strike_price_)}},
    // string lower_strike_price = 10 [json_name = "lowerStrikePrice"];
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.lower_strike_price_)}},
    // string call_price = 11 [json_name = "callPrice"];
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.call_price_)}},
    // string underlying_symbol = 12 [json_name = "underlyingSymbol"];
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.underlying_symbol_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string implied_volatility = 1 [json_name = "impliedVolatility"];
    {PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.implied_volatility_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string expiry_date = 2 [json_name = "expiryDate"];
    {PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.expiry_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string last_trade_date = 3 [json_name = "lastTradeDate"];
    {PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.last_trade_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string outstanding_ratio = 4 [json_name = "outstandingRatio"];
    {PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.outstanding_ratio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 outstanding_qty = 5 [json_name = "outstandingQty"];
    {PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.outstanding_qty_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string conversion_ratio = 6 [json_name = "conversionRatio"];
    {PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.conversion_ratio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string category = 7 [json_name = "category"];
    {PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string strike_price = 8 [json_name = "strikePrice"];
    {PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.strike_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string upper_strike_price = 9 [json_name = "upperStrikePrice"];
    {PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.upper_strike_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string lower_strike_price = 10 [json_name = "lowerStrikePrice"];
    {PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.lower_strike_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string call_price = 11 [json_name = "callPrice"];
    {PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.call_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string underlying_symbol = 12 [json_name = "underlyingSymbol"];
    {PROTOBUF_FIELD_OFFSET(WarrantExtend, _impl_.underlying_symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\22\13\17\21\0\20\10\14\22\22\12\21\0\0\0"
    "longportapp.quote.v1.WarrantExtend"
    "implied_volatility"
    "expiry_date"
    "last_trade_date"
    "outstanding_ratio"
    "conversion_ratio"
    "category"
    "strike_price"
    "upper_strike_price"
    "lower_strike_price"
    "call_price"
    "underlying_symbol"
  }},
};

::uint8_t* WarrantExtend::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.WarrantExtend)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string implied_volatility = 1 [json_name = "impliedVolatility"];
  if (!this->_internal_implied_volatility().empty()) {
    const std::string& _s = this->_internal_implied_volatility();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantExtend.implied_volatility");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string expiry_date = 2 [json_name = "expiryDate"];
  if (!this->_internal_expiry_date().empty()) {
    const std::string& _s = this->_internal_expiry_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantExtend.expiry_date");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string last_trade_date = 3 [json_name = "lastTradeDate"];
  if (!this->_internal_last_trade_date().empty()) {
    const std::string& _s = this->_internal_last_trade_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantExtend.last_trade_date");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string outstanding_ratio = 4 [json_name = "outstandingRatio"];
  if (!this->_internal_outstanding_ratio().empty()) {
    const std::string& _s = this->_internal_outstanding_ratio();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantExtend.outstanding_ratio");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int64 outstanding_qty = 5 [json_name = "outstandingQty"];
  if (this->_internal_outstanding_qty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_outstanding_qty(), target);
  }

  // string conversion_ratio = 6 [json_name = "conversionRatio"];
  if (!this->_internal_conversion_ratio().empty()) {
    const std::string& _s = this->_internal_conversion_ratio();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantExtend.conversion_ratio");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string category = 7 [json_name = "category"];
  if (!this->_internal_category().empty()) {
    const std::string& _s = this->_internal_category();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantExtend.category");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string strike_price = 8 [json_name = "strikePrice"];
  if (!this->_internal_strike_price().empty()) {
    const std::string& _s = this->_internal_strike_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantExtend.strike_price");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // string upper_strike_price = 9 [json_name = "upperStrikePrice"];
  if (!this->_internal_upper_strike_price().empty()) {
    const std::string& _s = this->_internal_upper_strike_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantExtend.upper_strike_price");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string lower_strike_price = 10 [json_name = "lowerStrikePrice"];
  if (!this->_internal_lower_strike_price().empty()) {
    const std::string& _s = this->_internal_lower_strike_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantExtend.lower_strike_price");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // string call_price = 11 [json_name = "callPrice"];
  if (!this->_internal_call_price().empty()) {
    const std::string& _s = this->_internal_call_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantExtend.call_price");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // string underlying_symbol = 12 [json_name = "underlyingSymbol"];
  if (!this->_internal_underlying_symbol().empty()) {
    const std::string& _s = this->_internal_underlying_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantExtend.underlying_symbol");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.WarrantExtend)
  return target;
}

::size_t WarrantExtend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.WarrantExtend)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string implied_volatility = 1 [json_name = "impliedVolatility"];
  if (!this->_internal_implied_volatility().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_implied_volatility());
  }

  // string expiry_date = 2 [json_name = "expiryDate"];
  if (!this->_internal_expiry_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_expiry_date());
  }

  // string last_trade_date = 3 [json_name = "lastTradeDate"];
  if (!this->_internal_last_trade_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_last_trade_date());
  }

  // string outstanding_ratio = 4 [json_name = "outstandingRatio"];
  if (!this->_internal_outstanding_ratio().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_outstanding_ratio());
  }

  // string conversion_ratio = 6 [json_name = "conversionRatio"];
  if (!this->_internal_conversion_ratio().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_conversion_ratio());
  }

  // string category = 7 [json_name = "category"];
  if (!this->_internal_category().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_category());
  }

  // string strike_price = 8 [json_name = "strikePrice"];
  if (!this->_internal_strike_price().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_strike_price());
  }

  // string upper_strike_price = 9 [json_name = "upperStrikePrice"];
  if (!this->_internal_upper_strike_price().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_upper_strike_price());
  }

  // string lower_strike_price = 10 [json_name = "lowerStrikePrice"];
  if (!this->_internal_lower_strike_price().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_lower_strike_price());
  }

  // string call_price = 11 [json_name = "callPrice"];
  if (!this->_internal_call_price().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_call_price());
  }

  // string underlying_symbol = 12 [json_name = "underlyingSymbol"];
  if (!this->_internal_underlying_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_underlying_symbol());
  }

  // int64 outstanding_qty = 5 [json_name = "outstandingQty"];
  if (this->_internal_outstanding_qty() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_outstanding_qty());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WarrantExtend::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WarrantExtend::MergeImpl
};
const ::google::protobuf::Message::ClassData*WarrantExtend::GetClassData() const { return &_class_data_; }


void WarrantExtend::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WarrantExtend*>(&to_msg);
  auto& from = static_cast<const WarrantExtend&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.WarrantExtend)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_implied_volatility().empty()) {
    _this->_internal_set_implied_volatility(from._internal_implied_volatility());
  }
  if (!from._internal_expiry_date().empty()) {
    _this->_internal_set_expiry_date(from._internal_expiry_date());
  }
  if (!from._internal_last_trade_date().empty()) {
    _this->_internal_set_last_trade_date(from._internal_last_trade_date());
  }
  if (!from._internal_outstanding_ratio().empty()) {
    _this->_internal_set_outstanding_ratio(from._internal_outstanding_ratio());
  }
  if (!from._internal_conversion_ratio().empty()) {
    _this->_internal_set_conversion_ratio(from._internal_conversion_ratio());
  }
  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_strike_price().empty()) {
    _this->_internal_set_strike_price(from._internal_strike_price());
  }
  if (!from._internal_upper_strike_price().empty()) {
    _this->_internal_set_upper_strike_price(from._internal_upper_strike_price());
  }
  if (!from._internal_lower_strike_price().empty()) {
    _this->_internal_set_lower_strike_price(from._internal_lower_strike_price());
  }
  if (!from._internal_call_price().empty()) {
    _this->_internal_set_call_price(from._internal_call_price());
  }
  if (!from._internal_underlying_symbol().empty()) {
    _this->_internal_set_underlying_symbol(from._internal_underlying_symbol());
  }
  if (from._internal_outstanding_qty() != 0) {
    _this->_internal_set_outstanding_qty(from._internal_outstanding_qty());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WarrantExtend::CopyFrom(const WarrantExtend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.WarrantExtend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WarrantExtend::IsInitialized() const {
  return true;
}

void WarrantExtend::InternalSwap(WarrantExtend* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.implied_volatility_, lhs_arena,
                                       &other->_impl_.implied_volatility_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expiry_date_, lhs_arena,
                                       &other->_impl_.expiry_date_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_trade_date_, lhs_arena,
                                       &other->_impl_.last_trade_date_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.outstanding_ratio_, lhs_arena,
                                       &other->_impl_.outstanding_ratio_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.conversion_ratio_, lhs_arena,
                                       &other->_impl_.conversion_ratio_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, lhs_arena,
                                       &other->_impl_.category_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.strike_price_, lhs_arena,
                                       &other->_impl_.strike_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.upper_strike_price_, lhs_arena,
                                       &other->_impl_.upper_strike_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lower_strike_price_, lhs_arena,
                                       &other->_impl_.lower_strike_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.call_price_, lhs_arena,
                                       &other->_impl_.call_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.underlying_symbol_, lhs_arena,
                                       &other->_impl_.underlying_symbol_, rhs_arena);
        swap(_impl_.outstanding_qty_, other->_impl_.outstanding_qty_);
}

::google::protobuf::Metadata WarrantExtend::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[12]);
}
// ===================================================================

class SecurityDepthResponse::_Internal {
 public:
};

SecurityDepthResponse::SecurityDepthResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityDepthResponse)
}
SecurityDepthResponse::SecurityDepthResponse(const SecurityDepthResponse& from) : ::google::protobuf::Message() {
  SecurityDepthResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ask_){from._impl_.ask_},
      decltype(_impl_.bid_){from._impl_.bid_},
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityDepthResponse)
}
inline void SecurityDepthResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.ask_){arena},
      decltype(_impl_.bid_){arena},
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SecurityDepthResponse::~SecurityDepthResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityDepthResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityDepthResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ask_.~RepeatedPtrField();
  _impl_.bid_.~RepeatedPtrField();
  _impl_.symbol_.Destroy();
}
void SecurityDepthResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityDepthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityDepthResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_ask()->Clear();
  _internal_mutable_bid()->Clear();
  _impl_.symbol_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityDepthResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 57, 2> SecurityDepthResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SecurityDepthResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityDepthResponse, _impl_.symbol_)}},
    // repeated .longportapp.quote.v1.Depth ask = 2 [json_name = "ask"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityDepthResponse, _impl_.ask_)}},
    // repeated .longportapp.quote.v1.Depth bid = 3 [json_name = "bid"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(SecurityDepthResponse, _impl_.bid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SecurityDepthResponse, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .longportapp.quote.v1.Depth ask = 2 [json_name = "ask"];
    {PROTOBUF_FIELD_OFFSET(SecurityDepthResponse, _impl_.ask_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .longportapp.quote.v1.Depth bid = 3 [json_name = "bid"];
    {PROTOBUF_FIELD_OFFSET(SecurityDepthResponse, _impl_.bid_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::Depth>()},
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::Depth>()},
  }}, {{
    "\52\6\0\0\0\0\0\0"
    "longportapp.quote.v1.SecurityDepthResponse"
    "symbol"
  }},
};

::uint8_t* SecurityDepthResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityDepthResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityDepthResponse.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .longportapp.quote.v1.Depth ask = 2 [json_name = "ask"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ask_size()); i < n; i++) {
    const auto& repfield = this->_internal_ask().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .longportapp.quote.v1.Depth bid = 3 [json_name = "bid"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bid_size()); i < n; i++) {
    const auto& repfield = this->_internal_bid().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityDepthResponse)
  return target;
}

::size_t SecurityDepthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityDepthResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.Depth ask = 2 [json_name = "ask"];
  total_size += 1UL * this->_internal_ask_size();
  for (const auto& msg : this->_internal_ask()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .longportapp.quote.v1.Depth bid = 3 [json_name = "bid"];
  total_size += 1UL * this->_internal_bid_size();
  for (const auto& msg : this->_internal_bid()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityDepthResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityDepthResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityDepthResponse::GetClassData() const { return &_class_data_; }


void SecurityDepthResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityDepthResponse*>(&to_msg);
  auto& from = static_cast<const SecurityDepthResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityDepthResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ask()->MergeFrom(from._internal_ask());
  _this->_internal_mutable_bid()->MergeFrom(from._internal_bid());
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityDepthResponse::CopyFrom(const SecurityDepthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityDepthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityDepthResponse::IsInitialized() const {
  return true;
}

void SecurityDepthResponse::InternalSwap(SecurityDepthResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ask_.InternalSwap(&other->_impl_.ask_);
  _impl_.bid_.InternalSwap(&other->_impl_.bid_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
}

::google::protobuf::Metadata SecurityDepthResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[13]);
}
// ===================================================================

class Depth::_Internal {
 public:
};

Depth::Depth(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.Depth)
}
Depth::Depth(const Depth& from) : ::google::protobuf::Message() {
  Depth* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){},
      decltype(_impl_.volume_){},
      decltype(_impl_.order_num_){},
      decltype(_impl_.position_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_price().empty()) {
    _this->_impl_.price_.Set(from._internal_price(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.volume_, &from._impl_.volume_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.position_) -
    reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.position_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.Depth)
}
inline void Depth::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){},
      decltype(_impl_.volume_){::int64_t{0}},
      decltype(_impl_.order_num_){::int64_t{0}},
      decltype(_impl_.position_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Depth::~Depth() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.Depth)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Depth::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.price_.Destroy();
}
void Depth::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Depth::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.Depth)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.price_.ClearToEmpty();
  ::memset(&_impl_.volume_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.position_) -
      reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.position_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Depth::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 40, 2> Depth::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Depth_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 order_num = 4 [json_name = "orderNum"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Depth, _impl_.order_num_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Depth, _impl_.order_num_)}},
    // int32 position = 1 [json_name = "position"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Depth, _impl_.position_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Depth, _impl_.position_)}},
    // string price = 2 [json_name = "price"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Depth, _impl_.price_)}},
    // int64 volume = 3 [json_name = "volume"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Depth, _impl_.volume_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Depth, _impl_.volume_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 position = 1 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(Depth, _impl_.position_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string price = 2 [json_name = "price"];
    {PROTOBUF_FIELD_OFFSET(Depth, _impl_.price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 volume = 3 [json_name = "volume"];
    {PROTOBUF_FIELD_OFFSET(Depth, _impl_.volume_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 order_num = 4 [json_name = "orderNum"];
    {PROTOBUF_FIELD_OFFSET(Depth, _impl_.order_num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\32\0\5\0\0\0\0\0"
    "longportapp.quote.v1.Depth"
    "price"
  }},
};

::uint8_t* Depth::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.Depth)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 position = 1 [json_name = "position"];
  if (this->_internal_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_position(), target);
  }

  // string price = 2 [json_name = "price"];
  if (!this->_internal_price().empty()) {
    const std::string& _s = this->_internal_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.Depth.price");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 volume = 3 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_volume(), target);
  }

  // int64 order_num = 4 [json_name = "orderNum"];
  if (this->_internal_order_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_order_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.Depth)
  return target;
}

::size_t Depth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.Depth)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string price = 2 [json_name = "price"];
  if (!this->_internal_price().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_price());
  }

  // int64 volume = 3 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_volume());
  }

  // int64 order_num = 4 [json_name = "orderNum"];
  if (this->_internal_order_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_order_num());
  }

  // int32 position = 1 [json_name = "position"];
  if (this->_internal_position() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_position());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Depth::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Depth::MergeImpl
};
const ::google::protobuf::Message::ClassData*Depth::GetClassData() const { return &_class_data_; }


void Depth::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Depth*>(&to_msg);
  auto& from = static_cast<const Depth&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.Depth)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_price().empty()) {
    _this->_internal_set_price(from._internal_price());
  }
  if (from._internal_volume() != 0) {
    _this->_internal_set_volume(from._internal_volume());
  }
  if (from._internal_order_num() != 0) {
    _this->_internal_set_order_num(from._internal_order_num());
  }
  if (from._internal_position() != 0) {
    _this->_internal_set_position(from._internal_position());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Depth::CopyFrom(const Depth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.Depth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Depth::IsInitialized() const {
  return true;
}

void Depth::InternalSwap(Depth* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.price_, lhs_arena,
                                       &other->_impl_.price_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Depth, _impl_.position_)
      + sizeof(Depth::_impl_.position_)
      - PROTOBUF_FIELD_OFFSET(Depth, _impl_.volume_)>(
          reinterpret_cast<char*>(&_impl_.volume_),
          reinterpret_cast<char*>(&other->_impl_.volume_));
}

::google::protobuf::Metadata Depth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[14]);
}
// ===================================================================

class SecurityBrokersResponse::_Internal {
 public:
};

SecurityBrokersResponse::SecurityBrokersResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityBrokersResponse)
}
SecurityBrokersResponse::SecurityBrokersResponse(const SecurityBrokersResponse& from) : ::google::protobuf::Message() {
  SecurityBrokersResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ask_brokers_){from._impl_.ask_brokers_},
      decltype(_impl_.bid_brokers_){from._impl_.bid_brokers_},
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityBrokersResponse)
}
inline void SecurityBrokersResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.ask_brokers_){arena},
      decltype(_impl_.bid_brokers_){arena},
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SecurityBrokersResponse::~SecurityBrokersResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityBrokersResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityBrokersResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ask_brokers_.~RepeatedPtrField();
  _impl_.bid_brokers_.~RepeatedPtrField();
  _impl_.symbol_.Destroy();
}
void SecurityBrokersResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityBrokersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityBrokersResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_ask_brokers()->Clear();
  _internal_mutable_bid_brokers()->Clear();
  _impl_.symbol_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityBrokersResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 59, 2> SecurityBrokersResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SecurityBrokersResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityBrokersResponse, _impl_.symbol_)}},
    // repeated .longportapp.quote.v1.Brokers ask_brokers = 2 [json_name = "askBrokers"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityBrokersResponse, _impl_.ask_brokers_)}},
    // repeated .longportapp.quote.v1.Brokers bid_brokers = 3 [json_name = "bidBrokers"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(SecurityBrokersResponse, _impl_.bid_brokers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SecurityBrokersResponse, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .longportapp.quote.v1.Brokers ask_brokers = 2 [json_name = "askBrokers"];
    {PROTOBUF_FIELD_OFFSET(SecurityBrokersResponse, _impl_.ask_brokers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .longportapp.quote.v1.Brokers bid_brokers = 3 [json_name = "bidBrokers"];
    {PROTOBUF_FIELD_OFFSET(SecurityBrokersResponse, _impl_.bid_brokers_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::Brokers>()},
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::Brokers>()},
  }}, {{
    "\54\6\0\0\0\0\0\0"
    "longportapp.quote.v1.SecurityBrokersResponse"
    "symbol"
  }},
};

::uint8_t* SecurityBrokersResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityBrokersResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityBrokersResponse.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .longportapp.quote.v1.Brokers ask_brokers = 2 [json_name = "askBrokers"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ask_brokers_size()); i < n; i++) {
    const auto& repfield = this->_internal_ask_brokers().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .longportapp.quote.v1.Brokers bid_brokers = 3 [json_name = "bidBrokers"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bid_brokers_size()); i < n; i++) {
    const auto& repfield = this->_internal_bid_brokers().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityBrokersResponse)
  return target;
}

::size_t SecurityBrokersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityBrokersResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.Brokers ask_brokers = 2 [json_name = "askBrokers"];
  total_size += 1UL * this->_internal_ask_brokers_size();
  for (const auto& msg : this->_internal_ask_brokers()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .longportapp.quote.v1.Brokers bid_brokers = 3 [json_name = "bidBrokers"];
  total_size += 1UL * this->_internal_bid_brokers_size();
  for (const auto& msg : this->_internal_bid_brokers()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityBrokersResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityBrokersResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityBrokersResponse::GetClassData() const { return &_class_data_; }


void SecurityBrokersResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityBrokersResponse*>(&to_msg);
  auto& from = static_cast<const SecurityBrokersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityBrokersResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ask_brokers()->MergeFrom(from._internal_ask_brokers());
  _this->_internal_mutable_bid_brokers()->MergeFrom(from._internal_bid_brokers());
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityBrokersResponse::CopyFrom(const SecurityBrokersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityBrokersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityBrokersResponse::IsInitialized() const {
  return true;
}

void SecurityBrokersResponse::InternalSwap(SecurityBrokersResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ask_brokers_.InternalSwap(&other->_impl_.ask_brokers_);
  _impl_.bid_brokers_.InternalSwap(&other->_impl_.bid_brokers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
}

::google::protobuf::Metadata SecurityBrokersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[15]);
}
// ===================================================================

class Brokers::_Internal {
 public:
};

Brokers::Brokers(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.Brokers)
}
Brokers::Brokers(const Brokers& from) : ::google::protobuf::Message() {
  Brokers* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.broker_ids_){from._impl_.broker_ids_},
      /* _impl_._broker_ids_cached_byte_size_ = */ {0},
      decltype(_impl_.position_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.position_ = from._impl_.position_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.Brokers)
}
inline void Brokers::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.broker_ids_){arena},
      /* _impl_._broker_ids_cached_byte_size_ = */ {0},
      decltype(_impl_.position_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
Brokers::~Brokers() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.Brokers)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Brokers::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.broker_ids_.~RepeatedField();
}
void Brokers::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Brokers::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.Brokers)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_broker_ids()->Clear();
  _impl_.position_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Brokers::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Brokers::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Brokers_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int32 broker_ids = 2 [json_name = "brokerIds"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Brokers, _impl_.broker_ids_)}},
    // int32 position = 1 [json_name = "position"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Brokers, _impl_.position_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Brokers, _impl_.position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 position = 1 [json_name = "position"];
    {PROTOBUF_FIELD_OFFSET(Brokers, _impl_.position_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated int32 broker_ids = 2 [json_name = "brokerIds"];
    {PROTOBUF_FIELD_OFFSET(Brokers, _impl_.broker_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Brokers::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.Brokers)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 position = 1 [json_name = "position"];
  if (this->_internal_position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_position(), target);
  }

  // repeated int32 broker_ids = 2 [json_name = "brokerIds"];
  {
    int byte_size = _impl_._broker_ids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(2, _internal_broker_ids(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.Brokers)
  return target;
}

::size_t Brokers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.Brokers)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 broker_ids = 2 [json_name = "brokerIds"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_broker_ids())
    ;
    _impl_._broker_ids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // int32 position = 1 [json_name = "position"];
  if (this->_internal_position() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_position());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Brokers::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Brokers::MergeImpl
};
const ::google::protobuf::Message::ClassData*Brokers::GetClassData() const { return &_class_data_; }


void Brokers::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Brokers*>(&to_msg);
  auto& from = static_cast<const Brokers&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.Brokers)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_broker_ids()->MergeFrom(from._internal_broker_ids());
  if (from._internal_position() != 0) {
    _this->_internal_set_position(from._internal_position());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Brokers::CopyFrom(const Brokers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.Brokers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Brokers::IsInitialized() const {
  return true;
}

void Brokers::InternalSwap(Brokers* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.broker_ids_.InternalSwap(&other->_impl_.broker_ids_);
        swap(_impl_.position_, other->_impl_.position_);
}

::google::protobuf::Metadata Brokers::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[16]);
}
// ===================================================================

class ParticipantBrokerIdsResponse::_Internal {
 public:
};

ParticipantBrokerIdsResponse::ParticipantBrokerIdsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.ParticipantBrokerIdsResponse)
}
ParticipantBrokerIdsResponse::ParticipantBrokerIdsResponse(const ParticipantBrokerIdsResponse& from) : ::google::protobuf::Message() {
  ParticipantBrokerIdsResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.participant_broker_numbers_){from._impl_.participant_broker_numbers_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.ParticipantBrokerIdsResponse)
}
inline void ParticipantBrokerIdsResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.participant_broker_numbers_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
ParticipantBrokerIdsResponse::~ParticipantBrokerIdsResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.ParticipantBrokerIdsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ParticipantBrokerIdsResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.participant_broker_numbers_.~RepeatedPtrField();
}
void ParticipantBrokerIdsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ParticipantBrokerIdsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.ParticipantBrokerIdsResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_participant_broker_numbers()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ParticipantBrokerIdsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ParticipantBrokerIdsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ParticipantBrokerIdsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.ParticipantInfo participant_broker_numbers = 1 [json_name = "participantBrokerNumbers"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ParticipantBrokerIdsResponse, _impl_.participant_broker_numbers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .longportapp.quote.v1.ParticipantInfo participant_broker_numbers = 1 [json_name = "participantBrokerNumbers"];
    {PROTOBUF_FIELD_OFFSET(ParticipantBrokerIdsResponse, _impl_.participant_broker_numbers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::ParticipantInfo>()},
  }}, {{
  }},
};

::uint8_t* ParticipantBrokerIdsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.ParticipantBrokerIdsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .longportapp.quote.v1.ParticipantInfo participant_broker_numbers = 1 [json_name = "participantBrokerNumbers"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_participant_broker_numbers_size()); i < n; i++) {
    const auto& repfield = this->_internal_participant_broker_numbers().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.ParticipantBrokerIdsResponse)
  return target;
}

::size_t ParticipantBrokerIdsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.ParticipantBrokerIdsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.ParticipantInfo participant_broker_numbers = 1 [json_name = "participantBrokerNumbers"];
  total_size += 1UL * this->_internal_participant_broker_numbers_size();
  for (const auto& msg : this->_internal_participant_broker_numbers()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ParticipantBrokerIdsResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ParticipantBrokerIdsResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*ParticipantBrokerIdsResponse::GetClassData() const { return &_class_data_; }


void ParticipantBrokerIdsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ParticipantBrokerIdsResponse*>(&to_msg);
  auto& from = static_cast<const ParticipantBrokerIdsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.ParticipantBrokerIdsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_participant_broker_numbers()->MergeFrom(from._internal_participant_broker_numbers());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ParticipantBrokerIdsResponse::CopyFrom(const ParticipantBrokerIdsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.ParticipantBrokerIdsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ParticipantBrokerIdsResponse::IsInitialized() const {
  return true;
}

void ParticipantBrokerIdsResponse::InternalSwap(ParticipantBrokerIdsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.participant_broker_numbers_.InternalSwap(&other->_impl_.participant_broker_numbers_);
}

::google::protobuf::Metadata ParticipantBrokerIdsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[17]);
}
// ===================================================================

class ParticipantInfo::_Internal {
 public:
};

ParticipantInfo::ParticipantInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.ParticipantInfo)
}
ParticipantInfo::ParticipantInfo(const ParticipantInfo& from) : ::google::protobuf::Message() {
  ParticipantInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.broker_ids_){from._impl_.broker_ids_},
      /* _impl_._broker_ids_cached_byte_size_ = */ {0},
      decltype(_impl_.participant_name_cn_){},
      decltype(_impl_.participant_name_en_){},
      decltype(_impl_.participant_name_hk_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.participant_name_cn_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.participant_name_cn_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_participant_name_cn().empty()) {
    _this->_impl_.participant_name_cn_.Set(from._internal_participant_name_cn(), _this->GetArenaForAllocation());
  }
  _impl_.participant_name_en_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.participant_name_en_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_participant_name_en().empty()) {
    _this->_impl_.participant_name_en_.Set(from._internal_participant_name_en(), _this->GetArenaForAllocation());
  }
  _impl_.participant_name_hk_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.participant_name_hk_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_participant_name_hk().empty()) {
    _this->_impl_.participant_name_hk_.Set(from._internal_participant_name_hk(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.ParticipantInfo)
}
inline void ParticipantInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.broker_ids_){arena},
      /* _impl_._broker_ids_cached_byte_size_ = */ {0},
      decltype(_impl_.participant_name_cn_){},
      decltype(_impl_.participant_name_en_){},
      decltype(_impl_.participant_name_hk_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.participant_name_cn_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.participant_name_cn_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.participant_name_en_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.participant_name_en_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.participant_name_hk_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.participant_name_hk_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
ParticipantInfo::~ParticipantInfo() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.ParticipantInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ParticipantInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.broker_ids_.~RepeatedField();
  _impl_.participant_name_cn_.Destroy();
  _impl_.participant_name_en_.Destroy();
  _impl_.participant_name_hk_.Destroy();
}
void ParticipantInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ParticipantInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.ParticipantInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_broker_ids()->Clear();
  _impl_.participant_name_cn_.ClearToEmpty();
  _impl_.participant_name_en_.ClearToEmpty();
  _impl_.participant_name_hk_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ParticipantInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 102, 2> ParticipantInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ParticipantInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string participant_name_hk = 4 [json_name = "participantNameHk"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ParticipantInfo, _impl_.participant_name_hk_)}},
    // repeated int32 broker_ids = 1 [json_name = "brokerIds"];
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ParticipantInfo, _impl_.broker_ids_)}},
    // string participant_name_cn = 2 [json_name = "participantNameCn"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ParticipantInfo, _impl_.participant_name_cn_)}},
    // string participant_name_en = 3 [json_name = "participantNameEn"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ParticipantInfo, _impl_.participant_name_en_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int32 broker_ids = 1 [json_name = "brokerIds"];
    {PROTOBUF_FIELD_OFFSET(ParticipantInfo, _impl_.broker_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // string participant_name_cn = 2 [json_name = "participantNameCn"];
    {PROTOBUF_FIELD_OFFSET(ParticipantInfo, _impl_.participant_name_cn_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string participant_name_en = 3 [json_name = "participantNameEn"];
    {PROTOBUF_FIELD_OFFSET(ParticipantInfo, _impl_.participant_name_en_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string participant_name_hk = 4 [json_name = "participantNameHk"];
    {PROTOBUF_FIELD_OFFSET(ParticipantInfo, _impl_.participant_name_hk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\0\23\23\23\0\0\0"
    "longportapp.quote.v1.ParticipantInfo"
    "participant_name_cn"
    "participant_name_en"
    "participant_name_hk"
  }},
};

::uint8_t* ParticipantInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.ParticipantInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int32 broker_ids = 1 [json_name = "brokerIds"];
  {
    int byte_size = _impl_._broker_ids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(1, _internal_broker_ids(),
                                                 byte_size, target);
    }
  }

  // string participant_name_cn = 2 [json_name = "participantNameCn"];
  if (!this->_internal_participant_name_cn().empty()) {
    const std::string& _s = this->_internal_participant_name_cn();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.ParticipantInfo.participant_name_cn");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string participant_name_en = 3 [json_name = "participantNameEn"];
  if (!this->_internal_participant_name_en().empty()) {
    const std::string& _s = this->_internal_participant_name_en();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.ParticipantInfo.participant_name_en");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string participant_name_hk = 4 [json_name = "participantNameHk"];
  if (!this->_internal_participant_name_hk().empty()) {
    const std::string& _s = this->_internal_participant_name_hk();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.ParticipantInfo.participant_name_hk");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.ParticipantInfo)
  return target;
}

::size_t ParticipantInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.ParticipantInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 broker_ids = 1 [json_name = "brokerIds"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_broker_ids())
    ;
    _impl_._broker_ids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string participant_name_cn = 2 [json_name = "participantNameCn"];
  if (!this->_internal_participant_name_cn().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_participant_name_cn());
  }

  // string participant_name_en = 3 [json_name = "participantNameEn"];
  if (!this->_internal_participant_name_en().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_participant_name_en());
  }

  // string participant_name_hk = 4 [json_name = "participantNameHk"];
  if (!this->_internal_participant_name_hk().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_participant_name_hk());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ParticipantInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ParticipantInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*ParticipantInfo::GetClassData() const { return &_class_data_; }


void ParticipantInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ParticipantInfo*>(&to_msg);
  auto& from = static_cast<const ParticipantInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.ParticipantInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_broker_ids()->MergeFrom(from._internal_broker_ids());
  if (!from._internal_participant_name_cn().empty()) {
    _this->_internal_set_participant_name_cn(from._internal_participant_name_cn());
  }
  if (!from._internal_participant_name_en().empty()) {
    _this->_internal_set_participant_name_en(from._internal_participant_name_en());
  }
  if (!from._internal_participant_name_hk().empty()) {
    _this->_internal_set_participant_name_hk(from._internal_participant_name_hk());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ParticipantInfo::CopyFrom(const ParticipantInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.ParticipantInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ParticipantInfo::IsInitialized() const {
  return true;
}

void ParticipantInfo::InternalSwap(ParticipantInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.broker_ids_.InternalSwap(&other->_impl_.broker_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.participant_name_cn_, lhs_arena,
                                       &other->_impl_.participant_name_cn_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.participant_name_en_, lhs_arena,
                                       &other->_impl_.participant_name_en_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.participant_name_hk_, lhs_arena,
                                       &other->_impl_.participant_name_hk_, rhs_arena);
}

::google::protobuf::Metadata ParticipantInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[18]);
}
// ===================================================================

class SecurityTradeRequest::_Internal {
 public:
};

SecurityTradeRequest::SecurityTradeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityTradeRequest)
}
SecurityTradeRequest::SecurityTradeRequest(const SecurityTradeRequest& from) : ::google::protobuf::Message() {
  SecurityTradeRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      decltype(_impl_.count_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  _this->_impl_.count_ = from._impl_.count_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityTradeRequest)
}
inline void SecurityTradeRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      decltype(_impl_.count_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SecurityTradeRequest::~SecurityTradeRequest() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityTradeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityTradeRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
}
void SecurityTradeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityTradeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityTradeRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _impl_.count_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityTradeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2> SecurityTradeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SecurityTradeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 count = 2 [json_name = "count"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SecurityTradeRequest, _impl_.count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityTradeRequest, _impl_.count_)}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityTradeRequest, _impl_.symbol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SecurityTradeRequest, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 count = 2 [json_name = "count"];
    {PROTOBUF_FIELD_OFFSET(SecurityTradeRequest, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\51\6\0\0\0\0\0\0"
    "longportapp.quote.v1.SecurityTradeRequest"
    "symbol"
  }},
};

::uint8_t* SecurityTradeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityTradeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityTradeRequest.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 count = 2 [json_name = "count"];
  if (this->_internal_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityTradeRequest)
  return target;
}

::size_t SecurityTradeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityTradeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // int32 count = 2 [json_name = "count"];
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityTradeRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityTradeRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityTradeRequest::GetClassData() const { return &_class_data_; }


void SecurityTradeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityTradeRequest*>(&to_msg);
  auto& from = static_cast<const SecurityTradeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityTradeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (from._internal_count() != 0) {
    _this->_internal_set_count(from._internal_count());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityTradeRequest::CopyFrom(const SecurityTradeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityTradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityTradeRequest::IsInitialized() const {
  return true;
}

void SecurityTradeRequest::InternalSwap(SecurityTradeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
        swap(_impl_.count_, other->_impl_.count_);
}

::google::protobuf::Metadata SecurityTradeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[19]);
}
// ===================================================================

class SecurityTradeResponse::_Internal {
 public:
};

SecurityTradeResponse::SecurityTradeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityTradeResponse)
}
SecurityTradeResponse::SecurityTradeResponse(const SecurityTradeResponse& from) : ::google::protobuf::Message() {
  SecurityTradeResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trades_){from._impl_.trades_},
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityTradeResponse)
}
inline void SecurityTradeResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.trades_){arena},
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SecurityTradeResponse::~SecurityTradeResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityTradeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityTradeResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trades_.~RepeatedPtrField();
  _impl_.symbol_.Destroy();
}
void SecurityTradeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityTradeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityTradeResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_trades()->Clear();
  _impl_.symbol_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityTradeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 57, 2> SecurityTradeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SecurityTradeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.Trade trades = 2 [json_name = "trades"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityTradeResponse, _impl_.trades_)}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityTradeResponse, _impl_.symbol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SecurityTradeResponse, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .longportapp.quote.v1.Trade trades = 2 [json_name = "trades"];
    {PROTOBUF_FIELD_OFFSET(SecurityTradeResponse, _impl_.trades_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::Trade>()},
  }}, {{
    "\52\6\0\0\0\0\0\0"
    "longportapp.quote.v1.SecurityTradeResponse"
    "symbol"
  }},
};

::uint8_t* SecurityTradeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityTradeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityTradeResponse.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .longportapp.quote.v1.Trade trades = 2 [json_name = "trades"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_trades_size()); i < n; i++) {
    const auto& repfield = this->_internal_trades().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityTradeResponse)
  return target;
}

::size_t SecurityTradeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityTradeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.Trade trades = 2 [json_name = "trades"];
  total_size += 1UL * this->_internal_trades_size();
  for (const auto& msg : this->_internal_trades()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityTradeResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityTradeResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityTradeResponse::GetClassData() const { return &_class_data_; }


void SecurityTradeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityTradeResponse*>(&to_msg);
  auto& from = static_cast<const SecurityTradeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityTradeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trades()->MergeFrom(from._internal_trades());
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityTradeResponse::CopyFrom(const SecurityTradeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityTradeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityTradeResponse::IsInitialized() const {
  return true;
}

void SecurityTradeResponse::InternalSwap(SecurityTradeResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trades_.InternalSwap(&other->_impl_.trades_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
}

::google::protobuf::Metadata SecurityTradeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[20]);
}
// ===================================================================

class Trade::_Internal {
 public:
};

Trade::Trade(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.Trade)
}
Trade::Trade(const Trade& from) : ::google::protobuf::Message() {
  Trade* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){},
      decltype(_impl_.trade_type_){},
      decltype(_impl_.volume_){},
      decltype(_impl_.timestamp_){},
      decltype(_impl_.direction_){},
      decltype(_impl_.trade_session_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_price().empty()) {
    _this->_impl_.price_.Set(from._internal_price(), _this->GetArenaForAllocation());
  }
  _impl_.trade_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.trade_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trade_type().empty()) {
    _this->_impl_.trade_type_.Set(from._internal_trade_type(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.volume_, &from._impl_.volume_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.trade_session_) -
    reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.trade_session_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.Trade)
}
inline void Trade::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){},
      decltype(_impl_.trade_type_){},
      decltype(_impl_.volume_){::int64_t{0}},
      decltype(_impl_.timestamp_){::int64_t{0}},
      decltype(_impl_.direction_){0},
      decltype(_impl_.trade_session_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.trade_type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.trade_type_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Trade::~Trade() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.Trade)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Trade::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.price_.Destroy();
  _impl_.trade_type_.Destroy();
}
void Trade::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Trade::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.Trade)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.price_.ClearToEmpty();
  _impl_.trade_type_.ClearToEmpty();
  ::memset(&_impl_.volume_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.trade_session_) -
      reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.trade_session_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Trade::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 50, 2> Trade::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Trade_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string price = 1 [json_name = "price"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.price_)}},
    // int64 volume = 2 [json_name = "volume"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Trade, _impl_.volume_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.volume_)}},
    // int64 timestamp = 3 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Trade, _impl_.timestamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.timestamp_)}},
    // string trade_type = 4 [json_name = "tradeType"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.trade_type_)}},
    // int32 direction = 5 [json_name = "direction"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Trade, _impl_.direction_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.direction_)}},
    // .longportapp.quote.v1.TradeSession trade_session = 6 [json_name = "tradeSession"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Trade, _impl_.trade_session_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Trade, _impl_.trade_session_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string price = 1 [json_name = "price"];
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 volume = 2 [json_name = "volume"];
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.volume_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 timestamp = 3 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string trade_type = 4 [json_name = "tradeType"];
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.trade_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 direction = 5 [json_name = "direction"];
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .longportapp.quote.v1.TradeSession trade_session = 6 [json_name = "tradeSession"];
    {PROTOBUF_FIELD_OFFSET(Trade, _impl_.trade_session_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\32\5\0\0\12\0\0\0"
    "longportapp.quote.v1.Trade"
    "price"
    "trade_type"
  }},
};

::uint8_t* Trade::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.Trade)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string price = 1 [json_name = "price"];
  if (!this->_internal_price().empty()) {
    const std::string& _s = this->_internal_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.Trade.price");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 volume = 2 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_volume(), target);
  }

  // int64 timestamp = 3 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_timestamp(), target);
  }

  // string trade_type = 4 [json_name = "tradeType"];
  if (!this->_internal_trade_type().empty()) {
    const std::string& _s = this->_internal_trade_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.Trade.trade_type");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int32 direction = 5 [json_name = "direction"];
  if (this->_internal_direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_direction(), target);
  }

  // .longportapp.quote.v1.TradeSession trade_session = 6 [json_name = "tradeSession"];
  if (this->_internal_trade_session() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_trade_session(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.Trade)
  return target;
}

::size_t Trade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.Trade)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string price = 1 [json_name = "price"];
  if (!this->_internal_price().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_price());
  }

  // string trade_type = 4 [json_name = "tradeType"];
  if (!this->_internal_trade_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_trade_type());
  }

  // int64 volume = 2 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_volume());
  }

  // int64 timestamp = 3 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // int32 direction = 5 [json_name = "direction"];
  if (this->_internal_direction() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_direction());
  }

  // .longportapp.quote.v1.TradeSession trade_session = 6 [json_name = "tradeSession"];
  if (this->_internal_trade_session() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_trade_session());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Trade::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Trade::MergeImpl
};
const ::google::protobuf::Message::ClassData*Trade::GetClassData() const { return &_class_data_; }


void Trade::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Trade*>(&to_msg);
  auto& from = static_cast<const Trade&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.Trade)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_price().empty()) {
    _this->_internal_set_price(from._internal_price());
  }
  if (!from._internal_trade_type().empty()) {
    _this->_internal_set_trade_type(from._internal_trade_type());
  }
  if (from._internal_volume() != 0) {
    _this->_internal_set_volume(from._internal_volume());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  if (from._internal_trade_session() != 0) {
    _this->_internal_set_trade_session(from._internal_trade_session());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Trade::CopyFrom(const Trade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.Trade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Trade::IsInitialized() const {
  return true;
}

void Trade::InternalSwap(Trade* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.price_, lhs_arena,
                                       &other->_impl_.price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trade_type_, lhs_arena,
                                       &other->_impl_.trade_type_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Trade, _impl_.trade_session_)
      + sizeof(Trade::_impl_.trade_session_)
      - PROTOBUF_FIELD_OFFSET(Trade, _impl_.volume_)>(
          reinterpret_cast<char*>(&_impl_.volume_),
          reinterpret_cast<char*>(&other->_impl_.volume_));
}

::google::protobuf::Metadata Trade::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[21]);
}
// ===================================================================

class SecurityIntradayRequest::_Internal {
 public:
};

SecurityIntradayRequest::SecurityIntradayRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityIntradayRequest)
}
SecurityIntradayRequest::SecurityIntradayRequest(const SecurityIntradayRequest& from) : ::google::protobuf::Message() {
  SecurityIntradayRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityIntradayRequest)
}
inline void SecurityIntradayRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SecurityIntradayRequest::~SecurityIntradayRequest() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityIntradayRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityIntradayRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
}
void SecurityIntradayRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityIntradayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityIntradayRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityIntradayRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 59, 2> SecurityIntradayRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SecurityIntradayRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityIntradayRequest, _impl_.symbol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SecurityIntradayRequest, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\6\0\0\0\0\0\0"
    "longportapp.quote.v1.SecurityIntradayRequest"
    "symbol"
  }},
};

::uint8_t* SecurityIntradayRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityIntradayRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityIntradayRequest.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityIntradayRequest)
  return target;
}

::size_t SecurityIntradayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityIntradayRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityIntradayRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityIntradayRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityIntradayRequest::GetClassData() const { return &_class_data_; }


void SecurityIntradayRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityIntradayRequest*>(&to_msg);
  auto& from = static_cast<const SecurityIntradayRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityIntradayRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityIntradayRequest::CopyFrom(const SecurityIntradayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityIntradayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityIntradayRequest::IsInitialized() const {
  return true;
}

void SecurityIntradayRequest::InternalSwap(SecurityIntradayRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
}

::google::protobuf::Metadata SecurityIntradayRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[22]);
}
// ===================================================================

class SecurityIntradayResponse::_Internal {
 public:
};

SecurityIntradayResponse::SecurityIntradayResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityIntradayResponse)
}
SecurityIntradayResponse::SecurityIntradayResponse(const SecurityIntradayResponse& from) : ::google::protobuf::Message() {
  SecurityIntradayResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.lines_){from._impl_.lines_},
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityIntradayResponse)
}
inline void SecurityIntradayResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.lines_){arena},
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SecurityIntradayResponse::~SecurityIntradayResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityIntradayResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityIntradayResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.lines_.~RepeatedPtrField();
  _impl_.symbol_.Destroy();
}
void SecurityIntradayResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityIntradayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityIntradayResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_lines()->Clear();
  _impl_.symbol_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityIntradayResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 60, 2> SecurityIntradayResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SecurityIntradayResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.Line lines = 2 [json_name = "lines"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityIntradayResponse, _impl_.lines_)}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityIntradayResponse, _impl_.symbol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SecurityIntradayResponse, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .longportapp.quote.v1.Line lines = 2 [json_name = "lines"];
    {PROTOBUF_FIELD_OFFSET(SecurityIntradayResponse, _impl_.lines_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::Line>()},
  }}, {{
    "\55\6\0\0\0\0\0\0"
    "longportapp.quote.v1.SecurityIntradayResponse"
    "symbol"
  }},
};

::uint8_t* SecurityIntradayResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityIntradayResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityIntradayResponse.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .longportapp.quote.v1.Line lines = 2 [json_name = "lines"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_lines_size()); i < n; i++) {
    const auto& repfield = this->_internal_lines().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityIntradayResponse)
  return target;
}

::size_t SecurityIntradayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityIntradayResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.Line lines = 2 [json_name = "lines"];
  total_size += 1UL * this->_internal_lines_size();
  for (const auto& msg : this->_internal_lines()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityIntradayResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityIntradayResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityIntradayResponse::GetClassData() const { return &_class_data_; }


void SecurityIntradayResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityIntradayResponse*>(&to_msg);
  auto& from = static_cast<const SecurityIntradayResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityIntradayResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_lines()->MergeFrom(from._internal_lines());
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityIntradayResponse::CopyFrom(const SecurityIntradayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityIntradayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityIntradayResponse::IsInitialized() const {
  return true;
}

void SecurityIntradayResponse::InternalSwap(SecurityIntradayResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.lines_.InternalSwap(&other->_impl_.lines_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
}

::google::protobuf::Metadata SecurityIntradayResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[23]);
}
// ===================================================================

class Line::_Internal {
 public:
};

Line::Line(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.Line)
}
Line::Line(const Line& from) : ::google::protobuf::Message() {
  Line* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.avg_price_){},
      decltype(_impl_.timestamp_){},
      decltype(_impl_.volume_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_price().empty()) {
    _this->_impl_.price_.Set(from._internal_price(), _this->GetArenaForAllocation());
  }
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_turnover().empty()) {
    _this->_impl_.turnover_.Set(from._internal_turnover(), _this->GetArenaForAllocation());
  }
  _impl_.avg_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.avg_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_avg_price().empty()) {
    _this->_impl_.avg_price_.Set(from._internal_avg_price(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.timestamp_, &from._impl_.timestamp_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.volume_) -
    reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.volume_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.Line)
}
inline void Line::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.avg_price_){},
      decltype(_impl_.timestamp_){::int64_t{0}},
      decltype(_impl_.volume_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avg_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.avg_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Line::~Line() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.Line)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Line::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.price_.Destroy();
  _impl_.turnover_.Destroy();
  _impl_.avg_price_.Destroy();
}
void Line::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Line::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.Line)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.price_.ClearToEmpty();
  _impl_.turnover_.ClearToEmpty();
  _impl_.avg_price_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.volume_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.volume_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Line::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 56, 2> Line::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Line_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string price = 1 [json_name = "price"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Line, _impl_.price_)}},
    // int64 timestamp = 2 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Line, _impl_.timestamp_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Line, _impl_.timestamp_)}},
    // int64 volume = 3 [json_name = "volume"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Line, _impl_.volume_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Line, _impl_.volume_)}},
    // string turnover = 4 [json_name = "turnover"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Line, _impl_.turnover_)}},
    // string avg_price = 5 [json_name = "avgPrice"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Line, _impl_.avg_price_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string price = 1 [json_name = "price"];
    {PROTOBUF_FIELD_OFFSET(Line, _impl_.price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 2 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(Line, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 volume = 3 [json_name = "volume"];
    {PROTOBUF_FIELD_OFFSET(Line, _impl_.volume_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string turnover = 4 [json_name = "turnover"];
    {PROTOBUF_FIELD_OFFSET(Line, _impl_.turnover_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string avg_price = 5 [json_name = "avgPrice"];
    {PROTOBUF_FIELD_OFFSET(Line, _impl_.avg_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\5\0\0\10\11\0\0"
    "longportapp.quote.v1.Line"
    "price"
    "turnover"
    "avg_price"
  }},
};

::uint8_t* Line::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.Line)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string price = 1 [json_name = "price"];
  if (!this->_internal_price().empty()) {
    const std::string& _s = this->_internal_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.Line.price");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 timestamp = 2 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_timestamp(), target);
  }

  // int64 volume = 3 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_volume(), target);
  }

  // string turnover = 4 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    const std::string& _s = this->_internal_turnover();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.Line.turnover");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string avg_price = 5 [json_name = "avgPrice"];
  if (!this->_internal_avg_price().empty()) {
    const std::string& _s = this->_internal_avg_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.Line.avg_price");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.Line)
  return target;
}

::size_t Line::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.Line)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string price = 1 [json_name = "price"];
  if (!this->_internal_price().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_price());
  }

  // string turnover = 4 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_turnover());
  }

  // string avg_price = 5 [json_name = "avgPrice"];
  if (!this->_internal_avg_price().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_avg_price());
  }

  // int64 timestamp = 2 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // int64 volume = 3 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_volume());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Line::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Line::MergeImpl
};
const ::google::protobuf::Message::ClassData*Line::GetClassData() const { return &_class_data_; }


void Line::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Line*>(&to_msg);
  auto& from = static_cast<const Line&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.Line)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_price().empty()) {
    _this->_internal_set_price(from._internal_price());
  }
  if (!from._internal_turnover().empty()) {
    _this->_internal_set_turnover(from._internal_turnover());
  }
  if (!from._internal_avg_price().empty()) {
    _this->_internal_set_avg_price(from._internal_avg_price());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_volume() != 0) {
    _this->_internal_set_volume(from._internal_volume());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Line::CopyFrom(const Line& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.Line)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Line::IsInitialized() const {
  return true;
}

void Line::InternalSwap(Line* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.price_, lhs_arena,
                                       &other->_impl_.price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.turnover_, lhs_arena,
                                       &other->_impl_.turnover_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.avg_price_, lhs_arena,
                                       &other->_impl_.avg_price_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Line, _impl_.volume_)
      + sizeof(Line::_impl_.volume_)
      - PROTOBUF_FIELD_OFFSET(Line, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata Line::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[24]);
}
// ===================================================================

class SecurityCandlestickRequest::_Internal {
 public:
};

SecurityCandlestickRequest::SecurityCandlestickRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityCandlestickRequest)
}
SecurityCandlestickRequest::SecurityCandlestickRequest(const SecurityCandlestickRequest& from) : ::google::protobuf::Message() {
  SecurityCandlestickRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      decltype(_impl_.period_){},
      decltype(_impl_.count_){},
      decltype(_impl_.adjust_type_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.period_, &from._impl_.period_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.adjust_type_) -
    reinterpret_cast<char*>(&_impl_.period_)) + sizeof(_impl_.adjust_type_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityCandlestickRequest)
}
inline void SecurityCandlestickRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      decltype(_impl_.period_){0},
      decltype(_impl_.count_){0},
      decltype(_impl_.adjust_type_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SecurityCandlestickRequest::~SecurityCandlestickRequest() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityCandlestickRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityCandlestickRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
}
void SecurityCandlestickRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityCandlestickRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityCandlestickRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  ::memset(&_impl_.period_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.adjust_type_) -
      reinterpret_cast<char*>(&_impl_.period_)) + sizeof(_impl_.adjust_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityCandlestickRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 62, 2> SecurityCandlestickRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SecurityCandlestickRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .longportapp.quote.v1.AdjustType adjust_type = 4 [json_name = "adjustType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SecurityCandlestickRequest, _impl_.adjust_type_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCandlestickRequest, _impl_.adjust_type_)}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCandlestickRequest, _impl_.symbol_)}},
    // .longportapp.quote.v1.Period period = 2 [json_name = "period"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SecurityCandlestickRequest, _impl_.period_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCandlestickRequest, _impl_.period_)}},
    // int32 count = 3 [json_name = "count"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SecurityCandlestickRequest, _impl_.count_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCandlestickRequest, _impl_.count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SecurityCandlestickRequest, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .longportapp.quote.v1.Period period = 2 [json_name = "period"];
    {PROTOBUF_FIELD_OFFSET(SecurityCandlestickRequest, _impl_.period_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 count = 3 [json_name = "count"];
    {PROTOBUF_FIELD_OFFSET(SecurityCandlestickRequest, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .longportapp.quote.v1.AdjustType adjust_type = 4 [json_name = "adjustType"];
    {PROTOBUF_FIELD_OFFSET(SecurityCandlestickRequest, _impl_.adjust_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\57\6\0\0\0\0\0\0"
    "longportapp.quote.v1.SecurityCandlestickRequest"
    "symbol"
  }},
};

::uint8_t* SecurityCandlestickRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityCandlestickRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCandlestickRequest.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .longportapp.quote.v1.Period period = 2 [json_name = "period"];
  if (this->_internal_period() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_period(), target);
  }

  // int32 count = 3 [json_name = "count"];
  if (this->_internal_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_count(), target);
  }

  // .longportapp.quote.v1.AdjustType adjust_type = 4 [json_name = "adjustType"];
  if (this->_internal_adjust_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_adjust_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityCandlestickRequest)
  return target;
}

::size_t SecurityCandlestickRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityCandlestickRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // .longportapp.quote.v1.Period period = 2 [json_name = "period"];
  if (this->_internal_period() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_period());
  }

  // int32 count = 3 [json_name = "count"];
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_count());
  }

  // .longportapp.quote.v1.AdjustType adjust_type = 4 [json_name = "adjustType"];
  if (this->_internal_adjust_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_adjust_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityCandlestickRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityCandlestickRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityCandlestickRequest::GetClassData() const { return &_class_data_; }


void SecurityCandlestickRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityCandlestickRequest*>(&to_msg);
  auto& from = static_cast<const SecurityCandlestickRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityCandlestickRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (from._internal_period() != 0) {
    _this->_internal_set_period(from._internal_period());
  }
  if (from._internal_count() != 0) {
    _this->_internal_set_count(from._internal_count());
  }
  if (from._internal_adjust_type() != 0) {
    _this->_internal_set_adjust_type(from._internal_adjust_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityCandlestickRequest::CopyFrom(const SecurityCandlestickRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityCandlestickRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityCandlestickRequest::IsInitialized() const {
  return true;
}

void SecurityCandlestickRequest::InternalSwap(SecurityCandlestickRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SecurityCandlestickRequest, _impl_.adjust_type_)
      + sizeof(SecurityCandlestickRequest::_impl_.adjust_type_)
      - PROTOBUF_FIELD_OFFSET(SecurityCandlestickRequest, _impl_.period_)>(
          reinterpret_cast<char*>(&_impl_.period_),
          reinterpret_cast<char*>(&other->_impl_.period_));
}

::google::protobuf::Metadata SecurityCandlestickRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[25]);
}
// ===================================================================

class SecurityCandlestickResponse::_Internal {
 public:
};

SecurityCandlestickResponse::SecurityCandlestickResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityCandlestickResponse)
}
SecurityCandlestickResponse::SecurityCandlestickResponse(const SecurityCandlestickResponse& from) : ::google::protobuf::Message() {
  SecurityCandlestickResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.candlesticks_){from._impl_.candlesticks_},
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityCandlestickResponse)
}
inline void SecurityCandlestickResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.candlesticks_){arena},
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SecurityCandlestickResponse::~SecurityCandlestickResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityCandlestickResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityCandlestickResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.candlesticks_.~RepeatedPtrField();
  _impl_.symbol_.Destroy();
}
void SecurityCandlestickResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityCandlestickResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityCandlestickResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_candlesticks()->Clear();
  _impl_.symbol_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityCandlestickResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 63, 2> SecurityCandlestickResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SecurityCandlestickResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.Candlestick candlesticks = 2 [json_name = "candlesticks"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCandlestickResponse, _impl_.candlesticks_)}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCandlestickResponse, _impl_.symbol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SecurityCandlestickResponse, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .longportapp.quote.v1.Candlestick candlesticks = 2 [json_name = "candlesticks"];
    {PROTOBUF_FIELD_OFFSET(SecurityCandlestickResponse, _impl_.candlesticks_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::Candlestick>()},
  }}, {{
    "\60\6\0\0\0\0\0\0"
    "longportapp.quote.v1.SecurityCandlestickResponse"
    "symbol"
  }},
};

::uint8_t* SecurityCandlestickResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityCandlestickResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCandlestickResponse.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .longportapp.quote.v1.Candlestick candlesticks = 2 [json_name = "candlesticks"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_candlesticks_size()); i < n; i++) {
    const auto& repfield = this->_internal_candlesticks().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityCandlestickResponse)
  return target;
}

::size_t SecurityCandlestickResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityCandlestickResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.Candlestick candlesticks = 2 [json_name = "candlesticks"];
  total_size += 1UL * this->_internal_candlesticks_size();
  for (const auto& msg : this->_internal_candlesticks()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityCandlestickResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityCandlestickResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityCandlestickResponse::GetClassData() const { return &_class_data_; }


void SecurityCandlestickResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityCandlestickResponse*>(&to_msg);
  auto& from = static_cast<const SecurityCandlestickResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityCandlestickResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_candlesticks()->MergeFrom(from._internal_candlesticks());
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityCandlestickResponse::CopyFrom(const SecurityCandlestickResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityCandlestickResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityCandlestickResponse::IsInitialized() const {
  return true;
}

void SecurityCandlestickResponse::InternalSwap(SecurityCandlestickResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.candlesticks_.InternalSwap(&other->_impl_.candlesticks_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
}

::google::protobuf::Metadata SecurityCandlestickResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[26]);
}
// ===================================================================

class Candlestick::_Internal {
 public:
};

Candlestick::Candlestick(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.Candlestick)
}
Candlestick::Candlestick(const Candlestick& from) : ::google::protobuf::Message() {
  Candlestick* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.close_){},
      decltype(_impl_.open_){},
      decltype(_impl_.low_){},
      decltype(_impl_.high_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.volume_){},
      decltype(_impl_.timestamp_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.close_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.close_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_close().empty()) {
    _this->_impl_.close_.Set(from._internal_close(), _this->GetArenaForAllocation());
  }
  _impl_.open_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_open().empty()) {
    _this->_impl_.open_.Set(from._internal_open(), _this->GetArenaForAllocation());
  }
  _impl_.low_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.low_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_low().empty()) {
    _this->_impl_.low_.Set(from._internal_low(), _this->GetArenaForAllocation());
  }
  _impl_.high_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.high_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_high().empty()) {
    _this->_impl_.high_.Set(from._internal_high(), _this->GetArenaForAllocation());
  }
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_turnover().empty()) {
    _this->_impl_.turnover_.Set(from._internal_turnover(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.volume_, &from._impl_.volume_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.timestamp_) -
    reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.timestamp_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.Candlestick)
}
inline void Candlestick::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.close_){},
      decltype(_impl_.open_){},
      decltype(_impl_.low_){},
      decltype(_impl_.high_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.volume_){::int64_t{0}},
      decltype(_impl_.timestamp_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.close_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.close_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.open_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.low_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.low_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.high_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.high_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Candlestick::~Candlestick() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.Candlestick)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Candlestick::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.close_.Destroy();
  _impl_.open_.Destroy();
  _impl_.low_.Destroy();
  _impl_.high_.Destroy();
  _impl_.turnover_.Destroy();
}
void Candlestick::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Candlestick::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.Candlestick)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.close_.ClearToEmpty();
  _impl_.open_.ClearToEmpty();
  _impl_.low_.ClearToEmpty();
  _impl_.high_.ClearToEmpty();
  _impl_.turnover_.ClearToEmpty();
  ::memset(&_impl_.volume_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.timestamp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Candlestick::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 65, 2> Candlestick::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Candlestick_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string close = 1 [json_name = "close"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.close_)}},
    // string open = 2 [json_name = "open"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.open_)}},
    // string low = 3 [json_name = "low"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.low_)}},
    // string high = 4 [json_name = "high"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.high_)}},
    // int64 volume = 5 [json_name = "volume"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Candlestick, _impl_.volume_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.volume_)}},
    // string turnover = 6 [json_name = "turnover"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.turnover_)}},
    // int64 timestamp = 7 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Candlestick, _impl_.timestamp_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string close = 1 [json_name = "close"];
    {PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.close_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string open = 2 [json_name = "open"];
    {PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.open_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string low = 3 [json_name = "low"];
    {PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.low_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string high = 4 [json_name = "high"];
    {PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.high_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 volume = 5 [json_name = "volume"];
    {PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.volume_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string turnover = 6 [json_name = "turnover"];
    {PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.turnover_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 7 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\40\5\4\3\4\0\10\0"
    "longportapp.quote.v1.Candlestick"
    "close"
    "open"
    "low"
    "high"
    "turnover"
  }},
};

::uint8_t* Candlestick::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.Candlestick)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string close = 1 [json_name = "close"];
  if (!this->_internal_close().empty()) {
    const std::string& _s = this->_internal_close();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.Candlestick.close");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string open = 2 [json_name = "open"];
  if (!this->_internal_open().empty()) {
    const std::string& _s = this->_internal_open();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.Candlestick.open");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string low = 3 [json_name = "low"];
  if (!this->_internal_low().empty()) {
    const std::string& _s = this->_internal_low();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.Candlestick.low");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string high = 4 [json_name = "high"];
  if (!this->_internal_high().empty()) {
    const std::string& _s = this->_internal_high();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.Candlestick.high");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int64 volume = 5 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_volume(), target);
  }

  // string turnover = 6 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    const std::string& _s = this->_internal_turnover();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.Candlestick.turnover");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // int64 timestamp = 7 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<7>(
            stream, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.Candlestick)
  return target;
}

::size_t Candlestick::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.Candlestick)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string close = 1 [json_name = "close"];
  if (!this->_internal_close().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_close());
  }

  // string open = 2 [json_name = "open"];
  if (!this->_internal_open().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_open());
  }

  // string low = 3 [json_name = "low"];
  if (!this->_internal_low().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_low());
  }

  // string high = 4 [json_name = "high"];
  if (!this->_internal_high().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_high());
  }

  // string turnover = 6 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_turnover());
  }

  // int64 volume = 5 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_volume());
  }

  // int64 timestamp = 7 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Candlestick::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Candlestick::MergeImpl
};
const ::google::protobuf::Message::ClassData*Candlestick::GetClassData() const { return &_class_data_; }


void Candlestick::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Candlestick*>(&to_msg);
  auto& from = static_cast<const Candlestick&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.Candlestick)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_close().empty()) {
    _this->_internal_set_close(from._internal_close());
  }
  if (!from._internal_open().empty()) {
    _this->_internal_set_open(from._internal_open());
  }
  if (!from._internal_low().empty()) {
    _this->_internal_set_low(from._internal_low());
  }
  if (!from._internal_high().empty()) {
    _this->_internal_set_high(from._internal_high());
  }
  if (!from._internal_turnover().empty()) {
    _this->_internal_set_turnover(from._internal_turnover());
  }
  if (from._internal_volume() != 0) {
    _this->_internal_set_volume(from._internal_volume());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Candlestick::CopyFrom(const Candlestick& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.Candlestick)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Candlestick::IsInitialized() const {
  return true;
}

void Candlestick::InternalSwap(Candlestick* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.close_, lhs_arena,
                                       &other->_impl_.close_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_, lhs_arena,
                                       &other->_impl_.open_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.low_, lhs_arena,
                                       &other->_impl_.low_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.high_, lhs_arena,
                                       &other->_impl_.high_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.turnover_, lhs_arena,
                                       &other->_impl_.turnover_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.timestamp_)
      + sizeof(Candlestick::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(Candlestick, _impl_.volume_)>(
          reinterpret_cast<char*>(&_impl_.volume_),
          reinterpret_cast<char*>(&other->_impl_.volume_));
}

::google::protobuf::Metadata Candlestick::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[27]);
}
// ===================================================================

class OptionChainDateListResponse::_Internal {
 public:
};

OptionChainDateListResponse::OptionChainDateListResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.OptionChainDateListResponse)
}
OptionChainDateListResponse::OptionChainDateListResponse(const OptionChainDateListResponse& from) : ::google::protobuf::Message() {
  OptionChainDateListResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.expiry_date_){from._impl_.expiry_date_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.OptionChainDateListResponse)
}
inline void OptionChainDateListResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.expiry_date_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
OptionChainDateListResponse::~OptionChainDateListResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.OptionChainDateListResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OptionChainDateListResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_expiry_date()->~RepeatedPtrField();
}
void OptionChainDateListResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OptionChainDateListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.OptionChainDateListResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_expiry_date()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OptionChainDateListResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 68, 2> OptionChainDateListResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OptionChainDateListResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string expiry_date = 1 [json_name = "expiryDate"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OptionChainDateListResponse, _impl_.expiry_date_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string expiry_date = 1 [json_name = "expiryDate"];
    {PROTOBUF_FIELD_OFFSET(OptionChainDateListResponse, _impl_.expiry_date_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\60\13\0\0\0\0\0\0"
    "longportapp.quote.v1.OptionChainDateListResponse"
    "expiry_date"
  }},
};

::uint8_t* OptionChainDateListResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.OptionChainDateListResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string expiry_date = 1 [json_name = "expiryDate"];
  for (int i = 0, n = this->_internal_expiry_date_size(); i < n; ++i) {
    const auto& s = this->_internal_expiry_date().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionChainDateListResponse.expiry_date");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.OptionChainDateListResponse)
  return target;
}

::size_t OptionChainDateListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.OptionChainDateListResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string expiry_date = 1 [json_name = "expiryDate"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_expiry_date().size());
  for (int i = 0, n = _internal_expiry_date().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_expiry_date().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OptionChainDateListResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OptionChainDateListResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*OptionChainDateListResponse::GetClassData() const { return &_class_data_; }


void OptionChainDateListResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OptionChainDateListResponse*>(&to_msg);
  auto& from = static_cast<const OptionChainDateListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.OptionChainDateListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_expiry_date()->MergeFrom(from._internal_expiry_date());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OptionChainDateListResponse::CopyFrom(const OptionChainDateListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.OptionChainDateListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OptionChainDateListResponse::IsInitialized() const {
  return true;
}

void OptionChainDateListResponse::InternalSwap(OptionChainDateListResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.expiry_date_.InternalSwap(&other->_impl_.expiry_date_);
}

::google::protobuf::Metadata OptionChainDateListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[28]);
}
// ===================================================================

class OptionChainDateStrikeInfoRequest::_Internal {
 public:
};

OptionChainDateStrikeInfoRequest::OptionChainDateStrikeInfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.OptionChainDateStrikeInfoRequest)
}
OptionChainDateStrikeInfoRequest::OptionChainDateStrikeInfoRequest(const OptionChainDateStrikeInfoRequest& from) : ::google::protobuf::Message() {
  OptionChainDateStrikeInfoRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      decltype(_impl_.expiry_date_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  _impl_.expiry_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.expiry_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_expiry_date().empty()) {
    _this->_impl_.expiry_date_.Set(from._internal_expiry_date(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.OptionChainDateStrikeInfoRequest)
}
inline void OptionChainDateStrikeInfoRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      decltype(_impl_.expiry_date_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.expiry_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.expiry_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
OptionChainDateStrikeInfoRequest::~OptionChainDateStrikeInfoRequest() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.OptionChainDateStrikeInfoRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OptionChainDateStrikeInfoRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
  _impl_.expiry_date_.Destroy();
}
void OptionChainDateStrikeInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OptionChainDateStrikeInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.OptionChainDateStrikeInfoRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _impl_.expiry_date_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OptionChainDateStrikeInfoRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 79, 2> OptionChainDateStrikeInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OptionChainDateStrikeInfoRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string expiry_date = 2 [json_name = "expiryDate"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(OptionChainDateStrikeInfoRequest, _impl_.expiry_date_)}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OptionChainDateStrikeInfoRequest, _impl_.symbol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(OptionChainDateStrikeInfoRequest, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string expiry_date = 2 [json_name = "expiryDate"];
    {PROTOBUF_FIELD_OFFSET(OptionChainDateStrikeInfoRequest, _impl_.expiry_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\6\13\0\0\0\0\0"
    "longportapp.quote.v1.OptionChainDateStrikeInfoRequest"
    "symbol"
    "expiry_date"
  }},
};

::uint8_t* OptionChainDateStrikeInfoRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.OptionChainDateStrikeInfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionChainDateStrikeInfoRequest.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string expiry_date = 2 [json_name = "expiryDate"];
  if (!this->_internal_expiry_date().empty()) {
    const std::string& _s = this->_internal_expiry_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.OptionChainDateStrikeInfoRequest.expiry_date");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.OptionChainDateStrikeInfoRequest)
  return target;
}

::size_t OptionChainDateStrikeInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.OptionChainDateStrikeInfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // string expiry_date = 2 [json_name = "expiryDate"];
  if (!this->_internal_expiry_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_expiry_date());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OptionChainDateStrikeInfoRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OptionChainDateStrikeInfoRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*OptionChainDateStrikeInfoRequest::GetClassData() const { return &_class_data_; }


void OptionChainDateStrikeInfoRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OptionChainDateStrikeInfoRequest*>(&to_msg);
  auto& from = static_cast<const OptionChainDateStrikeInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.OptionChainDateStrikeInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_expiry_date().empty()) {
    _this->_internal_set_expiry_date(from._internal_expiry_date());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OptionChainDateStrikeInfoRequest::CopyFrom(const OptionChainDateStrikeInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.OptionChainDateStrikeInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OptionChainDateStrikeInfoRequest::IsInitialized() const {
  return true;
}

void OptionChainDateStrikeInfoRequest::InternalSwap(OptionChainDateStrikeInfoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expiry_date_, lhs_arena,
                                       &other->_impl_.expiry_date_, rhs_arena);
}

::google::protobuf::Metadata OptionChainDateStrikeInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[29]);
}
// ===================================================================

class OptionChainDateStrikeInfoResponse::_Internal {
 public:
};

OptionChainDateStrikeInfoResponse::OptionChainDateStrikeInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.OptionChainDateStrikeInfoResponse)
}
OptionChainDateStrikeInfoResponse::OptionChainDateStrikeInfoResponse(const OptionChainDateStrikeInfoResponse& from) : ::google::protobuf::Message() {
  OptionChainDateStrikeInfoResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.strike_price_info_){from._impl_.strike_price_info_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.OptionChainDateStrikeInfoResponse)
}
inline void OptionChainDateStrikeInfoResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.strike_price_info_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
OptionChainDateStrikeInfoResponse::~OptionChainDateStrikeInfoResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.OptionChainDateStrikeInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OptionChainDateStrikeInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.strike_price_info_.~RepeatedPtrField();
}
void OptionChainDateStrikeInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void OptionChainDateStrikeInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.OptionChainDateStrikeInfoResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_strike_price_info()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OptionChainDateStrikeInfoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> OptionChainDateStrikeInfoResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_OptionChainDateStrikeInfoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.StrikePriceInfo strike_price_info = 1 [json_name = "strikePriceInfo"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OptionChainDateStrikeInfoResponse, _impl_.strike_price_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .longportapp.quote.v1.StrikePriceInfo strike_price_info = 1 [json_name = "strikePriceInfo"];
    {PROTOBUF_FIELD_OFFSET(OptionChainDateStrikeInfoResponse, _impl_.strike_price_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::StrikePriceInfo>()},
  }}, {{
  }},
};

::uint8_t* OptionChainDateStrikeInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.OptionChainDateStrikeInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .longportapp.quote.v1.StrikePriceInfo strike_price_info = 1 [json_name = "strikePriceInfo"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_strike_price_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_strike_price_info().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.OptionChainDateStrikeInfoResponse)
  return target;
}

::size_t OptionChainDateStrikeInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.OptionChainDateStrikeInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.StrikePriceInfo strike_price_info = 1 [json_name = "strikePriceInfo"];
  total_size += 1UL * this->_internal_strike_price_info_size();
  for (const auto& msg : this->_internal_strike_price_info()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OptionChainDateStrikeInfoResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    OptionChainDateStrikeInfoResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*OptionChainDateStrikeInfoResponse::GetClassData() const { return &_class_data_; }


void OptionChainDateStrikeInfoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OptionChainDateStrikeInfoResponse*>(&to_msg);
  auto& from = static_cast<const OptionChainDateStrikeInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.OptionChainDateStrikeInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_strike_price_info()->MergeFrom(from._internal_strike_price_info());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OptionChainDateStrikeInfoResponse::CopyFrom(const OptionChainDateStrikeInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.OptionChainDateStrikeInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OptionChainDateStrikeInfoResponse::IsInitialized() const {
  return true;
}

void OptionChainDateStrikeInfoResponse::InternalSwap(OptionChainDateStrikeInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.strike_price_info_.InternalSwap(&other->_impl_.strike_price_info_);
}

::google::protobuf::Metadata OptionChainDateStrikeInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[30]);
}
// ===================================================================

class StrikePriceInfo::_Internal {
 public:
};

StrikePriceInfo::StrikePriceInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.StrikePriceInfo)
}
StrikePriceInfo::StrikePriceInfo(const StrikePriceInfo& from) : ::google::protobuf::Message() {
  StrikePriceInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){},
      decltype(_impl_.call_symbol_){},
      decltype(_impl_.put_symbol_){},
      decltype(_impl_.standard_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_price().empty()) {
    _this->_impl_.price_.Set(from._internal_price(), _this->GetArenaForAllocation());
  }
  _impl_.call_symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.call_symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_call_symbol().empty()) {
    _this->_impl_.call_symbol_.Set(from._internal_call_symbol(), _this->GetArenaForAllocation());
  }
  _impl_.put_symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.put_symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_put_symbol().empty()) {
    _this->_impl_.put_symbol_.Set(from._internal_put_symbol(), _this->GetArenaForAllocation());
  }
  _this->_impl_.standard_ = from._impl_.standard_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.StrikePriceInfo)
}
inline void StrikePriceInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){},
      decltype(_impl_.call_symbol_){},
      decltype(_impl_.put_symbol_){},
      decltype(_impl_.standard_){false},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.call_symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.call_symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.put_symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.put_symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
StrikePriceInfo::~StrikePriceInfo() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.StrikePriceInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StrikePriceInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.price_.Destroy();
  _impl_.call_symbol_.Destroy();
  _impl_.put_symbol_.Destroy();
}
void StrikePriceInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void StrikePriceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.StrikePriceInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.price_.ClearToEmpty();
  _impl_.call_symbol_.ClearToEmpty();
  _impl_.put_symbol_.ClearToEmpty();
  _impl_.standard_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* StrikePriceInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 71, 2> StrikePriceInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StrikePriceInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool standard = 4 [json_name = "standard"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StrikePriceInfo, _impl_.standard_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(StrikePriceInfo, _impl_.standard_)}},
    // string price = 1 [json_name = "price"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StrikePriceInfo, _impl_.price_)}},
    // string call_symbol = 2 [json_name = "callSymbol"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StrikePriceInfo, _impl_.call_symbol_)}},
    // string put_symbol = 3 [json_name = "putSymbol"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(StrikePriceInfo, _impl_.put_symbol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string price = 1 [json_name = "price"];
    {PROTOBUF_FIELD_OFFSET(StrikePriceInfo, _impl_.price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string call_symbol = 2 [json_name = "callSymbol"];
    {PROTOBUF_FIELD_OFFSET(StrikePriceInfo, _impl_.call_symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string put_symbol = 3 [json_name = "putSymbol"];
    {PROTOBUF_FIELD_OFFSET(StrikePriceInfo, _impl_.put_symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool standard = 4 [json_name = "standard"];
    {PROTOBUF_FIELD_OFFSET(StrikePriceInfo, _impl_.standard_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\44\5\13\12\0\0\0\0"
    "longportapp.quote.v1.StrikePriceInfo"
    "price"
    "call_symbol"
    "put_symbol"
  }},
};

::uint8_t* StrikePriceInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.StrikePriceInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string price = 1 [json_name = "price"];
  if (!this->_internal_price().empty()) {
    const std::string& _s = this->_internal_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StrikePriceInfo.price");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string call_symbol = 2 [json_name = "callSymbol"];
  if (!this->_internal_call_symbol().empty()) {
    const std::string& _s = this->_internal_call_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StrikePriceInfo.call_symbol");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string put_symbol = 3 [json_name = "putSymbol"];
  if (!this->_internal_put_symbol().empty()) {
    const std::string& _s = this->_internal_put_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.StrikePriceInfo.put_symbol");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // bool standard = 4 [json_name = "standard"];
  if (this->_internal_standard() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_standard(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.StrikePriceInfo)
  return target;
}

::size_t StrikePriceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.StrikePriceInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string price = 1 [json_name = "price"];
  if (!this->_internal_price().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_price());
  }

  // string call_symbol = 2 [json_name = "callSymbol"];
  if (!this->_internal_call_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_call_symbol());
  }

  // string put_symbol = 3 [json_name = "putSymbol"];
  if (!this->_internal_put_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_put_symbol());
  }

  // bool standard = 4 [json_name = "standard"];
  if (this->_internal_standard() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData StrikePriceInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    StrikePriceInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*StrikePriceInfo::GetClassData() const { return &_class_data_; }


void StrikePriceInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<StrikePriceInfo*>(&to_msg);
  auto& from = static_cast<const StrikePriceInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.StrikePriceInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_price().empty()) {
    _this->_internal_set_price(from._internal_price());
  }
  if (!from._internal_call_symbol().empty()) {
    _this->_internal_set_call_symbol(from._internal_call_symbol());
  }
  if (!from._internal_put_symbol().empty()) {
    _this->_internal_set_put_symbol(from._internal_put_symbol());
  }
  if (from._internal_standard() != 0) {
    _this->_internal_set_standard(from._internal_standard());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StrikePriceInfo::CopyFrom(const StrikePriceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.StrikePriceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StrikePriceInfo::IsInitialized() const {
  return true;
}

void StrikePriceInfo::InternalSwap(StrikePriceInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.price_, lhs_arena,
                                       &other->_impl_.price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.call_symbol_, lhs_arena,
                                       &other->_impl_.call_symbol_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.put_symbol_, lhs_arena,
                                       &other->_impl_.put_symbol_, rhs_arena);
        swap(_impl_.standard_, other->_impl_.standard_);
}

::google::protobuf::Metadata StrikePriceInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[31]);
}
// ===================================================================

class IssuerInfoResponse::_Internal {
 public:
};

IssuerInfoResponse::IssuerInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.IssuerInfoResponse)
}
IssuerInfoResponse::IssuerInfoResponse(const IssuerInfoResponse& from) : ::google::protobuf::Message() {
  IssuerInfoResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.issuer_info_){from._impl_.issuer_info_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.IssuerInfoResponse)
}
inline void IssuerInfoResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.issuer_info_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
IssuerInfoResponse::~IssuerInfoResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.IssuerInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IssuerInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.issuer_info_.~RepeatedPtrField();
}
void IssuerInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void IssuerInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.IssuerInfoResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_issuer_info()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IssuerInfoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> IssuerInfoResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_IssuerInfoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.IssuerInfo issuer_info = 1 [json_name = "issuerInfo"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(IssuerInfoResponse, _impl_.issuer_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .longportapp.quote.v1.IssuerInfo issuer_info = 1 [json_name = "issuerInfo"];
    {PROTOBUF_FIELD_OFFSET(IssuerInfoResponse, _impl_.issuer_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::IssuerInfo>()},
  }}, {{
  }},
};

::uint8_t* IssuerInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.IssuerInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .longportapp.quote.v1.IssuerInfo issuer_info = 1 [json_name = "issuerInfo"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_issuer_info_size()); i < n; i++) {
    const auto& repfield = this->_internal_issuer_info().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.IssuerInfoResponse)
  return target;
}

::size_t IssuerInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.IssuerInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.IssuerInfo issuer_info = 1 [json_name = "issuerInfo"];
  total_size += 1UL * this->_internal_issuer_info_size();
  for (const auto& msg : this->_internal_issuer_info()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData IssuerInfoResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    IssuerInfoResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*IssuerInfoResponse::GetClassData() const { return &_class_data_; }


void IssuerInfoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<IssuerInfoResponse*>(&to_msg);
  auto& from = static_cast<const IssuerInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.IssuerInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_issuer_info()->MergeFrom(from._internal_issuer_info());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IssuerInfoResponse::CopyFrom(const IssuerInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.IssuerInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IssuerInfoResponse::IsInitialized() const {
  return true;
}

void IssuerInfoResponse::InternalSwap(IssuerInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.issuer_info_.InternalSwap(&other->_impl_.issuer_info_);
}

::google::protobuf::Metadata IssuerInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[32]);
}
// ===================================================================

class IssuerInfo::_Internal {
 public:
};

IssuerInfo::IssuerInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.IssuerInfo)
}
IssuerInfo::IssuerInfo(const IssuerInfo& from) : ::google::protobuf::Message() {
  IssuerInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_cn_){},
      decltype(_impl_.name_en_){},
      decltype(_impl_.name_hk_){},
      decltype(_impl_.id_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_cn_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_cn_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name_cn().empty()) {
    _this->_impl_.name_cn_.Set(from._internal_name_cn(), _this->GetArenaForAllocation());
  }
  _impl_.name_en_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_en_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name_en().empty()) {
    _this->_impl_.name_en_.Set(from._internal_name_en(), _this->GetArenaForAllocation());
  }
  _impl_.name_hk_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_hk_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name_hk().empty()) {
    _this->_impl_.name_hk_.Set(from._internal_name_hk(), _this->GetArenaForAllocation());
  }
  _this->_impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.IssuerInfo)
}
inline void IssuerInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_cn_){},
      decltype(_impl_.name_en_){},
      decltype(_impl_.name_hk_){},
      decltype(_impl_.id_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_cn_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_cn_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_en_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_en_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_hk_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_hk_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
IssuerInfo::~IssuerInfo() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.IssuerInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void IssuerInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_cn_.Destroy();
  _impl_.name_en_.Destroy();
  _impl_.name_hk_.Destroy();
}
void IssuerInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void IssuerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.IssuerInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_cn_.ClearToEmpty();
  _impl_.name_en_.ClearToEmpty();
  _impl_.name_hk_.ClearToEmpty();
  _impl_.id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* IssuerInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 61, 2> IssuerInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_IssuerInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name_hk = 4 [json_name = "nameHk"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(IssuerInfo, _impl_.name_hk_)}},
    // int32 id = 1 [json_name = "id"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IssuerInfo, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(IssuerInfo, _impl_.id_)}},
    // string name_cn = 2 [json_name = "nameCn"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(IssuerInfo, _impl_.name_cn_)}},
    // string name_en = 3 [json_name = "nameEn"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(IssuerInfo, _impl_.name_en_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(IssuerInfo, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string name_cn = 2 [json_name = "nameCn"];
    {PROTOBUF_FIELD_OFFSET(IssuerInfo, _impl_.name_cn_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name_en = 3 [json_name = "nameEn"];
    {PROTOBUF_FIELD_OFFSET(IssuerInfo, _impl_.name_en_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name_hk = 4 [json_name = "nameHk"];
    {PROTOBUF_FIELD_OFFSET(IssuerInfo, _impl_.name_hk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\0\7\7\7\0\0\0"
    "longportapp.quote.v1.IssuerInfo"
    "name_cn"
    "name_en"
    "name_hk"
  }},
};

::uint8_t* IssuerInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.IssuerInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string name_cn = 2 [json_name = "nameCn"];
  if (!this->_internal_name_cn().empty()) {
    const std::string& _s = this->_internal_name_cn();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.IssuerInfo.name_cn");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string name_en = 3 [json_name = "nameEn"];
  if (!this->_internal_name_en().empty()) {
    const std::string& _s = this->_internal_name_en();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.IssuerInfo.name_en");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string name_hk = 4 [json_name = "nameHk"];
  if (!this->_internal_name_hk().empty()) {
    const std::string& _s = this->_internal_name_hk();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.IssuerInfo.name_hk");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.IssuerInfo)
  return target;
}

::size_t IssuerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.IssuerInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name_cn = 2 [json_name = "nameCn"];
  if (!this->_internal_name_cn().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name_cn());
  }

  // string name_en = 3 [json_name = "nameEn"];
  if (!this->_internal_name_en().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name_en());
  }

  // string name_hk = 4 [json_name = "nameHk"];
  if (!this->_internal_name_hk().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name_hk());
  }

  // int32 id = 1 [json_name = "id"];
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData IssuerInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    IssuerInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*IssuerInfo::GetClassData() const { return &_class_data_; }


void IssuerInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<IssuerInfo*>(&to_msg);
  auto& from = static_cast<const IssuerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.IssuerInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name_cn().empty()) {
    _this->_internal_set_name_cn(from._internal_name_cn());
  }
  if (!from._internal_name_en().empty()) {
    _this->_internal_set_name_en(from._internal_name_en());
  }
  if (!from._internal_name_hk().empty()) {
    _this->_internal_set_name_hk(from._internal_name_hk());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IssuerInfo::CopyFrom(const IssuerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.IssuerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool IssuerInfo::IsInitialized() const {
  return true;
}

void IssuerInfo::InternalSwap(IssuerInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_cn_, lhs_arena,
                                       &other->_impl_.name_cn_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_en_, lhs_arena,
                                       &other->_impl_.name_en_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_hk_, lhs_arena,
                                       &other->_impl_.name_hk_, rhs_arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata IssuerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[33]);
}
// ===================================================================

class WarrantFilterListRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<WarrantFilterListRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WarrantFilterListRequest, _impl_._has_bits_);
  static const ::longportapp::quote::v1::FilterConfig& filter_config(const WarrantFilterListRequest* msg);
  static void set_has_filter_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::longportapp::quote::v1::FilterConfig& WarrantFilterListRequest::_Internal::filter_config(const WarrantFilterListRequest* msg) {
  return *msg->_impl_.filter_config_;
}
WarrantFilterListRequest::WarrantFilterListRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.WarrantFilterListRequest)
}
WarrantFilterListRequest::WarrantFilterListRequest(const WarrantFilterListRequest& from) : ::google::protobuf::Message() {
  WarrantFilterListRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.symbol_){},
      decltype(_impl_.filter_config_){nullptr},
      decltype(_impl_.language_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.filter_config_ = new ::longportapp::quote::v1::FilterConfig(*from._impl_.filter_config_);
  }
  _this->_impl_.language_ = from._impl_.language_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.WarrantFilterListRequest)
}
inline void WarrantFilterListRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.symbol_){},
      decltype(_impl_.filter_config_){nullptr},
      decltype(_impl_.language_){0},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
WarrantFilterListRequest::~WarrantFilterListRequest() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.WarrantFilterListRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WarrantFilterListRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
  if (this != internal_default_instance()) delete _impl_.filter_config_;
}
void WarrantFilterListRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WarrantFilterListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.WarrantFilterListRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.filter_config_ != nullptr);
    _impl_.filter_config_->Clear();
  }
  _impl_.language_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WarrantFilterListRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 60, 2> WarrantFilterListRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WarrantFilterListRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WarrantFilterListRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantFilterListRequest, _impl_.symbol_)}},
    // .longportapp.quote.v1.FilterConfig filter_config = 2 [json_name = "filterConfig"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(WarrantFilterListRequest, _impl_.filter_config_)}},
    // int32 language = 3 [json_name = "language"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WarrantFilterListRequest, _impl_.language_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantFilterListRequest, _impl_.language_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(WarrantFilterListRequest, _impl_.symbol_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .longportapp.quote.v1.FilterConfig filter_config = 2 [json_name = "filterConfig"];
    {PROTOBUF_FIELD_OFFSET(WarrantFilterListRequest, _impl_.filter_config_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 language = 3 [json_name = "language"];
    {PROTOBUF_FIELD_OFFSET(WarrantFilterListRequest, _impl_.language_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::FilterConfig>()},
  }}, {{
    "\55\6\0\0\0\0\0\0"
    "longportapp.quote.v1.WarrantFilterListRequest"
    "symbol"
  }},
};

::uint8_t* WarrantFilterListRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.WarrantFilterListRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.WarrantFilterListRequest.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .longportapp.quote.v1.FilterConfig filter_config = 2 [json_name = "filterConfig"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::filter_config(this),
        _Internal::filter_config(this).GetCachedSize(), target, stream);
  }

  // int32 language = 3 [json_name = "language"];
  if (this->_internal_language() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_language(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.WarrantFilterListRequest)
  return target;
}

::size_t WarrantFilterListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.WarrantFilterListRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // .longportapp.quote.v1.FilterConfig filter_config = 2 [json_name = "filterConfig"];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.filter_config_);
  }

  // int32 language = 3 [json_name = "language"];
  if (this->_internal_language() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WarrantFilterListRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WarrantFilterListRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*WarrantFilterListRequest::GetClassData() const { return &_class_data_; }


void WarrantFilterListRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WarrantFilterListRequest*>(&to_msg);
  auto& from = static_cast<const WarrantFilterListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.WarrantFilterListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_filter_config()->::longportapp::quote::v1::FilterConfig::MergeFrom(
        from._internal_filter_config());
  }
  if (from._internal_language() != 0) {
    _this->_internal_set_language(from._internal_language());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WarrantFilterListRequest::CopyFrom(const WarrantFilterListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.WarrantFilterListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WarrantFilterListRequest::IsInitialized() const {
  return true;
}

void WarrantFilterListRequest::InternalSwap(WarrantFilterListRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WarrantFilterListRequest, _impl_.language_)
      + sizeof(WarrantFilterListRequest::_impl_.language_)
      - PROTOBUF_FIELD_OFFSET(WarrantFilterListRequest, _impl_.filter_config_)>(
          reinterpret_cast<char*>(&_impl_.filter_config_),
          reinterpret_cast<char*>(&other->_impl_.filter_config_));
}

::google::protobuf::Metadata WarrantFilterListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[34]);
}
// ===================================================================

class FilterConfig::_Internal {
 public:
};

FilterConfig::FilterConfig(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.FilterConfig)
}
FilterConfig::FilterConfig(const FilterConfig& from) : ::google::protobuf::Message() {
  FilterConfig* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){from._impl_.type_},
      /* _impl_._type_cached_byte_size_ = */ {0},
      decltype(_impl_.issuer_){from._impl_.issuer_},
      /* _impl_._issuer_cached_byte_size_ = */ {0},
      decltype(_impl_.expiry_date_){from._impl_.expiry_date_},
      /* _impl_._expiry_date_cached_byte_size_ = */ {0},
      decltype(_impl_.price_type_){from._impl_.price_type_},
      /* _impl_._price_type_cached_byte_size_ = */ {0},
      decltype(_impl_.status_){from._impl_.status_},
      /* _impl_._status_cached_byte_size_ = */ {0},
      decltype(_impl_.sort_by_){},
      decltype(_impl_.sort_order_){},
      decltype(_impl_.sort_offset_){},
      decltype(_impl_.sort_count_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  ::memcpy(&_impl_.sort_by_, &from._impl_.sort_by_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.sort_count_) -
    reinterpret_cast<char*>(&_impl_.sort_by_)) + sizeof(_impl_.sort_count_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.FilterConfig)
}
inline void FilterConfig::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){arena},
      /* _impl_._type_cached_byte_size_ = */ {0},
      decltype(_impl_.issuer_){arena},
      /* _impl_._issuer_cached_byte_size_ = */ {0},
      decltype(_impl_.expiry_date_){arena},
      /* _impl_._expiry_date_cached_byte_size_ = */ {0},
      decltype(_impl_.price_type_){arena},
      /* _impl_._price_type_cached_byte_size_ = */ {0},
      decltype(_impl_.status_){arena},
      /* _impl_._status_cached_byte_size_ = */ {0},
      decltype(_impl_.sort_by_){0},
      decltype(_impl_.sort_order_){0},
      decltype(_impl_.sort_offset_){0},
      decltype(_impl_.sort_count_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
FilterConfig::~FilterConfig() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.FilterConfig)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FilterConfig::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_.~RepeatedField();
  _impl_.issuer_.~RepeatedField();
  _impl_.expiry_date_.~RepeatedField();
  _impl_.price_type_.~RepeatedField();
  _impl_.status_.~RepeatedField();
}
void FilterConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void FilterConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.FilterConfig)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_type()->Clear();
  _internal_mutable_issuer()->Clear();
  _internal_mutable_expiry_date()->Clear();
  _internal_mutable_price_type()->Clear();
  _internal_mutable_status()->Clear();
  ::memset(&_impl_.sort_by_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sort_count_) -
      reinterpret_cast<char*>(&_impl_.sort_by_)) + sizeof(_impl_.sort_count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FilterConfig::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2> FilterConfig::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FilterConfig_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 sort_by = 1 [json_name = "sortBy"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FilterConfig, _impl_.sort_by_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.sort_by_)}},
    // int32 sort_order = 2 [json_name = "sortOrder"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FilterConfig, _impl_.sort_order_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.sort_order_)}},
    // int32 sort_offset = 3 [json_name = "sortOffset"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FilterConfig, _impl_.sort_offset_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.sort_offset_)}},
    // int32 sort_count = 4 [json_name = "sortCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FilterConfig, _impl_.sort_count_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.sort_count_)}},
    // repeated int32 type = 5 [json_name = "type"];
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.type_)}},
    // repeated int32 issuer = 6 [json_name = "issuer"];
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.issuer_)}},
    // repeated int32 expiry_date = 7 [json_name = "expiryDate"];
    {::_pbi::TcParser::FastV32P1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.expiry_date_)}},
    // repeated int32 price_type = 8 [json_name = "priceType"];
    {::_pbi::TcParser::FastV32P1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.price_type_)}},
    // repeated int32 status = 9 [json_name = "status"];
    {::_pbi::TcParser::FastV32P1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 sort_by = 1 [json_name = "sortBy"];
    {PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.sort_by_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 sort_order = 2 [json_name = "sortOrder"];
    {PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.sort_order_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 sort_offset = 3 [json_name = "sortOffset"];
    {PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.sort_offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 sort_count = 4 [json_name = "sortCount"];
    {PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.sort_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated int32 type = 5 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int32 issuer = 6 [json_name = "issuer"];
    {PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.issuer_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int32 expiry_date = 7 [json_name = "expiryDate"];
    {PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.expiry_date_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int32 price_type = 8 [json_name = "priceType"];
    {PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.price_type_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated int32 status = 9 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FilterConfig::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.FilterConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 sort_by = 1 [json_name = "sortBy"];
  if (this->_internal_sort_by() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_sort_by(), target);
  }

  // int32 sort_order = 2 [json_name = "sortOrder"];
  if (this->_internal_sort_order() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_sort_order(), target);
  }

  // int32 sort_offset = 3 [json_name = "sortOffset"];
  if (this->_internal_sort_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_sort_offset(), target);
  }

  // int32 sort_count = 4 [json_name = "sortCount"];
  if (this->_internal_sort_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_sort_count(), target);
  }

  // repeated int32 type = 5 [json_name = "type"];
  {
    int byte_size = _impl_._type_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(5, _internal_type(),
                                                 byte_size, target);
    }
  }

  // repeated int32 issuer = 6 [json_name = "issuer"];
  {
    int byte_size = _impl_._issuer_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(6, _internal_issuer(),
                                                 byte_size, target);
    }
  }

  // repeated int32 expiry_date = 7 [json_name = "expiryDate"];
  {
    int byte_size = _impl_._expiry_date_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(7, _internal_expiry_date(),
                                                 byte_size, target);
    }
  }

  // repeated int32 price_type = 8 [json_name = "priceType"];
  {
    int byte_size = _impl_._price_type_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(8, _internal_price_type(),
                                                 byte_size, target);
    }
  }

  // repeated int32 status = 9 [json_name = "status"];
  {
    int byte_size = _impl_._status_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(9, _internal_status(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.FilterConfig)
  return target;
}

::size_t FilterConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.FilterConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 type = 5 [json_name = "type"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_type())
    ;
    _impl_._type_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 issuer = 6 [json_name = "issuer"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_issuer())
    ;
    _impl_._issuer_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 expiry_date = 7 [json_name = "expiryDate"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_expiry_date())
    ;
    _impl_._expiry_date_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 price_type = 8 [json_name = "priceType"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_price_type())
    ;
    _impl_._price_type_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated int32 status = 9 [json_name = "status"];
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_status())
    ;
    _impl_._status_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // int32 sort_by = 1 [json_name = "sortBy"];
  if (this->_internal_sort_by() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_sort_by());
  }

  // int32 sort_order = 2 [json_name = "sortOrder"];
  if (this->_internal_sort_order() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_sort_order());
  }

  // int32 sort_offset = 3 [json_name = "sortOffset"];
  if (this->_internal_sort_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_sort_offset());
  }

  // int32 sort_count = 4 [json_name = "sortCount"];
  if (this->_internal_sort_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_sort_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FilterConfig::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    FilterConfig::MergeImpl
};
const ::google::protobuf::Message::ClassData*FilterConfig::GetClassData() const { return &_class_data_; }


void FilterConfig::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FilterConfig*>(&to_msg);
  auto& from = static_cast<const FilterConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.FilterConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_type()->MergeFrom(from._internal_type());
  _this->_internal_mutable_issuer()->MergeFrom(from._internal_issuer());
  _this->_internal_mutable_expiry_date()->MergeFrom(from._internal_expiry_date());
  _this->_internal_mutable_price_type()->MergeFrom(from._internal_price_type());
  _this->_internal_mutable_status()->MergeFrom(from._internal_status());
  if (from._internal_sort_by() != 0) {
    _this->_internal_set_sort_by(from._internal_sort_by());
  }
  if (from._internal_sort_order() != 0) {
    _this->_internal_set_sort_order(from._internal_sort_order());
  }
  if (from._internal_sort_offset() != 0) {
    _this->_internal_set_sort_offset(from._internal_sort_offset());
  }
  if (from._internal_sort_count() != 0) {
    _this->_internal_set_sort_count(from._internal_sort_count());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FilterConfig::CopyFrom(const FilterConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.FilterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FilterConfig::IsInitialized() const {
  return true;
}

void FilterConfig::InternalSwap(FilterConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.type_.InternalSwap(&other->_impl_.type_);
  _impl_.issuer_.InternalSwap(&other->_impl_.issuer_);
  _impl_.expiry_date_.InternalSwap(&other->_impl_.expiry_date_);
  _impl_.price_type_.InternalSwap(&other->_impl_.price_type_);
  _impl_.status_.InternalSwap(&other->_impl_.status_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.sort_count_)
      + sizeof(FilterConfig::_impl_.sort_count_)
      - PROTOBUF_FIELD_OFFSET(FilterConfig, _impl_.sort_by_)>(
          reinterpret_cast<char*>(&_impl_.sort_by_),
          reinterpret_cast<char*>(&other->_impl_.sort_by_));
}

::google::protobuf::Metadata FilterConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[35]);
}
// ===================================================================

class WarrantFilterListResponse::_Internal {
 public:
};

WarrantFilterListResponse::WarrantFilterListResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.WarrantFilterListResponse)
}
WarrantFilterListResponse::WarrantFilterListResponse(const WarrantFilterListResponse& from) : ::google::protobuf::Message() {
  WarrantFilterListResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.warrant_list_){from._impl_.warrant_list_},
      decltype(_impl_.total_count_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.total_count_ = from._impl_.total_count_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.WarrantFilterListResponse)
}
inline void WarrantFilterListResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.warrant_list_){arena},
      decltype(_impl_.total_count_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
WarrantFilterListResponse::~WarrantFilterListResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.WarrantFilterListResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WarrantFilterListResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.warrant_list_.~RepeatedPtrField();
}
void WarrantFilterListResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void WarrantFilterListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.WarrantFilterListResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_warrant_list()->Clear();
  _impl_.total_count_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WarrantFilterListResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> WarrantFilterListResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WarrantFilterListResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 total_count = 2 [json_name = "totalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WarrantFilterListResponse, _impl_.total_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantFilterListResponse, _impl_.total_count_)}},
    // repeated .longportapp.quote.v1.FilterWarrant warrant_list = 1 [json_name = "warrantList"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WarrantFilterListResponse, _impl_.warrant_list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .longportapp.quote.v1.FilterWarrant warrant_list = 1 [json_name = "warrantList"];
    {PROTOBUF_FIELD_OFFSET(WarrantFilterListResponse, _impl_.warrant_list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_count = 2 [json_name = "totalCount"];
    {PROTOBUF_FIELD_OFFSET(WarrantFilterListResponse, _impl_.total_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::FilterWarrant>()},
  }}, {{
  }},
};

::uint8_t* WarrantFilterListResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.WarrantFilterListResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .longportapp.quote.v1.FilterWarrant warrant_list = 1 [json_name = "warrantList"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_warrant_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_warrant_list().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 total_count = 2 [json_name = "totalCount"];
  if (this->_internal_total_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_total_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.WarrantFilterListResponse)
  return target;
}

::size_t WarrantFilterListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.WarrantFilterListResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.FilterWarrant warrant_list = 1 [json_name = "warrantList"];
  total_size += 1UL * this->_internal_warrant_list_size();
  for (const auto& msg : this->_internal_warrant_list()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 total_count = 2 [json_name = "totalCount"];
  if (this->_internal_total_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WarrantFilterListResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    WarrantFilterListResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*WarrantFilterListResponse::GetClassData() const { return &_class_data_; }


void WarrantFilterListResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WarrantFilterListResponse*>(&to_msg);
  auto& from = static_cast<const WarrantFilterListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.WarrantFilterListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_warrant_list()->MergeFrom(from._internal_warrant_list());
  if (from._internal_total_count() != 0) {
    _this->_internal_set_total_count(from._internal_total_count());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WarrantFilterListResponse::CopyFrom(const WarrantFilterListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.WarrantFilterListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WarrantFilterListResponse::IsInitialized() const {
  return true;
}

void WarrantFilterListResponse::InternalSwap(WarrantFilterListResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.warrant_list_.InternalSwap(&other->_impl_.warrant_list_);
        swap(_impl_.total_count_, other->_impl_.total_count_);
}

::google::protobuf::Metadata WarrantFilterListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[36]);
}
// ===================================================================

class FilterWarrant::_Internal {
 public:
};

FilterWarrant::FilterWarrant(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.FilterWarrant)
}
FilterWarrant::FilterWarrant(const FilterWarrant& from) : ::google::protobuf::Message() {
  FilterWarrant* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      decltype(_impl_.name_){},
      decltype(_impl_.last_done_){},
      decltype(_impl_.change_rate_){},
      decltype(_impl_.change_val_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.expiry_date_){},
      decltype(_impl_.strike_price_){},
      decltype(_impl_.upper_strike_price_){},
      decltype(_impl_.lower_strike_price_){},
      decltype(_impl_.outstanding_qty_){},
      decltype(_impl_.outstanding_ratio_){},
      decltype(_impl_.premium_){},
      decltype(_impl_.itm_otm_){},
      decltype(_impl_.implied_volatility_){},
      decltype(_impl_.delta_){},
      decltype(_impl_.call_price_){},
      decltype(_impl_.to_call_price_){},
      decltype(_impl_.effective_leverage_){},
      decltype(_impl_.leverage_ratio_){},
      decltype(_impl_.conversion_ratio_){},
      decltype(_impl_.balance_point_){},
      decltype(_impl_.state_){},
      decltype(_impl_.volume_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.last_done_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_done_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_done().empty()) {
    _this->_impl_.last_done_.Set(from._internal_last_done(), _this->GetArenaForAllocation());
  }
  _impl_.change_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.change_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_change_rate().empty()) {
    _this->_impl_.change_rate_.Set(from._internal_change_rate(), _this->GetArenaForAllocation());
  }
  _impl_.change_val_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.change_val_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_change_val().empty()) {
    _this->_impl_.change_val_.Set(from._internal_change_val(), _this->GetArenaForAllocation());
  }
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_turnover().empty()) {
    _this->_impl_.turnover_.Set(from._internal_turnover(), _this->GetArenaForAllocation());
  }
  _impl_.expiry_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.expiry_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_expiry_date().empty()) {
    _this->_impl_.expiry_date_.Set(from._internal_expiry_date(), _this->GetArenaForAllocation());
  }
  _impl_.strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strike_price().empty()) {
    _this->_impl_.strike_price_.Set(from._internal_strike_price(), _this->GetArenaForAllocation());
  }
  _impl_.upper_strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.upper_strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_upper_strike_price().empty()) {
    _this->_impl_.upper_strike_price_.Set(from._internal_upper_strike_price(), _this->GetArenaForAllocation());
  }
  _impl_.lower_strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lower_strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lower_strike_price().empty()) {
    _this->_impl_.lower_strike_price_.Set(from._internal_lower_strike_price(), _this->GetArenaForAllocation());
  }
  _impl_.outstanding_qty_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.outstanding_qty_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_outstanding_qty().empty()) {
    _this->_impl_.outstanding_qty_.Set(from._internal_outstanding_qty(), _this->GetArenaForAllocation());
  }
  _impl_.outstanding_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.outstanding_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_outstanding_ratio().empty()) {
    _this->_impl_.outstanding_ratio_.Set(from._internal_outstanding_ratio(), _this->GetArenaForAllocation());
  }
  _impl_.premium_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.premium_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_premium().empty()) {
    _this->_impl_.premium_.Set(from._internal_premium(), _this->GetArenaForAllocation());
  }
  _impl_.itm_otm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.itm_otm_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_itm_otm().empty()) {
    _this->_impl_.itm_otm_.Set(from._internal_itm_otm(), _this->GetArenaForAllocation());
  }
  _impl_.implied_volatility_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.implied_volatility_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_implied_volatility().empty()) {
    _this->_impl_.implied_volatility_.Set(from._internal_implied_volatility(), _this->GetArenaForAllocation());
  }
  _impl_.delta_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delta_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delta().empty()) {
    _this->_impl_.delta_.Set(from._internal_delta(), _this->GetArenaForAllocation());
  }
  _impl_.call_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.call_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_call_price().empty()) {
    _this->_impl_.call_price_.Set(from._internal_call_price(), _this->GetArenaForAllocation());
  }
  _impl_.to_call_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.to_call_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_to_call_price().empty()) {
    _this->_impl_.to_call_price_.Set(from._internal_to_call_price(), _this->GetArenaForAllocation());
  }
  _impl_.effective_leverage_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.effective_leverage_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_effective_leverage().empty()) {
    _this->_impl_.effective_leverage_.Set(from._internal_effective_leverage(), _this->GetArenaForAllocation());
  }
  _impl_.leverage_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.leverage_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_leverage_ratio().empty()) {
    _this->_impl_.leverage_ratio_.Set(from._internal_leverage_ratio(), _this->GetArenaForAllocation());
  }
  _impl_.conversion_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.conversion_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_conversion_ratio().empty()) {
    _this->_impl_.conversion_ratio_.Set(from._internal_conversion_ratio(), _this->GetArenaForAllocation());
  }
  _impl_.balance_point_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.balance_point_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_balance_point().empty()) {
    _this->_impl_.balance_point_.Set(from._internal_balance_point(), _this->GetArenaForAllocation());
  }
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.state_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    _this->_impl_.state_.Set(from._internal_state(), _this->GetArenaForAllocation());
  }
  _this->_impl_.volume_ = from._impl_.volume_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.FilterWarrant)
}
inline void FilterWarrant::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      decltype(_impl_.name_){},
      decltype(_impl_.last_done_){},
      decltype(_impl_.change_rate_){},
      decltype(_impl_.change_val_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.expiry_date_){},
      decltype(_impl_.strike_price_){},
      decltype(_impl_.upper_strike_price_){},
      decltype(_impl_.lower_strike_price_){},
      decltype(_impl_.outstanding_qty_){},
      decltype(_impl_.outstanding_ratio_){},
      decltype(_impl_.premium_){},
      decltype(_impl_.itm_otm_){},
      decltype(_impl_.implied_volatility_){},
      decltype(_impl_.delta_){},
      decltype(_impl_.call_price_){},
      decltype(_impl_.to_call_price_){},
      decltype(_impl_.effective_leverage_){},
      decltype(_impl_.leverage_ratio_){},
      decltype(_impl_.conversion_ratio_){},
      decltype(_impl_.balance_point_){},
      decltype(_impl_.state_){},
      decltype(_impl_.volume_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.last_done_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_done_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.change_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.change_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.change_val_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.change_val_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.expiry_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.expiry_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.upper_strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.upper_strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.lower_strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lower_strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.outstanding_qty_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.outstanding_qty_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.outstanding_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.outstanding_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.premium_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.premium_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.itm_otm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.itm_otm_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.implied_volatility_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.implied_volatility_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.delta_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delta_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.call_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.call_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.to_call_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.to_call_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.effective_leverage_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.effective_leverage_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.leverage_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.leverage_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.conversion_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.conversion_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.balance_point_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.balance_point_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.state_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
FilterWarrant::~FilterWarrant() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.FilterWarrant)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FilterWarrant::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
  _impl_.name_.Destroy();
  _impl_.last_done_.Destroy();
  _impl_.change_rate_.Destroy();
  _impl_.change_val_.Destroy();
  _impl_.turnover_.Destroy();
  _impl_.expiry_date_.Destroy();
  _impl_.strike_price_.Destroy();
  _impl_.upper_strike_price_.Destroy();
  _impl_.lower_strike_price_.Destroy();
  _impl_.outstanding_qty_.Destroy();
  _impl_.outstanding_ratio_.Destroy();
  _impl_.premium_.Destroy();
  _impl_.itm_otm_.Destroy();
  _impl_.implied_volatility_.Destroy();
  _impl_.delta_.Destroy();
  _impl_.call_price_.Destroy();
  _impl_.to_call_price_.Destroy();
  _impl_.effective_leverage_.Destroy();
  _impl_.leverage_ratio_.Destroy();
  _impl_.conversion_ratio_.Destroy();
  _impl_.balance_point_.Destroy();
  _impl_.state_.Destroy();
}
void FilterWarrant::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void FilterWarrant::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.FilterWarrant)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.last_done_.ClearToEmpty();
  _impl_.change_rate_.ClearToEmpty();
  _impl_.change_val_.ClearToEmpty();
  _impl_.turnover_.ClearToEmpty();
  _impl_.expiry_date_.ClearToEmpty();
  _impl_.strike_price_.ClearToEmpty();
  _impl_.upper_strike_price_.ClearToEmpty();
  _impl_.lower_strike_price_.ClearToEmpty();
  _impl_.outstanding_qty_.ClearToEmpty();
  _impl_.outstanding_ratio_.ClearToEmpty();
  _impl_.premium_.ClearToEmpty();
  _impl_.itm_otm_.ClearToEmpty();
  _impl_.implied_volatility_.ClearToEmpty();
  _impl_.delta_.ClearToEmpty();
  _impl_.call_price_.ClearToEmpty();
  _impl_.to_call_price_.ClearToEmpty();
  _impl_.effective_leverage_.ClearToEmpty();
  _impl_.leverage_ratio_.ClearToEmpty();
  _impl_.conversion_ratio_.ClearToEmpty();
  _impl_.balance_point_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  _impl_.volume_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FilterWarrant::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 24, 0, 332, 2> FilterWarrant::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    24, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4278190080,  // skipmap
    offsetof(decltype(_table_), field_entries),
    24,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FilterWarrant_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.symbol_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.name_)}},
    // string last_done = 3 [json_name = "lastDone"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.last_done_)}},
    // string change_rate = 4 [json_name = "changeRate"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.change_rate_)}},
    // string change_val = 5 [json_name = "changeVal"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.change_val_)}},
    // int64 volume = 6 [json_name = "volume"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FilterWarrant, _impl_.volume_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.volume_)}},
    // string turnover = 7 [json_name = "turnover"];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.turnover_)}},
    // string expiry_date = 8 [json_name = "expiryDate"];
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.expiry_date_)}},
    // string strike_price = 9 [json_name = "strikePrice"];
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.strike_price_)}},
    // string upper_strike_price = 10 [json_name = "upperStrikePrice"];
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.upper_strike_price_)}},
    // string lower_strike_price = 11 [json_name = "lowerStrikePrice"];
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.lower_strike_price_)}},
    // string outstanding_qty = 12 [json_name = "outstandingQty"];
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.outstanding_qty_)}},
    // string outstanding_ratio = 13 [json_name = "outstandingRatio"];
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.outstanding_ratio_)}},
    // string premium = 14 [json_name = "premium"];
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.premium_)}},
    // string itm_otm = 15 [json_name = "itmOtm"];
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.itm_otm_)}},
    // string implied_volatility = 16 [json_name = "impliedVolatility"];
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.implied_volatility_)}},
    // string delta = 17 [json_name = "delta"];
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.delta_)}},
    // string call_price = 18 [json_name = "callPrice"];
    {::_pbi::TcParser::FastUS2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.call_price_)}},
    // string to_call_price = 19 [json_name = "toCallPrice"];
    {::_pbi::TcParser::FastUS2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.to_call_price_)}},
    // string effective_leverage = 20 [json_name = "effectiveLeverage"];
    {::_pbi::TcParser::FastUS2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.effective_leverage_)}},
    // string leverage_ratio = 21 [json_name = "leverageRatio"];
    {::_pbi::TcParser::FastUS2,
     {426, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.leverage_ratio_)}},
    // string conversion_ratio = 22 [json_name = "conversionRatio"];
    {::_pbi::TcParser::FastUS2,
     {434, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.conversion_ratio_)}},
    // string balance_point = 23 [json_name = "balancePoint"];
    {::_pbi::TcParser::FastUS2,
     {442, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.balance_point_)}},
    // string state = 24 [json_name = "state"];
    {::_pbi::TcParser::FastUS2,
     {450, 63, 0, PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.state_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string last_done = 3 [json_name = "lastDone"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.last_done_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string change_rate = 4 [json_name = "changeRate"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.change_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string change_val = 5 [json_name = "changeVal"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.change_val_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 volume = 6 [json_name = "volume"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.volume_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string turnover = 7 [json_name = "turnover"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.turnover_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string expiry_date = 8 [json_name = "expiryDate"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.expiry_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string strike_price = 9 [json_name = "strikePrice"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.strike_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string upper_strike_price = 10 [json_name = "upperStrikePrice"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.upper_strike_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string lower_strike_price = 11 [json_name = "lowerStrikePrice"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.lower_strike_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string outstanding_qty = 12 [json_name = "outstandingQty"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.outstanding_qty_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string outstanding_ratio = 13 [json_name = "outstandingRatio"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.outstanding_ratio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string premium = 14 [json_name = "premium"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.premium_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string itm_otm = 15 [json_name = "itmOtm"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.itm_otm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string implied_volatility = 16 [json_name = "impliedVolatility"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.implied_volatility_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string delta = 17 [json_name = "delta"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.delta_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string call_price = 18 [json_name = "callPrice"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.call_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string to_call_price = 19 [json_name = "toCallPrice"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.to_call_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string effective_leverage = 20 [json_name = "effectiveLeverage"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.effective_leverage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string leverage_ratio = 21 [json_name = "leverageRatio"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.leverage_ratio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string conversion_ratio = 22 [json_name = "conversionRatio"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.conversion_ratio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string balance_point = 23 [json_name = "balancePoint"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.balance_point_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string state = 24 [json_name = "state"];
    {PROTOBUF_FIELD_OFFSET(FilterWarrant, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\6\4\11\13\12\0\10\13\14\22\22\17\21\7\7\22\5\12\15\22\16\20\15\5\0\0\0\0\0\0\0"
    "longportapp.quote.v1.FilterWarrant"
    "symbol"
    "name"
    "last_done"
    "change_rate"
    "change_val"
    "turnover"
    "expiry_date"
    "strike_price"
    "upper_strike_price"
    "lower_strike_price"
    "outstanding_qty"
    "outstanding_ratio"
    "premium"
    "itm_otm"
    "implied_volatility"
    "delta"
    "call_price"
    "to_call_price"
    "effective_leverage"
    "leverage_ratio"
    "conversion_ratio"
    "balance_point"
    "state"
  }},
};

::uint8_t* FilterWarrant::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.FilterWarrant)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string last_done = 3 [json_name = "lastDone"];
  if (!this->_internal_last_done().empty()) {
    const std::string& _s = this->_internal_last_done();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.last_done");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string change_rate = 4 [json_name = "changeRate"];
  if (!this->_internal_change_rate().empty()) {
    const std::string& _s = this->_internal_change_rate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.change_rate");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string change_val = 5 [json_name = "changeVal"];
  if (!this->_internal_change_val().empty()) {
    const std::string& _s = this->_internal_change_val();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.change_val");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // int64 volume = 6 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<6>(
            stream, this->_internal_volume(), target);
  }

  // string turnover = 7 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    const std::string& _s = this->_internal_turnover();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.turnover");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string expiry_date = 8 [json_name = "expiryDate"];
  if (!this->_internal_expiry_date().empty()) {
    const std::string& _s = this->_internal_expiry_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.expiry_date");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // string strike_price = 9 [json_name = "strikePrice"];
  if (!this->_internal_strike_price().empty()) {
    const std::string& _s = this->_internal_strike_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.strike_price");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string upper_strike_price = 10 [json_name = "upperStrikePrice"];
  if (!this->_internal_upper_strike_price().empty()) {
    const std::string& _s = this->_internal_upper_strike_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.upper_strike_price");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // string lower_strike_price = 11 [json_name = "lowerStrikePrice"];
  if (!this->_internal_lower_strike_price().empty()) {
    const std::string& _s = this->_internal_lower_strike_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.lower_strike_price");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // string outstanding_qty = 12 [json_name = "outstandingQty"];
  if (!this->_internal_outstanding_qty().empty()) {
    const std::string& _s = this->_internal_outstanding_qty();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.outstanding_qty");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // string outstanding_ratio = 13 [json_name = "outstandingRatio"];
  if (!this->_internal_outstanding_ratio().empty()) {
    const std::string& _s = this->_internal_outstanding_ratio();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.outstanding_ratio");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // string premium = 14 [json_name = "premium"];
  if (!this->_internal_premium().empty()) {
    const std::string& _s = this->_internal_premium();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.premium");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // string itm_otm = 15 [json_name = "itmOtm"];
  if (!this->_internal_itm_otm().empty()) {
    const std::string& _s = this->_internal_itm_otm();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.itm_otm");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  // string implied_volatility = 16 [json_name = "impliedVolatility"];
  if (!this->_internal_implied_volatility().empty()) {
    const std::string& _s = this->_internal_implied_volatility();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.implied_volatility");
    target = stream->WriteStringMaybeAliased(16, _s, target);
  }

  // string delta = 17 [json_name = "delta"];
  if (!this->_internal_delta().empty()) {
    const std::string& _s = this->_internal_delta();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.delta");
    target = stream->WriteStringMaybeAliased(17, _s, target);
  }

  // string call_price = 18 [json_name = "callPrice"];
  if (!this->_internal_call_price().empty()) {
    const std::string& _s = this->_internal_call_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.call_price");
    target = stream->WriteStringMaybeAliased(18, _s, target);
  }

  // string to_call_price = 19 [json_name = "toCallPrice"];
  if (!this->_internal_to_call_price().empty()) {
    const std::string& _s = this->_internal_to_call_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.to_call_price");
    target = stream->WriteStringMaybeAliased(19, _s, target);
  }

  // string effective_leverage = 20 [json_name = "effectiveLeverage"];
  if (!this->_internal_effective_leverage().empty()) {
    const std::string& _s = this->_internal_effective_leverage();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.effective_leverage");
    target = stream->WriteStringMaybeAliased(20, _s, target);
  }

  // string leverage_ratio = 21 [json_name = "leverageRatio"];
  if (!this->_internal_leverage_ratio().empty()) {
    const std::string& _s = this->_internal_leverage_ratio();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.leverage_ratio");
    target = stream->WriteStringMaybeAliased(21, _s, target);
  }

  // string conversion_ratio = 22 [json_name = "conversionRatio"];
  if (!this->_internal_conversion_ratio().empty()) {
    const std::string& _s = this->_internal_conversion_ratio();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.conversion_ratio");
    target = stream->WriteStringMaybeAliased(22, _s, target);
  }

  // string balance_point = 23 [json_name = "balancePoint"];
  if (!this->_internal_balance_point().empty()) {
    const std::string& _s = this->_internal_balance_point();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.balance_point");
    target = stream->WriteStringMaybeAliased(23, _s, target);
  }

  // string state = 24 [json_name = "state"];
  if (!this->_internal_state().empty()) {
    const std::string& _s = this->_internal_state();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.FilterWarrant.state");
    target = stream->WriteStringMaybeAliased(24, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.FilterWarrant)
  return target;
}

::size_t FilterWarrant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.FilterWarrant)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // string name = 2 [json_name = "name"];
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string last_done = 3 [json_name = "lastDone"];
  if (!this->_internal_last_done().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_last_done());
  }

  // string change_rate = 4 [json_name = "changeRate"];
  if (!this->_internal_change_rate().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_change_rate());
  }

  // string change_val = 5 [json_name = "changeVal"];
  if (!this->_internal_change_val().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_change_val());
  }

  // string turnover = 7 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_turnover());
  }

  // string expiry_date = 8 [json_name = "expiryDate"];
  if (!this->_internal_expiry_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_expiry_date());
  }

  // string strike_price = 9 [json_name = "strikePrice"];
  if (!this->_internal_strike_price().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_strike_price());
  }

  // string upper_strike_price = 10 [json_name = "upperStrikePrice"];
  if (!this->_internal_upper_strike_price().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_upper_strike_price());
  }

  // string lower_strike_price = 11 [json_name = "lowerStrikePrice"];
  if (!this->_internal_lower_strike_price().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_lower_strike_price());
  }

  // string outstanding_qty = 12 [json_name = "outstandingQty"];
  if (!this->_internal_outstanding_qty().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_outstanding_qty());
  }

  // string outstanding_ratio = 13 [json_name = "outstandingRatio"];
  if (!this->_internal_outstanding_ratio().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_outstanding_ratio());
  }

  // string premium = 14 [json_name = "premium"];
  if (!this->_internal_premium().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_premium());
  }

  // string itm_otm = 15 [json_name = "itmOtm"];
  if (!this->_internal_itm_otm().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_itm_otm());
  }

  // string implied_volatility = 16 [json_name = "impliedVolatility"];
  if (!this->_internal_implied_volatility().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_implied_volatility());
  }

  // string delta = 17 [json_name = "delta"];
  if (!this->_internal_delta().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_delta());
  }

  // string call_price = 18 [json_name = "callPrice"];
  if (!this->_internal_call_price().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_call_price());
  }

  // string to_call_price = 19 [json_name = "toCallPrice"];
  if (!this->_internal_to_call_price().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_to_call_price());
  }

  // string effective_leverage = 20 [json_name = "effectiveLeverage"];
  if (!this->_internal_effective_leverage().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_effective_leverage());
  }

  // string leverage_ratio = 21 [json_name = "leverageRatio"];
  if (!this->_internal_leverage_ratio().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_leverage_ratio());
  }

  // string conversion_ratio = 22 [json_name = "conversionRatio"];
  if (!this->_internal_conversion_ratio().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_conversion_ratio());
  }

  // string balance_point = 23 [json_name = "balancePoint"];
  if (!this->_internal_balance_point().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_balance_point());
  }

  // string state = 24 [json_name = "state"];
  if (!this->_internal_state().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_state());
  }

  // int64 volume = 6 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_volume());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FilterWarrant::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    FilterWarrant::MergeImpl
};
const ::google::protobuf::Message::ClassData*FilterWarrant::GetClassData() const { return &_class_data_; }


void FilterWarrant::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FilterWarrant*>(&to_msg);
  auto& from = static_cast<const FilterWarrant&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.FilterWarrant)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_last_done().empty()) {
    _this->_internal_set_last_done(from._internal_last_done());
  }
  if (!from._internal_change_rate().empty()) {
    _this->_internal_set_change_rate(from._internal_change_rate());
  }
  if (!from._internal_change_val().empty()) {
    _this->_internal_set_change_val(from._internal_change_val());
  }
  if (!from._internal_turnover().empty()) {
    _this->_internal_set_turnover(from._internal_turnover());
  }
  if (!from._internal_expiry_date().empty()) {
    _this->_internal_set_expiry_date(from._internal_expiry_date());
  }
  if (!from._internal_strike_price().empty()) {
    _this->_internal_set_strike_price(from._internal_strike_price());
  }
  if (!from._internal_upper_strike_price().empty()) {
    _this->_internal_set_upper_strike_price(from._internal_upper_strike_price());
  }
  if (!from._internal_lower_strike_price().empty()) {
    _this->_internal_set_lower_strike_price(from._internal_lower_strike_price());
  }
  if (!from._internal_outstanding_qty().empty()) {
    _this->_internal_set_outstanding_qty(from._internal_outstanding_qty());
  }
  if (!from._internal_outstanding_ratio().empty()) {
    _this->_internal_set_outstanding_ratio(from._internal_outstanding_ratio());
  }
  if (!from._internal_premium().empty()) {
    _this->_internal_set_premium(from._internal_premium());
  }
  if (!from._internal_itm_otm().empty()) {
    _this->_internal_set_itm_otm(from._internal_itm_otm());
  }
  if (!from._internal_implied_volatility().empty()) {
    _this->_internal_set_implied_volatility(from._internal_implied_volatility());
  }
  if (!from._internal_delta().empty()) {
    _this->_internal_set_delta(from._internal_delta());
  }
  if (!from._internal_call_price().empty()) {
    _this->_internal_set_call_price(from._internal_call_price());
  }
  if (!from._internal_to_call_price().empty()) {
    _this->_internal_set_to_call_price(from._internal_to_call_price());
  }
  if (!from._internal_effective_leverage().empty()) {
    _this->_internal_set_effective_leverage(from._internal_effective_leverage());
  }
  if (!from._internal_leverage_ratio().empty()) {
    _this->_internal_set_leverage_ratio(from._internal_leverage_ratio());
  }
  if (!from._internal_conversion_ratio().empty()) {
    _this->_internal_set_conversion_ratio(from._internal_conversion_ratio());
  }
  if (!from._internal_balance_point().empty()) {
    _this->_internal_set_balance_point(from._internal_balance_point());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_volume() != 0) {
    _this->_internal_set_volume(from._internal_volume());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FilterWarrant::CopyFrom(const FilterWarrant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.FilterWarrant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FilterWarrant::IsInitialized() const {
  return true;
}

void FilterWarrant::InternalSwap(FilterWarrant* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_done_, lhs_arena,
                                       &other->_impl_.last_done_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.change_rate_, lhs_arena,
                                       &other->_impl_.change_rate_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.change_val_, lhs_arena,
                                       &other->_impl_.change_val_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.turnover_, lhs_arena,
                                       &other->_impl_.turnover_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expiry_date_, lhs_arena,
                                       &other->_impl_.expiry_date_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.strike_price_, lhs_arena,
                                       &other->_impl_.strike_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.upper_strike_price_, lhs_arena,
                                       &other->_impl_.upper_strike_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lower_strike_price_, lhs_arena,
                                       &other->_impl_.lower_strike_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.outstanding_qty_, lhs_arena,
                                       &other->_impl_.outstanding_qty_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.outstanding_ratio_, lhs_arena,
                                       &other->_impl_.outstanding_ratio_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.premium_, lhs_arena,
                                       &other->_impl_.premium_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.itm_otm_, lhs_arena,
                                       &other->_impl_.itm_otm_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.implied_volatility_, lhs_arena,
                                       &other->_impl_.implied_volatility_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delta_, lhs_arena,
                                       &other->_impl_.delta_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.call_price_, lhs_arena,
                                       &other->_impl_.call_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_call_price_, lhs_arena,
                                       &other->_impl_.to_call_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.effective_leverage_, lhs_arena,
                                       &other->_impl_.effective_leverage_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.leverage_ratio_, lhs_arena,
                                       &other->_impl_.leverage_ratio_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.conversion_ratio_, lhs_arena,
                                       &other->_impl_.conversion_ratio_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.balance_point_, lhs_arena,
                                       &other->_impl_.balance_point_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, lhs_arena,
                                       &other->_impl_.state_, rhs_arena);
        swap(_impl_.volume_, other->_impl_.volume_);
}

::google::protobuf::Metadata FilterWarrant::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[37]);
}
// ===================================================================

class MarketTradePeriodResponse::_Internal {
 public:
};

MarketTradePeriodResponse::MarketTradePeriodResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.MarketTradePeriodResponse)
}
MarketTradePeriodResponse::MarketTradePeriodResponse(const MarketTradePeriodResponse& from) : ::google::protobuf::Message() {
  MarketTradePeriodResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.market_trade_session_){from._impl_.market_trade_session_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.MarketTradePeriodResponse)
}
inline void MarketTradePeriodResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.market_trade_session_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
MarketTradePeriodResponse::~MarketTradePeriodResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.MarketTradePeriodResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MarketTradePeriodResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.market_trade_session_.~RepeatedPtrField();
}
void MarketTradePeriodResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MarketTradePeriodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.MarketTradePeriodResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_market_trade_session()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MarketTradePeriodResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> MarketTradePeriodResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MarketTradePeriodResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.MarketTradePeriod market_trade_session = 1 [json_name = "marketTradeSession"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MarketTradePeriodResponse, _impl_.market_trade_session_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .longportapp.quote.v1.MarketTradePeriod market_trade_session = 1 [json_name = "marketTradeSession"];
    {PROTOBUF_FIELD_OFFSET(MarketTradePeriodResponse, _impl_.market_trade_session_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::MarketTradePeriod>()},
  }}, {{
  }},
};

::uint8_t* MarketTradePeriodResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.MarketTradePeriodResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .longportapp.quote.v1.MarketTradePeriod market_trade_session = 1 [json_name = "marketTradeSession"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_market_trade_session_size()); i < n; i++) {
    const auto& repfield = this->_internal_market_trade_session().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.MarketTradePeriodResponse)
  return target;
}

::size_t MarketTradePeriodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.MarketTradePeriodResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.MarketTradePeriod market_trade_session = 1 [json_name = "marketTradeSession"];
  total_size += 1UL * this->_internal_market_trade_session_size();
  for (const auto& msg : this->_internal_market_trade_session()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MarketTradePeriodResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MarketTradePeriodResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*MarketTradePeriodResponse::GetClassData() const { return &_class_data_; }


void MarketTradePeriodResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MarketTradePeriodResponse*>(&to_msg);
  auto& from = static_cast<const MarketTradePeriodResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.MarketTradePeriodResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_market_trade_session()->MergeFrom(from._internal_market_trade_session());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MarketTradePeriodResponse::CopyFrom(const MarketTradePeriodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.MarketTradePeriodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MarketTradePeriodResponse::IsInitialized() const {
  return true;
}

void MarketTradePeriodResponse::InternalSwap(MarketTradePeriodResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.market_trade_session_.InternalSwap(&other->_impl_.market_trade_session_);
}

::google::protobuf::Metadata MarketTradePeriodResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[38]);
}
// ===================================================================

class MarketTradePeriod::_Internal {
 public:
};

MarketTradePeriod::MarketTradePeriod(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.MarketTradePeriod)
}
MarketTradePeriod::MarketTradePeriod(const MarketTradePeriod& from) : ::google::protobuf::Message() {
  MarketTradePeriod* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trade_session_){from._impl_.trade_session_},
      decltype(_impl_.market_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.market_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.market_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_market().empty()) {
    _this->_impl_.market_.Set(from._internal_market(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.MarketTradePeriod)
}
inline void MarketTradePeriod::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.trade_session_){arena},
      decltype(_impl_.market_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.market_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.market_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
MarketTradePeriod::~MarketTradePeriod() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.MarketTradePeriod)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MarketTradePeriod::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trade_session_.~RepeatedPtrField();
  _impl_.market_.Destroy();
}
void MarketTradePeriod::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MarketTradePeriod::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.MarketTradePeriod)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_trade_session()->Clear();
  _impl_.market_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MarketTradePeriod::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 53, 2> MarketTradePeriod::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_MarketTradePeriod_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.TradePeriod trade_session = 2 [json_name = "tradeSession"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MarketTradePeriod, _impl_.trade_session_)}},
    // string market = 1 [json_name = "market"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MarketTradePeriod, _impl_.market_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string market = 1 [json_name = "market"];
    {PROTOBUF_FIELD_OFFSET(MarketTradePeriod, _impl_.market_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .longportapp.quote.v1.TradePeriod trade_session = 2 [json_name = "tradeSession"];
    {PROTOBUF_FIELD_OFFSET(MarketTradePeriod, _impl_.trade_session_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::TradePeriod>()},
  }}, {{
    "\46\6\0\0\0\0\0\0"
    "longportapp.quote.v1.MarketTradePeriod"
    "market"
  }},
};

::uint8_t* MarketTradePeriod::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.MarketTradePeriod)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string market = 1 [json_name = "market"];
  if (!this->_internal_market().empty()) {
    const std::string& _s = this->_internal_market();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.MarketTradePeriod.market");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .longportapp.quote.v1.TradePeriod trade_session = 2 [json_name = "tradeSession"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_trade_session_size()); i < n; i++) {
    const auto& repfield = this->_internal_trade_session().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.MarketTradePeriod)
  return target;
}

::size_t MarketTradePeriod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.MarketTradePeriod)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.TradePeriod trade_session = 2 [json_name = "tradeSession"];
  total_size += 1UL * this->_internal_trade_session_size();
  for (const auto& msg : this->_internal_trade_session()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string market = 1 [json_name = "market"];
  if (!this->_internal_market().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_market());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MarketTradePeriod::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MarketTradePeriod::MergeImpl
};
const ::google::protobuf::Message::ClassData*MarketTradePeriod::GetClassData() const { return &_class_data_; }


void MarketTradePeriod::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MarketTradePeriod*>(&to_msg);
  auto& from = static_cast<const MarketTradePeriod&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.MarketTradePeriod)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trade_session()->MergeFrom(from._internal_trade_session());
  if (!from._internal_market().empty()) {
    _this->_internal_set_market(from._internal_market());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MarketTradePeriod::CopyFrom(const MarketTradePeriod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.MarketTradePeriod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MarketTradePeriod::IsInitialized() const {
  return true;
}

void MarketTradePeriod::InternalSwap(MarketTradePeriod* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trade_session_.InternalSwap(&other->_impl_.trade_session_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_, lhs_arena,
                                       &other->_impl_.market_, rhs_arena);
}

::google::protobuf::Metadata MarketTradePeriod::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[39]);
}
// ===================================================================

class TradePeriod::_Internal {
 public:
};

TradePeriod::TradePeriod(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.TradePeriod)
}
TradePeriod::TradePeriod(const TradePeriod& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.TradePeriod)
}
inline void TradePeriod::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.beg_time_){0},
      decltype(_impl_.end_time_){0},
      decltype(_impl_.trade_session_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
TradePeriod::~TradePeriod() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.TradePeriod)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TradePeriod::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TradePeriod::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TradePeriod::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.TradePeriod)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.beg_time_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.trade_session_) -
      reinterpret_cast<char*>(&_impl_.beg_time_)) + sizeof(_impl_.trade_session_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TradePeriod::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> TradePeriod::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TradePeriod_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 beg_time = 1 [json_name = "begTime"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TradePeriod, _impl_.beg_time_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TradePeriod, _impl_.beg_time_)}},
    // int32 end_time = 2 [json_name = "endTime"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TradePeriod, _impl_.end_time_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TradePeriod, _impl_.end_time_)}},
    // .longportapp.quote.v1.TradeSession trade_session = 3 [json_name = "tradeSession"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TradePeriod, _impl_.trade_session_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TradePeriod, _impl_.trade_session_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 beg_time = 1 [json_name = "begTime"];
    {PROTOBUF_FIELD_OFFSET(TradePeriod, _impl_.beg_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 end_time = 2 [json_name = "endTime"];
    {PROTOBUF_FIELD_OFFSET(TradePeriod, _impl_.end_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .longportapp.quote.v1.TradeSession trade_session = 3 [json_name = "tradeSession"];
    {PROTOBUF_FIELD_OFFSET(TradePeriod, _impl_.trade_session_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TradePeriod::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.TradePeriod)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 beg_time = 1 [json_name = "begTime"];
  if (this->_internal_beg_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_beg_time(), target);
  }

  // int32 end_time = 2 [json_name = "endTime"];
  if (this->_internal_end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_end_time(), target);
  }

  // .longportapp.quote.v1.TradeSession trade_session = 3 [json_name = "tradeSession"];
  if (this->_internal_trade_session() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_trade_session(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.TradePeriod)
  return target;
}

::size_t TradePeriod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.TradePeriod)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 beg_time = 1 [json_name = "begTime"];
  if (this->_internal_beg_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_beg_time());
  }

  // int32 end_time = 2 [json_name = "endTime"];
  if (this->_internal_end_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_end_time());
  }

  // .longportapp.quote.v1.TradeSession trade_session = 3 [json_name = "tradeSession"];
  if (this->_internal_trade_session() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_trade_session());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TradePeriod::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TradePeriod::MergeImpl
};
const ::google::protobuf::Message::ClassData*TradePeriod::GetClassData() const { return &_class_data_; }


void TradePeriod::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TradePeriod*>(&to_msg);
  auto& from = static_cast<const TradePeriod&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.TradePeriod)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_beg_time() != 0) {
    _this->_internal_set_beg_time(from._internal_beg_time());
  }
  if (from._internal_end_time() != 0) {
    _this->_internal_set_end_time(from._internal_end_time());
  }
  if (from._internal_trade_session() != 0) {
    _this->_internal_set_trade_session(from._internal_trade_session());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TradePeriod::CopyFrom(const TradePeriod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.TradePeriod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TradePeriod::IsInitialized() const {
  return true;
}

void TradePeriod::InternalSwap(TradePeriod* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TradePeriod, _impl_.trade_session_)
      + sizeof(TradePeriod::_impl_.trade_session_)
      - PROTOBUF_FIELD_OFFSET(TradePeriod, _impl_.beg_time_)>(
          reinterpret_cast<char*>(&_impl_.beg_time_),
          reinterpret_cast<char*>(&other->_impl_.beg_time_));
}

::google::protobuf::Metadata TradePeriod::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[40]);
}
// ===================================================================

class SubscriptionRequest::_Internal {
 public:
};

SubscriptionRequest::SubscriptionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SubscriptionRequest)
}
SubscriptionRequest::SubscriptionRequest(const SubscriptionRequest& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  SubscriptionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SubscriptionRequest)
}




const ::google::protobuf::Message::ClassData SubscriptionRequest::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*SubscriptionRequest::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata SubscriptionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[41]);
}
// ===================================================================

class SubscriptionResponse::_Internal {
 public:
};

SubscriptionResponse::SubscriptionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SubscriptionResponse)
}
SubscriptionResponse::SubscriptionResponse(const SubscriptionResponse& from) : ::google::protobuf::Message() {
  SubscriptionResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sub_list_){from._impl_.sub_list_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SubscriptionResponse)
}
inline void SubscriptionResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sub_list_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SubscriptionResponse::~SubscriptionResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SubscriptionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SubscriptionResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.sub_list_.~RepeatedPtrField();
}
void SubscriptionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SubscriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SubscriptionResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_sub_list()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SubscriptionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SubscriptionResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SubscriptionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.SubTypeList sub_list = 1 [json_name = "subList"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.sub_list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .longportapp.quote.v1.SubTypeList sub_list = 1 [json_name = "subList"];
    {PROTOBUF_FIELD_OFFSET(SubscriptionResponse, _impl_.sub_list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::SubTypeList>()},
  }}, {{
  }},
};

::uint8_t* SubscriptionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SubscriptionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .longportapp.quote.v1.SubTypeList sub_list = 1 [json_name = "subList"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sub_list_size()); i < n; i++) {
    const auto& repfield = this->_internal_sub_list().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SubscriptionResponse)
  return target;
}

::size_t SubscriptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SubscriptionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.SubTypeList sub_list = 1 [json_name = "subList"];
  total_size += 1UL * this->_internal_sub_list_size();
  for (const auto& msg : this->_internal_sub_list()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SubscriptionResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SubscriptionResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*SubscriptionResponse::GetClassData() const { return &_class_data_; }


void SubscriptionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SubscriptionResponse*>(&to_msg);
  auto& from = static_cast<const SubscriptionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SubscriptionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sub_list()->MergeFrom(from._internal_sub_list());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscriptionResponse::CopyFrom(const SubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SubscriptionResponse::IsInitialized() const {
  return true;
}

void SubscriptionResponse::InternalSwap(SubscriptionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sub_list_.InternalSwap(&other->_impl_.sub_list_);
}

::google::protobuf::Metadata SubscriptionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[42]);
}
// ===================================================================

class SubTypeList::_Internal {
 public:
};

SubTypeList::SubTypeList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SubTypeList)
}
SubTypeList::SubTypeList(const SubTypeList& from) : ::google::protobuf::Message() {
  SubTypeList* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.sub_type_){from._internal_sub_type()},
      /*decltype(_impl_._sub_type_cached_byte_size_)*/ {0},
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SubTypeList)
}
inline void SubTypeList::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.sub_type_){arena},
      /*decltype(_impl_._sub_type_cached_byte_size_)*/ {0},
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SubTypeList::~SubTypeList() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SubTypeList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SubTypeList::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_sub_type()->~RepeatedField();
  _impl_.symbol_.Destroy();
}
void SubTypeList::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SubTypeList::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SubTypeList)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_sub_type()->Clear();
  _impl_.symbol_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SubTypeList::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> SubTypeList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SubTypeList_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.SubType sub_type = 2 [json_name = "subType"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubTypeList, _impl_.sub_type_)}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubTypeList, _impl_.symbol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SubTypeList, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .longportapp.quote.v1.SubType sub_type = 2 [json_name = "subType"];
    {PROTOBUF_FIELD_OFFSET(SubTypeList, _impl_.sub_type_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
    "\40\6\0\0\0\0\0\0"
    "longportapp.quote.v1.SubTypeList"
    "symbol"
  }},
};

::uint8_t* SubTypeList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SubTypeList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SubTypeList.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .longportapp.quote.v1.SubType sub_type = 2 [json_name = "subType"];
  {
    int byte_size = _impl_._sub_type_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(2, _internal_sub_type(),
                                       byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SubTypeList)
  return target;
}

::size_t SubTypeList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SubTypeList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.SubType sub_type = 2 [json_name = "subType"];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_sub_type_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_sub_type().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._sub_type_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SubTypeList::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SubTypeList::MergeImpl
};
const ::google::protobuf::Message::ClassData*SubTypeList::GetClassData() const { return &_class_data_; }


void SubTypeList::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SubTypeList*>(&to_msg);
  auto& from = static_cast<const SubTypeList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SubTypeList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sub_type()->MergeFrom(from._internal_sub_type());
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubTypeList::CopyFrom(const SubTypeList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SubTypeList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SubTypeList::IsInitialized() const {
  return true;
}

void SubTypeList::InternalSwap(SubTypeList* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sub_type_.InternalSwap(&other->_impl_.sub_type_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
}

::google::protobuf::Metadata SubTypeList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[43]);
}
// ===================================================================

class SubscribeRequest::_Internal {
 public:
};

SubscribeRequest::SubscribeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SubscribeRequest)
}
SubscribeRequest::SubscribeRequest(const SubscribeRequest& from) : ::google::protobuf::Message() {
  SubscribeRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){from._impl_.symbol_},
      decltype(_impl_.sub_type_){from._internal_sub_type()},
      /*decltype(_impl_._sub_type_cached_byte_size_)*/ {0},
      decltype(_impl_.is_first_push_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.is_first_push_ = from._impl_.is_first_push_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SubscribeRequest)
}
inline void SubscribeRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){arena},
      decltype(_impl_.sub_type_){arena},
      /*decltype(_impl_._sub_type_cached_byte_size_)*/ {0},
      decltype(_impl_.is_first_push_){false},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SubscribeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SubscribeRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_symbol()->~RepeatedPtrField();
  _internal_mutable_sub_type()->~RepeatedField();
}
void SubscribeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SubscribeRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_symbol()->Clear();
  _internal_mutable_sub_type()->Clear();
  _impl_.is_first_push_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SubscribeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 52, 2> SubscribeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SubscribeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.symbol_)}},
    // repeated .longportapp.quote.v1.SubType sub_type = 2 [json_name = "subType"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.sub_type_)}},
    // bool is_first_push = 3 [json_name = "isFirstPush"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeRequest, _impl_.is_first_push_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.is_first_push_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .longportapp.quote.v1.SubType sub_type = 2 [json_name = "subType"];
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.sub_type_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // bool is_first_push = 3 [json_name = "isFirstPush"];
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.is_first_push_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\45\6\0\0\0\0\0\0"
    "longportapp.quote.v1.SubscribeRequest"
    "symbol"
  }},
};

::uint8_t* SubscribeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SubscribeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string symbol = 1 [json_name = "symbol"];
  for (int i = 0, n = this->_internal_symbol_size(); i < n; ++i) {
    const auto& s = this->_internal_symbol().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SubscribeRequest.symbol");
    target = stream->WriteString(1, s, target);
  }

  // repeated .longportapp.quote.v1.SubType sub_type = 2 [json_name = "subType"];
  {
    int byte_size = _impl_._sub_type_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(2, _internal_sub_type(),
                                       byte_size, target);
    }
  }

  // bool is_first_push = 3 [json_name = "isFirstPush"];
  if (this->_internal_is_first_push() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_first_push(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SubscribeRequest)
  return target;
}

::size_t SubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SubscribeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string symbol = 1 [json_name = "symbol"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_symbol().size());
  for (int i = 0, n = _internal_symbol().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_symbol().Get(i));
  }
  // repeated .longportapp.quote.v1.SubType sub_type = 2 [json_name = "subType"];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_sub_type_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_sub_type().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._sub_type_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // bool is_first_push = 3 [json_name = "isFirstPush"];
  if (this->_internal_is_first_push() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SubscribeRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SubscribeRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SubscribeRequest::GetClassData() const { return &_class_data_; }


void SubscribeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SubscribeRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SubscribeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_symbol()->MergeFrom(from._internal_symbol());
  _this->_internal_mutable_sub_type()->MergeFrom(from._internal_sub_type());
  if (from._internal_is_first_push() != 0) {
    _this->_internal_set_is_first_push(from._internal_is_first_push());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeRequest::CopyFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SubscribeRequest::IsInitialized() const {
  return true;
}

void SubscribeRequest::InternalSwap(SubscribeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.symbol_.InternalSwap(&other->_impl_.symbol_);
  _impl_.sub_type_.InternalSwap(&other->_impl_.sub_type_);
        swap(_impl_.is_first_push_, other->_impl_.is_first_push_);
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[44]);
}
// ===================================================================

class UnsubscribeRequest::_Internal {
 public:
};

UnsubscribeRequest::UnsubscribeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.UnsubscribeRequest)
}
UnsubscribeRequest::UnsubscribeRequest(const UnsubscribeRequest& from) : ::google::protobuf::Message() {
  UnsubscribeRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){from._impl_.symbol_},
      decltype(_impl_.sub_type_){from._internal_sub_type()},
      /*decltype(_impl_._sub_type_cached_byte_size_)*/ {0},
      decltype(_impl_.unsub_all_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.unsub_all_ = from._impl_.unsub_all_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.UnsubscribeRequest)
}
inline void UnsubscribeRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){arena},
      decltype(_impl_.sub_type_){arena},
      /*decltype(_impl_._sub_type_cached_byte_size_)*/ {0},
      decltype(_impl_.unsub_all_){false},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
UnsubscribeRequest::~UnsubscribeRequest() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.UnsubscribeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UnsubscribeRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_symbol()->~RepeatedPtrField();
  _internal_mutable_sub_type()->~RepeatedField();
}
void UnsubscribeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UnsubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.UnsubscribeRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_symbol()->Clear();
  _internal_mutable_sub_type()->Clear();
  _impl_.unsub_all_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UnsubscribeRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 54, 2> UnsubscribeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UnsubscribeRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UnsubscribeRequest, _impl_.symbol_)}},
    // repeated .longportapp.quote.v1.SubType sub_type = 2 [json_name = "subType"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UnsubscribeRequest, _impl_.sub_type_)}},
    // bool unsub_all = 3 [json_name = "unsubAll"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UnsubscribeRequest, _impl_.unsub_all_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(UnsubscribeRequest, _impl_.unsub_all_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(UnsubscribeRequest, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .longportapp.quote.v1.SubType sub_type = 2 [json_name = "subType"];
    {PROTOBUF_FIELD_OFFSET(UnsubscribeRequest, _impl_.sub_type_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // bool unsub_all = 3 [json_name = "unsubAll"];
    {PROTOBUF_FIELD_OFFSET(UnsubscribeRequest, _impl_.unsub_all_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\47\6\0\0\0\0\0\0"
    "longportapp.quote.v1.UnsubscribeRequest"
    "symbol"
  }},
};

::uint8_t* UnsubscribeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.UnsubscribeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string symbol = 1 [json_name = "symbol"];
  for (int i = 0, n = this->_internal_symbol_size(); i < n; ++i) {
    const auto& s = this->_internal_symbol().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.UnsubscribeRequest.symbol");
    target = stream->WriteString(1, s, target);
  }

  // repeated .longportapp.quote.v1.SubType sub_type = 2 [json_name = "subType"];
  {
    int byte_size = _impl_._sub_type_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(2, _internal_sub_type(),
                                       byte_size, target);
    }
  }

  // bool unsub_all = 3 [json_name = "unsubAll"];
  if (this->_internal_unsub_all() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_unsub_all(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.UnsubscribeRequest)
  return target;
}

::size_t UnsubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.UnsubscribeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string symbol = 1 [json_name = "symbol"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_symbol().size());
  for (int i = 0, n = _internal_symbol().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_symbol().Get(i));
  }
  // repeated .longportapp.quote.v1.SubType sub_type = 2 [json_name = "subType"];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_sub_type_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_sub_type().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._sub_type_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // bool unsub_all = 3 [json_name = "unsubAll"];
  if (this->_internal_unsub_all() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UnsubscribeRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UnsubscribeRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*UnsubscribeRequest::GetClassData() const { return &_class_data_; }


void UnsubscribeRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UnsubscribeRequest*>(&to_msg);
  auto& from = static_cast<const UnsubscribeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.UnsubscribeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_symbol()->MergeFrom(from._internal_symbol());
  _this->_internal_mutable_sub_type()->MergeFrom(from._internal_sub_type());
  if (from._internal_unsub_all() != 0) {
    _this->_internal_set_unsub_all(from._internal_unsub_all());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnsubscribeRequest::CopyFrom(const UnsubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.UnsubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UnsubscribeRequest::IsInitialized() const {
  return true;
}

void UnsubscribeRequest::InternalSwap(UnsubscribeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.symbol_.InternalSwap(&other->_impl_.symbol_);
  _impl_.sub_type_.InternalSwap(&other->_impl_.sub_type_);
        swap(_impl_.unsub_all_, other->_impl_.unsub_all_);
}

::google::protobuf::Metadata UnsubscribeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[45]);
}
// ===================================================================

class UnsubscribeResponse::_Internal {
 public:
};

UnsubscribeResponse::UnsubscribeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.UnsubscribeResponse)
}
UnsubscribeResponse::UnsubscribeResponse(const UnsubscribeResponse& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  UnsubscribeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.UnsubscribeResponse)
}




const ::google::protobuf::Message::ClassData UnsubscribeResponse::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*UnsubscribeResponse::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata UnsubscribeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[46]);
}
// ===================================================================

class PushQuote::_Internal {
 public:
};

PushQuote::PushQuote(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.PushQuote)
}
PushQuote::PushQuote(const PushQuote& from) : ::google::protobuf::Message() {
  PushQuote* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      decltype(_impl_.last_done_){},
      decltype(_impl_.open_){},
      decltype(_impl_.high_){},
      decltype(_impl_.low_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.current_turnover_){},
      decltype(_impl_.sequence_){},
      decltype(_impl_.timestamp_){},
      decltype(_impl_.volume_){},
      decltype(_impl_.trade_status_){},
      decltype(_impl_.trade_session_){},
      decltype(_impl_.current_volume_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  _impl_.last_done_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_done_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_done().empty()) {
    _this->_impl_.last_done_.Set(from._internal_last_done(), _this->GetArenaForAllocation());
  }
  _impl_.open_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_open().empty()) {
    _this->_impl_.open_.Set(from._internal_open(), _this->GetArenaForAllocation());
  }
  _impl_.high_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.high_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_high().empty()) {
    _this->_impl_.high_.Set(from._internal_high(), _this->GetArenaForAllocation());
  }
  _impl_.low_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.low_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_low().empty()) {
    _this->_impl_.low_.Set(from._internal_low(), _this->GetArenaForAllocation());
  }
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_turnover().empty()) {
    _this->_impl_.turnover_.Set(from._internal_turnover(), _this->GetArenaForAllocation());
  }
  _impl_.current_turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.current_turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_current_turnover().empty()) {
    _this->_impl_.current_turnover_.Set(from._internal_current_turnover(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.sequence_, &from._impl_.sequence_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.current_volume_) -
    reinterpret_cast<char*>(&_impl_.sequence_)) + sizeof(_impl_.current_volume_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.PushQuote)
}
inline void PushQuote::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      decltype(_impl_.last_done_){},
      decltype(_impl_.open_){},
      decltype(_impl_.high_){},
      decltype(_impl_.low_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.current_turnover_){},
      decltype(_impl_.sequence_){::int64_t{0}},
      decltype(_impl_.timestamp_){::int64_t{0}},
      decltype(_impl_.volume_){::int64_t{0}},
      decltype(_impl_.trade_status_){0},
      decltype(_impl_.trade_session_){0},
      decltype(_impl_.current_volume_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.last_done_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_done_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.open_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.open_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.high_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.high_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.low_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.low_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.current_turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.current_turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
PushQuote::~PushQuote() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.PushQuote)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PushQuote::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
  _impl_.last_done_.Destroy();
  _impl_.open_.Destroy();
  _impl_.high_.Destroy();
  _impl_.low_.Destroy();
  _impl_.turnover_.Destroy();
  _impl_.current_turnover_.Destroy();
}
void PushQuote::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PushQuote::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.PushQuote)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _impl_.last_done_.ClearToEmpty();
  _impl_.open_.ClearToEmpty();
  _impl_.high_.ClearToEmpty();
  _impl_.low_.ClearToEmpty();
  _impl_.turnover_.ClearToEmpty();
  _impl_.current_turnover_.ClearToEmpty();
  ::memset(&_impl_.sequence_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.current_volume_) -
      reinterpret_cast<char*>(&_impl_.sequence_)) + sizeof(_impl_.current_volume_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PushQuote::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 0, 97, 2> PushQuote::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PushQuote_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.symbol_)}},
    // int64 sequence = 2 [json_name = "sequence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PushQuote, _impl_.sequence_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.sequence_)}},
    // string last_done = 3 [json_name = "lastDone"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.last_done_)}},
    // string open = 4 [json_name = "open"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.open_)}},
    // string high = 5 [json_name = "high"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.high_)}},
    // string low = 6 [json_name = "low"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.low_)}},
    // int64 timestamp = 7 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PushQuote, _impl_.timestamp_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.timestamp_)}},
    // int64 volume = 8 [json_name = "volume"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PushQuote, _impl_.volume_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.volume_)}},
    // string turnover = 9 [json_name = "turnover"];
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.turnover_)}},
    // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PushQuote, _impl_.trade_status_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.trade_status_)}},
    // .longportapp.quote.v1.TradeSession trade_session = 11 [json_name = "tradeSession"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PushQuote, _impl_.trade_session_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.trade_session_)}},
    // int64 current_volume = 12 [json_name = "currentVolume"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PushQuote, _impl_.current_volume_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.current_volume_)}},
    // string current_turnover = 13 [json_name = "currentTurnover"];
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.current_turnover_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 sequence = 2 [json_name = "sequence"];
    {PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.sequence_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string last_done = 3 [json_name = "lastDone"];
    {PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.last_done_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string open = 4 [json_name = "open"];
    {PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.open_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string high = 5 [json_name = "high"];
    {PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.high_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string low = 6 [json_name = "low"];
    {PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.low_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 7 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 volume = 8 [json_name = "volume"];
    {PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.volume_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string turnover = 9 [json_name = "turnover"];
    {PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.turnover_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
    {PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.trade_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .longportapp.quote.v1.TradeSession trade_session = 11 [json_name = "tradeSession"];
    {PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.trade_session_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int64 current_volume = 12 [json_name = "currentVolume"];
    {PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.current_volume_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string current_turnover = 13 [json_name = "currentTurnover"];
    {PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.current_turnover_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\6\0\11\4\4\3\0\0\10\0\0\0\20\0\0"
    "longportapp.quote.v1.PushQuote"
    "symbol"
    "last_done"
    "open"
    "high"
    "low"
    "turnover"
    "current_turnover"
  }},
};

::uint8_t* PushQuote::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.PushQuote)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PushQuote.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 sequence = 2 [json_name = "sequence"];
  if (this->_internal_sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_sequence(), target);
  }

  // string last_done = 3 [json_name = "lastDone"];
  if (!this->_internal_last_done().empty()) {
    const std::string& _s = this->_internal_last_done();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PushQuote.last_done");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string open = 4 [json_name = "open"];
  if (!this->_internal_open().empty()) {
    const std::string& _s = this->_internal_open();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PushQuote.open");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string high = 5 [json_name = "high"];
  if (!this->_internal_high().empty()) {
    const std::string& _s = this->_internal_high();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PushQuote.high");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string low = 6 [json_name = "low"];
  if (!this->_internal_low().empty()) {
    const std::string& _s = this->_internal_low();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PushQuote.low");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // int64 timestamp = 7 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<7>(
            stream, this->_internal_timestamp(), target);
  }

  // int64 volume = 8 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<8>(
            stream, this->_internal_volume(), target);
  }

  // string turnover = 9 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    const std::string& _s = this->_internal_turnover();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PushQuote.turnover");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
  if (this->_internal_trade_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        10, this->_internal_trade_status(), target);
  }

  // .longportapp.quote.v1.TradeSession trade_session = 11 [json_name = "tradeSession"];
  if (this->_internal_trade_session() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        11, this->_internal_trade_session(), target);
  }

  // int64 current_volume = 12 [json_name = "currentVolume"];
  if (this->_internal_current_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<12>(
            stream, this->_internal_current_volume(), target);
  }

  // string current_turnover = 13 [json_name = "currentTurnover"];
  if (!this->_internal_current_turnover().empty()) {
    const std::string& _s = this->_internal_current_turnover();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PushQuote.current_turnover");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.PushQuote)
  return target;
}

::size_t PushQuote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.PushQuote)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // string last_done = 3 [json_name = "lastDone"];
  if (!this->_internal_last_done().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_last_done());
  }

  // string open = 4 [json_name = "open"];
  if (!this->_internal_open().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_open());
  }

  // string high = 5 [json_name = "high"];
  if (!this->_internal_high().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_high());
  }

  // string low = 6 [json_name = "low"];
  if (!this->_internal_low().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_low());
  }

  // string turnover = 9 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_turnover());
  }

  // string current_turnover = 13 [json_name = "currentTurnover"];
  if (!this->_internal_current_turnover().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_current_turnover());
  }

  // int64 sequence = 2 [json_name = "sequence"];
  if (this->_internal_sequence() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_sequence());
  }

  // int64 timestamp = 7 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  // int64 volume = 8 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_volume());
  }

  // .longportapp.quote.v1.TradeStatus trade_status = 10 [json_name = "tradeStatus"];
  if (this->_internal_trade_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_trade_status());
  }

  // .longportapp.quote.v1.TradeSession trade_session = 11 [json_name = "tradeSession"];
  if (this->_internal_trade_session() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_trade_session());
  }

  // int64 current_volume = 12 [json_name = "currentVolume"];
  if (this->_internal_current_volume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_current_volume());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PushQuote::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PushQuote::MergeImpl
};
const ::google::protobuf::Message::ClassData*PushQuote::GetClassData() const { return &_class_data_; }


void PushQuote::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PushQuote*>(&to_msg);
  auto& from = static_cast<const PushQuote&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.PushQuote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_last_done().empty()) {
    _this->_internal_set_last_done(from._internal_last_done());
  }
  if (!from._internal_open().empty()) {
    _this->_internal_set_open(from._internal_open());
  }
  if (!from._internal_high().empty()) {
    _this->_internal_set_high(from._internal_high());
  }
  if (!from._internal_low().empty()) {
    _this->_internal_set_low(from._internal_low());
  }
  if (!from._internal_turnover().empty()) {
    _this->_internal_set_turnover(from._internal_turnover());
  }
  if (!from._internal_current_turnover().empty()) {
    _this->_internal_set_current_turnover(from._internal_current_turnover());
  }
  if (from._internal_sequence() != 0) {
    _this->_internal_set_sequence(from._internal_sequence());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_volume() != 0) {
    _this->_internal_set_volume(from._internal_volume());
  }
  if (from._internal_trade_status() != 0) {
    _this->_internal_set_trade_status(from._internal_trade_status());
  }
  if (from._internal_trade_session() != 0) {
    _this->_internal_set_trade_session(from._internal_trade_session());
  }
  if (from._internal_current_volume() != 0) {
    _this->_internal_set_current_volume(from._internal_current_volume());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PushQuote::CopyFrom(const PushQuote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.PushQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PushQuote::IsInitialized() const {
  return true;
}

void PushQuote::InternalSwap(PushQuote* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_done_, lhs_arena,
                                       &other->_impl_.last_done_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_, lhs_arena,
                                       &other->_impl_.open_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.high_, lhs_arena,
                                       &other->_impl_.high_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.low_, lhs_arena,
                                       &other->_impl_.low_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.turnover_, lhs_arena,
                                       &other->_impl_.turnover_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.current_turnover_, lhs_arena,
                                       &other->_impl_.current_turnover_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.current_volume_)
      + sizeof(PushQuote::_impl_.current_volume_)
      - PROTOBUF_FIELD_OFFSET(PushQuote, _impl_.sequence_)>(
          reinterpret_cast<char*>(&_impl_.sequence_),
          reinterpret_cast<char*>(&other->_impl_.sequence_));
}

::google::protobuf::Metadata PushQuote::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[47]);
}
// ===================================================================

class PushDepth::_Internal {
 public:
};

PushDepth::PushDepth(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.PushDepth)
}
PushDepth::PushDepth(const PushDepth& from) : ::google::protobuf::Message() {
  PushDepth* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ask_){from._impl_.ask_},
      decltype(_impl_.bid_){from._impl_.bid_},
      decltype(_impl_.symbol_){},
      decltype(_impl_.sequence_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  _this->_impl_.sequence_ = from._impl_.sequence_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.PushDepth)
}
inline void PushDepth::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.ask_){arena},
      decltype(_impl_.bid_){arena},
      decltype(_impl_.symbol_){},
      decltype(_impl_.sequence_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
PushDepth::~PushDepth() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.PushDepth)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PushDepth::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ask_.~RepeatedPtrField();
  _impl_.bid_.~RepeatedPtrField();
  _impl_.symbol_.Destroy();
}
void PushDepth::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PushDepth::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.PushDepth)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_ask()->Clear();
  _internal_mutable_bid()->Clear();
  _impl_.symbol_.ClearToEmpty();
  _impl_.sequence_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PushDepth::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 45, 2> PushDepth::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PushDepth_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.Depth bid = 4 [json_name = "bid"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(PushDepth, _impl_.bid_)}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PushDepth, _impl_.symbol_)}},
    // int64 sequence = 2 [json_name = "sequence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PushDepth, _impl_.sequence_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PushDepth, _impl_.sequence_)}},
    // repeated .longportapp.quote.v1.Depth ask = 3 [json_name = "ask"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PushDepth, _impl_.ask_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(PushDepth, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 sequence = 2 [json_name = "sequence"];
    {PROTOBUF_FIELD_OFFSET(PushDepth, _impl_.sequence_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated .longportapp.quote.v1.Depth ask = 3 [json_name = "ask"];
    {PROTOBUF_FIELD_OFFSET(PushDepth, _impl_.ask_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .longportapp.quote.v1.Depth bid = 4 [json_name = "bid"];
    {PROTOBUF_FIELD_OFFSET(PushDepth, _impl_.bid_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::Depth>()},
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::Depth>()},
  }}, {{
    "\36\6\0\0\0\0\0\0"
    "longportapp.quote.v1.PushDepth"
    "symbol"
  }},
};

::uint8_t* PushDepth::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.PushDepth)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PushDepth.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 sequence = 2 [json_name = "sequence"];
  if (this->_internal_sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_sequence(), target);
  }

  // repeated .longportapp.quote.v1.Depth ask = 3 [json_name = "ask"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ask_size()); i < n; i++) {
    const auto& repfield = this->_internal_ask().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .longportapp.quote.v1.Depth bid = 4 [json_name = "bid"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bid_size()); i < n; i++) {
    const auto& repfield = this->_internal_bid().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.PushDepth)
  return target;
}

::size_t PushDepth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.PushDepth)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.Depth ask = 3 [json_name = "ask"];
  total_size += 1UL * this->_internal_ask_size();
  for (const auto& msg : this->_internal_ask()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .longportapp.quote.v1.Depth bid = 4 [json_name = "bid"];
  total_size += 1UL * this->_internal_bid_size();
  for (const auto& msg : this->_internal_bid()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // int64 sequence = 2 [json_name = "sequence"];
  if (this->_internal_sequence() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_sequence());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PushDepth::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PushDepth::MergeImpl
};
const ::google::protobuf::Message::ClassData*PushDepth::GetClassData() const { return &_class_data_; }


void PushDepth::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PushDepth*>(&to_msg);
  auto& from = static_cast<const PushDepth&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.PushDepth)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ask()->MergeFrom(from._internal_ask());
  _this->_internal_mutable_bid()->MergeFrom(from._internal_bid());
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (from._internal_sequence() != 0) {
    _this->_internal_set_sequence(from._internal_sequence());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PushDepth::CopyFrom(const PushDepth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.PushDepth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PushDepth::IsInitialized() const {
  return true;
}

void PushDepth::InternalSwap(PushDepth* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ask_.InternalSwap(&other->_impl_.ask_);
  _impl_.bid_.InternalSwap(&other->_impl_.bid_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
        swap(_impl_.sequence_, other->_impl_.sequence_);
}

::google::protobuf::Metadata PushDepth::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[48]);
}
// ===================================================================

class PushBrokers::_Internal {
 public:
};

PushBrokers::PushBrokers(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.PushBrokers)
}
PushBrokers::PushBrokers(const PushBrokers& from) : ::google::protobuf::Message() {
  PushBrokers* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ask_brokers_){from._impl_.ask_brokers_},
      decltype(_impl_.bid_brokers_){from._impl_.bid_brokers_},
      decltype(_impl_.symbol_){},
      decltype(_impl_.sequence_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  _this->_impl_.sequence_ = from._impl_.sequence_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.PushBrokers)
}
inline void PushBrokers::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.ask_brokers_){arena},
      decltype(_impl_.bid_brokers_){arena},
      decltype(_impl_.symbol_){},
      decltype(_impl_.sequence_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
PushBrokers::~PushBrokers() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.PushBrokers)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PushBrokers::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ask_brokers_.~RepeatedPtrField();
  _impl_.bid_brokers_.~RepeatedPtrField();
  _impl_.symbol_.Destroy();
}
void PushBrokers::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PushBrokers::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.PushBrokers)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_ask_brokers()->Clear();
  _internal_mutable_bid_brokers()->Clear();
  _impl_.symbol_.ClearToEmpty();
  _impl_.sequence_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PushBrokers::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 47, 2> PushBrokers::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PushBrokers_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.Brokers bid_brokers = 4 [json_name = "bidBrokers"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(PushBrokers, _impl_.bid_brokers_)}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PushBrokers, _impl_.symbol_)}},
    // int64 sequence = 2 [json_name = "sequence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PushBrokers, _impl_.sequence_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PushBrokers, _impl_.sequence_)}},
    // repeated .longportapp.quote.v1.Brokers ask_brokers = 3 [json_name = "askBrokers"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PushBrokers, _impl_.ask_brokers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(PushBrokers, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 sequence = 2 [json_name = "sequence"];
    {PROTOBUF_FIELD_OFFSET(PushBrokers, _impl_.sequence_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated .longportapp.quote.v1.Brokers ask_brokers = 3 [json_name = "askBrokers"];
    {PROTOBUF_FIELD_OFFSET(PushBrokers, _impl_.ask_brokers_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .longportapp.quote.v1.Brokers bid_brokers = 4 [json_name = "bidBrokers"];
    {PROTOBUF_FIELD_OFFSET(PushBrokers, _impl_.bid_brokers_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::Brokers>()},
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::Brokers>()},
  }}, {{
    "\40\6\0\0\0\0\0\0"
    "longportapp.quote.v1.PushBrokers"
    "symbol"
  }},
};

::uint8_t* PushBrokers::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.PushBrokers)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PushBrokers.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 sequence = 2 [json_name = "sequence"];
  if (this->_internal_sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_sequence(), target);
  }

  // repeated .longportapp.quote.v1.Brokers ask_brokers = 3 [json_name = "askBrokers"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_ask_brokers_size()); i < n; i++) {
    const auto& repfield = this->_internal_ask_brokers().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .longportapp.quote.v1.Brokers bid_brokers = 4 [json_name = "bidBrokers"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bid_brokers_size()); i < n; i++) {
    const auto& repfield = this->_internal_bid_brokers().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.PushBrokers)
  return target;
}

::size_t PushBrokers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.PushBrokers)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.Brokers ask_brokers = 3 [json_name = "askBrokers"];
  total_size += 1UL * this->_internal_ask_brokers_size();
  for (const auto& msg : this->_internal_ask_brokers()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .longportapp.quote.v1.Brokers bid_brokers = 4 [json_name = "bidBrokers"];
  total_size += 1UL * this->_internal_bid_brokers_size();
  for (const auto& msg : this->_internal_bid_brokers()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // int64 sequence = 2 [json_name = "sequence"];
  if (this->_internal_sequence() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_sequence());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PushBrokers::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PushBrokers::MergeImpl
};
const ::google::protobuf::Message::ClassData*PushBrokers::GetClassData() const { return &_class_data_; }


void PushBrokers::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PushBrokers*>(&to_msg);
  auto& from = static_cast<const PushBrokers&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.PushBrokers)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ask_brokers()->MergeFrom(from._internal_ask_brokers());
  _this->_internal_mutable_bid_brokers()->MergeFrom(from._internal_bid_brokers());
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (from._internal_sequence() != 0) {
    _this->_internal_set_sequence(from._internal_sequence());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PushBrokers::CopyFrom(const PushBrokers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.PushBrokers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PushBrokers::IsInitialized() const {
  return true;
}

void PushBrokers::InternalSwap(PushBrokers* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ask_brokers_.InternalSwap(&other->_impl_.ask_brokers_);
  _impl_.bid_brokers_.InternalSwap(&other->_impl_.bid_brokers_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
        swap(_impl_.sequence_, other->_impl_.sequence_);
}

::google::protobuf::Metadata PushBrokers::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[49]);
}
// ===================================================================

class PushTrade::_Internal {
 public:
};

PushTrade::PushTrade(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.PushTrade)
}
PushTrade::PushTrade(const PushTrade& from) : ::google::protobuf::Message() {
  PushTrade* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trade_){from._impl_.trade_},
      decltype(_impl_.symbol_){},
      decltype(_impl_.sequence_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  _this->_impl_.sequence_ = from._impl_.sequence_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.PushTrade)
}
inline void PushTrade::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.trade_){arena},
      decltype(_impl_.symbol_){},
      decltype(_impl_.sequence_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
PushTrade::~PushTrade() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.PushTrade)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PushTrade::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trade_.~RepeatedPtrField();
  _impl_.symbol_.Destroy();
}
void PushTrade::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PushTrade::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.PushTrade)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_trade()->Clear();
  _impl_.symbol_.ClearToEmpty();
  _impl_.sequence_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PushTrade::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 45, 2> PushTrade::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PushTrade_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PushTrade, _impl_.symbol_)}},
    // int64 sequence = 2 [json_name = "sequence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PushTrade, _impl_.sequence_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PushTrade, _impl_.sequence_)}},
    // repeated .longportapp.quote.v1.Trade trade = 3 [json_name = "trade"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PushTrade, _impl_.trade_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(PushTrade, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 sequence = 2 [json_name = "sequence"];
    {PROTOBUF_FIELD_OFFSET(PushTrade, _impl_.sequence_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated .longportapp.quote.v1.Trade trade = 3 [json_name = "trade"];
    {PROTOBUF_FIELD_OFFSET(PushTrade, _impl_.trade_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::Trade>()},
  }}, {{
    "\36\6\0\0\0\0\0\0"
    "longportapp.quote.v1.PushTrade"
    "symbol"
  }},
};

::uint8_t* PushTrade::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.PushTrade)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.PushTrade.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 sequence = 2 [json_name = "sequence"];
  if (this->_internal_sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_sequence(), target);
  }

  // repeated .longportapp.quote.v1.Trade trade = 3 [json_name = "trade"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_trade_size()); i < n; i++) {
    const auto& repfield = this->_internal_trade().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.PushTrade)
  return target;
}

::size_t PushTrade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.PushTrade)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.Trade trade = 3 [json_name = "trade"];
  total_size += 1UL * this->_internal_trade_size();
  for (const auto& msg : this->_internal_trade()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // int64 sequence = 2 [json_name = "sequence"];
  if (this->_internal_sequence() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_sequence());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PushTrade::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    PushTrade::MergeImpl
};
const ::google::protobuf::Message::ClassData*PushTrade::GetClassData() const { return &_class_data_; }


void PushTrade::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PushTrade*>(&to_msg);
  auto& from = static_cast<const PushTrade&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.PushTrade)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trade()->MergeFrom(from._internal_trade());
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (from._internal_sequence() != 0) {
    _this->_internal_set_sequence(from._internal_sequence());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PushTrade::CopyFrom(const PushTrade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.PushTrade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PushTrade::IsInitialized() const {
  return true;
}

void PushTrade::InternalSwap(PushTrade* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trade_.InternalSwap(&other->_impl_.trade_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
        swap(_impl_.sequence_, other->_impl_.sequence_);
}

::google::protobuf::Metadata PushTrade::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[50]);
}
// ===================================================================

class MarketTradeDayRequest::_Internal {
 public:
};

MarketTradeDayRequest::MarketTradeDayRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.MarketTradeDayRequest)
}
MarketTradeDayRequest::MarketTradeDayRequest(const MarketTradeDayRequest& from) : ::google::protobuf::Message() {
  MarketTradeDayRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.market_){},
      decltype(_impl_.beg_day_){},
      decltype(_impl_.end_day_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.market_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.market_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_market().empty()) {
    _this->_impl_.market_.Set(from._internal_market(), _this->GetArenaForAllocation());
  }
  _impl_.beg_day_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.beg_day_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_beg_day().empty()) {
    _this->_impl_.beg_day_.Set(from._internal_beg_day(), _this->GetArenaForAllocation());
  }
  _impl_.end_day_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.end_day_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_end_day().empty()) {
    _this->_impl_.end_day_.Set(from._internal_end_day(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.MarketTradeDayRequest)
}
inline void MarketTradeDayRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.market_){},
      decltype(_impl_.beg_day_){},
      decltype(_impl_.end_day_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.market_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.market_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.beg_day_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.beg_day_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.end_day_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.end_day_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
MarketTradeDayRequest::~MarketTradeDayRequest() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.MarketTradeDayRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MarketTradeDayRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.market_.Destroy();
  _impl_.beg_day_.Destroy();
  _impl_.end_day_.Destroy();
}
void MarketTradeDayRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MarketTradeDayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.MarketTradeDayRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.market_.ClearToEmpty();
  _impl_.beg_day_.ClearToEmpty();
  _impl_.end_day_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MarketTradeDayRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 71, 2> MarketTradeDayRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MarketTradeDayRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string market = 1 [json_name = "market"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MarketTradeDayRequest, _impl_.market_)}},
    // string beg_day = 2 [json_name = "begDay"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MarketTradeDayRequest, _impl_.beg_day_)}},
    // string end_day = 3 [json_name = "endDay"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MarketTradeDayRequest, _impl_.end_day_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string market = 1 [json_name = "market"];
    {PROTOBUF_FIELD_OFFSET(MarketTradeDayRequest, _impl_.market_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string beg_day = 2 [json_name = "begDay"];
    {PROTOBUF_FIELD_OFFSET(MarketTradeDayRequest, _impl_.beg_day_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string end_day = 3 [json_name = "endDay"];
    {PROTOBUF_FIELD_OFFSET(MarketTradeDayRequest, _impl_.end_day_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\6\7\7\0\0\0\0"
    "longportapp.quote.v1.MarketTradeDayRequest"
    "market"
    "beg_day"
    "end_day"
  }},
};

::uint8_t* MarketTradeDayRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.MarketTradeDayRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string market = 1 [json_name = "market"];
  if (!this->_internal_market().empty()) {
    const std::string& _s = this->_internal_market();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.MarketTradeDayRequest.market");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string beg_day = 2 [json_name = "begDay"];
  if (!this->_internal_beg_day().empty()) {
    const std::string& _s = this->_internal_beg_day();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.MarketTradeDayRequest.beg_day");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string end_day = 3 [json_name = "endDay"];
  if (!this->_internal_end_day().empty()) {
    const std::string& _s = this->_internal_end_day();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.MarketTradeDayRequest.end_day");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.MarketTradeDayRequest)
  return target;
}

::size_t MarketTradeDayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.MarketTradeDayRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string market = 1 [json_name = "market"];
  if (!this->_internal_market().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_market());
  }

  // string beg_day = 2 [json_name = "begDay"];
  if (!this->_internal_beg_day().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_beg_day());
  }

  // string end_day = 3 [json_name = "endDay"];
  if (!this->_internal_end_day().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_end_day());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MarketTradeDayRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MarketTradeDayRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*MarketTradeDayRequest::GetClassData() const { return &_class_data_; }


void MarketTradeDayRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MarketTradeDayRequest*>(&to_msg);
  auto& from = static_cast<const MarketTradeDayRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.MarketTradeDayRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_market().empty()) {
    _this->_internal_set_market(from._internal_market());
  }
  if (!from._internal_beg_day().empty()) {
    _this->_internal_set_beg_day(from._internal_beg_day());
  }
  if (!from._internal_end_day().empty()) {
    _this->_internal_set_end_day(from._internal_end_day());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MarketTradeDayRequest::CopyFrom(const MarketTradeDayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.MarketTradeDayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MarketTradeDayRequest::IsInitialized() const {
  return true;
}

void MarketTradeDayRequest::InternalSwap(MarketTradeDayRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.market_, lhs_arena,
                                       &other->_impl_.market_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.beg_day_, lhs_arena,
                                       &other->_impl_.beg_day_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.end_day_, lhs_arena,
                                       &other->_impl_.end_day_, rhs_arena);
}

::google::protobuf::Metadata MarketTradeDayRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[51]);
}
// ===================================================================

class MarketTradeDayResponse::_Internal {
 public:
};

MarketTradeDayResponse::MarketTradeDayResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.MarketTradeDayResponse)
}
MarketTradeDayResponse::MarketTradeDayResponse(const MarketTradeDayResponse& from) : ::google::protobuf::Message() {
  MarketTradeDayResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trade_day_){from._impl_.trade_day_},
      decltype(_impl_.half_trade_day_){from._impl_.half_trade_day_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.MarketTradeDayResponse)
}
inline void MarketTradeDayResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.trade_day_){arena},
      decltype(_impl_.half_trade_day_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
MarketTradeDayResponse::~MarketTradeDayResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.MarketTradeDayResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MarketTradeDayResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_trade_day()->~RepeatedPtrField();
  _internal_mutable_half_trade_day()->~RepeatedPtrField();
}
void MarketTradeDayResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void MarketTradeDayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.MarketTradeDayResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_trade_day()->Clear();
  _internal_mutable_half_trade_day()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MarketTradeDayResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 75, 2> MarketTradeDayResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MarketTradeDayResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string half_trade_day = 2 [json_name = "halfTradeDay"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MarketTradeDayResponse, _impl_.half_trade_day_)}},
    // repeated string trade_day = 1 [json_name = "tradeDay"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MarketTradeDayResponse, _impl_.trade_day_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string trade_day = 1 [json_name = "tradeDay"];
    {PROTOBUF_FIELD_OFFSET(MarketTradeDayResponse, _impl_.trade_day_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string half_trade_day = 2 [json_name = "halfTradeDay"];
    {PROTOBUF_FIELD_OFFSET(MarketTradeDayResponse, _impl_.half_trade_day_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\53\11\16\0\0\0\0\0"
    "longportapp.quote.v1.MarketTradeDayResponse"
    "trade_day"
    "half_trade_day"
  }},
};

::uint8_t* MarketTradeDayResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.MarketTradeDayResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string trade_day = 1 [json_name = "tradeDay"];
  for (int i = 0, n = this->_internal_trade_day_size(); i < n; ++i) {
    const auto& s = this->_internal_trade_day().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.MarketTradeDayResponse.trade_day");
    target = stream->WriteString(1, s, target);
  }

  // repeated string half_trade_day = 2 [json_name = "halfTradeDay"];
  for (int i = 0, n = this->_internal_half_trade_day_size(); i < n; ++i) {
    const auto& s = this->_internal_half_trade_day().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.MarketTradeDayResponse.half_trade_day");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.MarketTradeDayResponse)
  return target;
}

::size_t MarketTradeDayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.MarketTradeDayResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string trade_day = 1 [json_name = "tradeDay"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_trade_day().size());
  for (int i = 0, n = _internal_trade_day().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_trade_day().Get(i));
  }
  // repeated string half_trade_day = 2 [json_name = "halfTradeDay"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_half_trade_day().size());
  for (int i = 0, n = _internal_half_trade_day().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_half_trade_day().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MarketTradeDayResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    MarketTradeDayResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*MarketTradeDayResponse::GetClassData() const { return &_class_data_; }


void MarketTradeDayResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MarketTradeDayResponse*>(&to_msg);
  auto& from = static_cast<const MarketTradeDayResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.MarketTradeDayResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trade_day()->MergeFrom(from._internal_trade_day());
  _this->_internal_mutable_half_trade_day()->MergeFrom(from._internal_half_trade_day());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MarketTradeDayResponse::CopyFrom(const MarketTradeDayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.MarketTradeDayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MarketTradeDayResponse::IsInitialized() const {
  return true;
}

void MarketTradeDayResponse::InternalSwap(MarketTradeDayResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trade_day_.InternalSwap(&other->_impl_.trade_day_);
  _impl_.half_trade_day_.InternalSwap(&other->_impl_.half_trade_day_);
}

::google::protobuf::Metadata MarketTradeDayResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[52]);
}
// ===================================================================

class CapitalFlowIntradayRequest::_Internal {
 public:
};

CapitalFlowIntradayRequest::CapitalFlowIntradayRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.CapitalFlowIntradayRequest)
}
CapitalFlowIntradayRequest::CapitalFlowIntradayRequest(const CapitalFlowIntradayRequest& from) : ::google::protobuf::Message() {
  CapitalFlowIntradayRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.CapitalFlowIntradayRequest)
}
inline void CapitalFlowIntradayRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CapitalFlowIntradayRequest::~CapitalFlowIntradayRequest() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.CapitalFlowIntradayRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CapitalFlowIntradayRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
}
void CapitalFlowIntradayRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CapitalFlowIntradayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.CapitalFlowIntradayRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CapitalFlowIntradayRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 62, 2> CapitalFlowIntradayRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CapitalFlowIntradayRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CapitalFlowIntradayRequest, _impl_.symbol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(CapitalFlowIntradayRequest, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\6\0\0\0\0\0\0"
    "longportapp.quote.v1.CapitalFlowIntradayRequest"
    "symbol"
  }},
};

::uint8_t* CapitalFlowIntradayRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.CapitalFlowIntradayRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.CapitalFlowIntradayRequest.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.CapitalFlowIntradayRequest)
  return target;
}

::size_t CapitalFlowIntradayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.CapitalFlowIntradayRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CapitalFlowIntradayRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CapitalFlowIntradayRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*CapitalFlowIntradayRequest::GetClassData() const { return &_class_data_; }


void CapitalFlowIntradayRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CapitalFlowIntradayRequest*>(&to_msg);
  auto& from = static_cast<const CapitalFlowIntradayRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.CapitalFlowIntradayRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CapitalFlowIntradayRequest::CopyFrom(const CapitalFlowIntradayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.CapitalFlowIntradayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CapitalFlowIntradayRequest::IsInitialized() const {
  return true;
}

void CapitalFlowIntradayRequest::InternalSwap(CapitalFlowIntradayRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
}

::google::protobuf::Metadata CapitalFlowIntradayRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[53]);
}
// ===================================================================

class CapitalFlowIntradayResponse_CapitalFlowLine::_Internal {
 public:
};

CapitalFlowIntradayResponse_CapitalFlowLine::CapitalFlowIntradayResponse_CapitalFlowLine(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine)
}
CapitalFlowIntradayResponse_CapitalFlowLine::CapitalFlowIntradayResponse_CapitalFlowLine(const CapitalFlowIntradayResponse_CapitalFlowLine& from) : ::google::protobuf::Message() {
  CapitalFlowIntradayResponse_CapitalFlowLine* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.inflow_){},
      decltype(_impl_.timestamp_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.inflow_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.inflow_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_inflow().empty()) {
    _this->_impl_.inflow_.Set(from._internal_inflow(), _this->GetArenaForAllocation());
  }
  _this->_impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine)
}
inline void CapitalFlowIntradayResponse_CapitalFlowLine::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.inflow_){},
      decltype(_impl_.timestamp_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.inflow_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.inflow_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CapitalFlowIntradayResponse_CapitalFlowLine::~CapitalFlowIntradayResponse_CapitalFlowLine() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CapitalFlowIntradayResponse_CapitalFlowLine::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.inflow_.Destroy();
}
void CapitalFlowIntradayResponse_CapitalFlowLine::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CapitalFlowIntradayResponse_CapitalFlowLine::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inflow_.ClearToEmpty();
  _impl_.timestamp_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CapitalFlowIntradayResponse_CapitalFlowLine::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 79, 2> CapitalFlowIntradayResponse_CapitalFlowLine::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CapitalFlowIntradayResponse_CapitalFlowLine_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 timestamp = 2 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CapitalFlowIntradayResponse_CapitalFlowLine, _impl_.timestamp_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CapitalFlowIntradayResponse_CapitalFlowLine, _impl_.timestamp_)}},
    // string inflow = 1 [json_name = "inflow"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CapitalFlowIntradayResponse_CapitalFlowLine, _impl_.inflow_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string inflow = 1 [json_name = "inflow"];
    {PROTOBUF_FIELD_OFFSET(CapitalFlowIntradayResponse_CapitalFlowLine, _impl_.inflow_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 2 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(CapitalFlowIntradayResponse_CapitalFlowLine, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\100\6\0\0\0\0\0\0"
    "longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine"
    "inflow"
  }},
};

::uint8_t* CapitalFlowIntradayResponse_CapitalFlowLine::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string inflow = 1 [json_name = "inflow"];
  if (!this->_internal_inflow().empty()) {
    const std::string& _s = this->_internal_inflow();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine.inflow");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 timestamp = 2 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine)
  return target;
}

::size_t CapitalFlowIntradayResponse_CapitalFlowLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string inflow = 1 [json_name = "inflow"];
  if (!this->_internal_inflow().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_inflow());
  }

  // int64 timestamp = 2 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CapitalFlowIntradayResponse_CapitalFlowLine::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CapitalFlowIntradayResponse_CapitalFlowLine::MergeImpl
};
const ::google::protobuf::Message::ClassData*CapitalFlowIntradayResponse_CapitalFlowLine::GetClassData() const { return &_class_data_; }


void CapitalFlowIntradayResponse_CapitalFlowLine::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CapitalFlowIntradayResponse_CapitalFlowLine*>(&to_msg);
  auto& from = static_cast<const CapitalFlowIntradayResponse_CapitalFlowLine&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_inflow().empty()) {
    _this->_internal_set_inflow(from._internal_inflow());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CapitalFlowIntradayResponse_CapitalFlowLine::CopyFrom(const CapitalFlowIntradayResponse_CapitalFlowLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CapitalFlowIntradayResponse_CapitalFlowLine::IsInitialized() const {
  return true;
}

void CapitalFlowIntradayResponse_CapitalFlowLine::InternalSwap(CapitalFlowIntradayResponse_CapitalFlowLine* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.inflow_, lhs_arena,
                                       &other->_impl_.inflow_, rhs_arena);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata CapitalFlowIntradayResponse_CapitalFlowLine::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[54]);
}
// ===================================================================

class CapitalFlowIntradayResponse::_Internal {
 public:
};

CapitalFlowIntradayResponse::CapitalFlowIntradayResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.CapitalFlowIntradayResponse)
}
CapitalFlowIntradayResponse::CapitalFlowIntradayResponse(const CapitalFlowIntradayResponse& from) : ::google::protobuf::Message() {
  CapitalFlowIntradayResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.capital_flow_lines_){from._impl_.capital_flow_lines_},
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.CapitalFlowIntradayResponse)
}
inline void CapitalFlowIntradayResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.capital_flow_lines_){arena},
      decltype(_impl_.symbol_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CapitalFlowIntradayResponse::~CapitalFlowIntradayResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.CapitalFlowIntradayResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CapitalFlowIntradayResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.capital_flow_lines_.~RepeatedPtrField();
  _impl_.symbol_.Destroy();
}
void CapitalFlowIntradayResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CapitalFlowIntradayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.CapitalFlowIntradayResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_capital_flow_lines()->Clear();
  _impl_.symbol_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CapitalFlowIntradayResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 63, 2> CapitalFlowIntradayResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CapitalFlowIntradayResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine capital_flow_lines = 2 [json_name = "capitalFlowLines"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CapitalFlowIntradayResponse, _impl_.capital_flow_lines_)}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CapitalFlowIntradayResponse, _impl_.symbol_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(CapitalFlowIntradayResponse, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine capital_flow_lines = 2 [json_name = "capitalFlowLines"];
    {PROTOBUF_FIELD_OFFSET(CapitalFlowIntradayResponse, _impl_.capital_flow_lines_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::CapitalFlowIntradayResponse_CapitalFlowLine>()},
  }}, {{
    "\60\6\0\0\0\0\0\0"
    "longportapp.quote.v1.CapitalFlowIntradayResponse"
    "symbol"
  }},
};

::uint8_t* CapitalFlowIntradayResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.CapitalFlowIntradayResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.CapitalFlowIntradayResponse.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine capital_flow_lines = 2 [json_name = "capitalFlowLines"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_capital_flow_lines_size()); i < n; i++) {
    const auto& repfield = this->_internal_capital_flow_lines().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.CapitalFlowIntradayResponse)
  return target;
}

::size_t CapitalFlowIntradayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.CapitalFlowIntradayResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.CapitalFlowIntradayResponse.CapitalFlowLine capital_flow_lines = 2 [json_name = "capitalFlowLines"];
  total_size += 1UL * this->_internal_capital_flow_lines_size();
  for (const auto& msg : this->_internal_capital_flow_lines()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CapitalFlowIntradayResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CapitalFlowIntradayResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CapitalFlowIntradayResponse::GetClassData() const { return &_class_data_; }


void CapitalFlowIntradayResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CapitalFlowIntradayResponse*>(&to_msg);
  auto& from = static_cast<const CapitalFlowIntradayResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.CapitalFlowIntradayResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_capital_flow_lines()->MergeFrom(from._internal_capital_flow_lines());
  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CapitalFlowIntradayResponse::CopyFrom(const CapitalFlowIntradayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.CapitalFlowIntradayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CapitalFlowIntradayResponse::IsInitialized() const {
  return true;
}

void CapitalFlowIntradayResponse::InternalSwap(CapitalFlowIntradayResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.capital_flow_lines_.InternalSwap(&other->_impl_.capital_flow_lines_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
}

::google::protobuf::Metadata CapitalFlowIntradayResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[55]);
}
// ===================================================================

class CapitalDistributionResponse_CapitalDistribution::_Internal {
 public:
};

CapitalDistributionResponse_CapitalDistribution::CapitalDistributionResponse_CapitalDistribution(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution)
}
CapitalDistributionResponse_CapitalDistribution::CapitalDistributionResponse_CapitalDistribution(const CapitalDistributionResponse_CapitalDistribution& from) : ::google::protobuf::Message() {
  CapitalDistributionResponse_CapitalDistribution* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.large_){},
      decltype(_impl_.medium_){},
      decltype(_impl_.small_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.large_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.large_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_large().empty()) {
    _this->_impl_.large_.Set(from._internal_large(), _this->GetArenaForAllocation());
  }
  _impl_.medium_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.medium_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_medium().empty()) {
    _this->_impl_.medium_.Set(from._internal_medium(), _this->GetArenaForAllocation());
  }
  _impl_.small_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.small_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_small().empty()) {
    _this->_impl_.small_.Set(from._internal_small(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution)
}
inline void CapitalDistributionResponse_CapitalDistribution::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.large_){},
      decltype(_impl_.medium_){},
      decltype(_impl_.small_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.large_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.large_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.medium_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.medium_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.small_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.small_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CapitalDistributionResponse_CapitalDistribution::~CapitalDistributionResponse_CapitalDistribution() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CapitalDistributionResponse_CapitalDistribution::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.large_.Destroy();
  _impl_.medium_.Destroy();
  _impl_.small_.Destroy();
}
void CapitalDistributionResponse_CapitalDistribution::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CapitalDistributionResponse_CapitalDistribution::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.large_.ClearToEmpty();
  _impl_.medium_.ClearToEmpty();
  _impl_.small_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CapitalDistributionResponse_CapitalDistribution::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 93, 2> CapitalDistributionResponse_CapitalDistribution::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CapitalDistributionResponse_CapitalDistribution_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string large = 1 [json_name = "large"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse_CapitalDistribution, _impl_.large_)}},
    // string medium = 2 [json_name = "medium"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse_CapitalDistribution, _impl_.medium_)}},
    // string small = 3 [json_name = "small"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse_CapitalDistribution, _impl_.small_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string large = 1 [json_name = "large"];
    {PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse_CapitalDistribution, _impl_.large_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string medium = 2 [json_name = "medium"];
    {PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse_CapitalDistribution, _impl_.medium_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string small = 3 [json_name = "small"];
    {PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse_CapitalDistribution, _impl_.small_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\104\5\6\5\0\0\0\0"
    "longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution"
    "large"
    "medium"
    "small"
  }},
};

::uint8_t* CapitalDistributionResponse_CapitalDistribution::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string large = 1 [json_name = "large"];
  if (!this->_internal_large().empty()) {
    const std::string& _s = this->_internal_large();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution.large");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string medium = 2 [json_name = "medium"];
  if (!this->_internal_medium().empty()) {
    const std::string& _s = this->_internal_medium();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution.medium");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string small = 3 [json_name = "small"];
  if (!this->_internal_small().empty()) {
    const std::string& _s = this->_internal_small();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution.small");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution)
  return target;
}

::size_t CapitalDistributionResponse_CapitalDistribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string large = 1 [json_name = "large"];
  if (!this->_internal_large().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_large());
  }

  // string medium = 2 [json_name = "medium"];
  if (!this->_internal_medium().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_medium());
  }

  // string small = 3 [json_name = "small"];
  if (!this->_internal_small().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_small());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CapitalDistributionResponse_CapitalDistribution::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CapitalDistributionResponse_CapitalDistribution::MergeImpl
};
const ::google::protobuf::Message::ClassData*CapitalDistributionResponse_CapitalDistribution::GetClassData() const { return &_class_data_; }


void CapitalDistributionResponse_CapitalDistribution::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CapitalDistributionResponse_CapitalDistribution*>(&to_msg);
  auto& from = static_cast<const CapitalDistributionResponse_CapitalDistribution&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_large().empty()) {
    _this->_internal_set_large(from._internal_large());
  }
  if (!from._internal_medium().empty()) {
    _this->_internal_set_medium(from._internal_medium());
  }
  if (!from._internal_small().empty()) {
    _this->_internal_set_small(from._internal_small());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CapitalDistributionResponse_CapitalDistribution::CopyFrom(const CapitalDistributionResponse_CapitalDistribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CapitalDistributionResponse_CapitalDistribution::IsInitialized() const {
  return true;
}

void CapitalDistributionResponse_CapitalDistribution::InternalSwap(CapitalDistributionResponse_CapitalDistribution* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.large_, lhs_arena,
                                       &other->_impl_.large_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.medium_, lhs_arena,
                                       &other->_impl_.medium_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.small_, lhs_arena,
                                       &other->_impl_.small_, rhs_arena);
}

::google::protobuf::Metadata CapitalDistributionResponse_CapitalDistribution::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[56]);
}
// ===================================================================

class CapitalDistributionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CapitalDistributionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse, _impl_._has_bits_);
  static const ::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution& capital_in(const CapitalDistributionResponse* msg);
  static void set_has_capital_in(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution& capital_out(const CapitalDistributionResponse* msg);
  static void set_has_capital_out(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution& CapitalDistributionResponse::_Internal::capital_in(const CapitalDistributionResponse* msg) {
  return *msg->_impl_.capital_in_;
}
const ::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution& CapitalDistributionResponse::_Internal::capital_out(const CapitalDistributionResponse* msg) {
  return *msg->_impl_.capital_out_;
}
CapitalDistributionResponse::CapitalDistributionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.CapitalDistributionResponse)
}
CapitalDistributionResponse::CapitalDistributionResponse(const CapitalDistributionResponse& from) : ::google::protobuf::Message() {
  CapitalDistributionResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.symbol_){},
      decltype(_impl_.capital_in_){nullptr},
      decltype(_impl_.capital_out_){nullptr},
      decltype(_impl_.timestamp_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.capital_in_ = new ::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution(*from._impl_.capital_in_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.capital_out_ = new ::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution(*from._impl_.capital_out_);
  }
  _this->_impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.CapitalDistributionResponse)
}
inline void CapitalDistributionResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.symbol_){},
      decltype(_impl_.capital_in_){nullptr},
      decltype(_impl_.capital_out_){nullptr},
      decltype(_impl_.timestamp_){::int64_t{0}},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CapitalDistributionResponse::~CapitalDistributionResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.CapitalDistributionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CapitalDistributionResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
  if (this != internal_default_instance()) delete _impl_.capital_in_;
  if (this != internal_default_instance()) delete _impl_.capital_out_;
}
void CapitalDistributionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CapitalDistributionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.CapitalDistributionResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.capital_in_ != nullptr);
      _impl_.capital_in_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.capital_out_ != nullptr);
      _impl_.capital_out_->Clear();
    }
  }
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CapitalDistributionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 63, 2> CapitalDistributionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CapitalDistributionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution capital_out = 4 [json_name = "capitalOut"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse, _impl_.capital_out_)}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse, _impl_.symbol_)}},
    // int64 timestamp = 2 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CapitalDistributionResponse, _impl_.timestamp_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse, _impl_.timestamp_)}},
    // .longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution capital_in = 3 [json_name = "capitalIn"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse, _impl_.capital_in_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse, _impl_.symbol_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 2 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution capital_in = 3 [json_name = "capitalIn"];
    {PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse, _impl_.capital_in_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution capital_out = 4 [json_name = "capitalOut"];
    {PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse, _impl_.capital_out_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution>()},
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution>()},
  }}, {{
    "\60\6\0\0\0\0\0\0"
    "longportapp.quote.v1.CapitalDistributionResponse"
    "symbol"
  }},
};

::uint8_t* CapitalDistributionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.CapitalDistributionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.CapitalDistributionResponse.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 timestamp = 2 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_timestamp(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution capital_in = 3 [json_name = "capitalIn"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::capital_in(this),
        _Internal::capital_in(this).GetCachedSize(), target, stream);
  }

  // .longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution capital_out = 4 [json_name = "capitalOut"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::capital_out(this),
        _Internal::capital_out(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.CapitalDistributionResponse)
  return target;
}

::size_t CapitalDistributionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.CapitalDistributionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution capital_in = 3 [json_name = "capitalIn"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.capital_in_);
    }

    // .longportapp.quote.v1.CapitalDistributionResponse.CapitalDistribution capital_out = 4 [json_name = "capitalOut"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.capital_out_);
    }

  }
  // int64 timestamp = 2 [json_name = "timestamp"];
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_timestamp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CapitalDistributionResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CapitalDistributionResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*CapitalDistributionResponse::GetClassData() const { return &_class_data_; }


void CapitalDistributionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CapitalDistributionResponse*>(&to_msg);
  auto& from = static_cast<const CapitalDistributionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.CapitalDistributionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_capital_in()->::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution::MergeFrom(
          from._internal_capital_in());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_capital_out()->::longportapp::quote::v1::CapitalDistributionResponse_CapitalDistribution::MergeFrom(
          from._internal_capital_out());
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CapitalDistributionResponse::CopyFrom(const CapitalDistributionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.CapitalDistributionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CapitalDistributionResponse::IsInitialized() const {
  return true;
}

void CapitalDistributionResponse::InternalSwap(CapitalDistributionResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse, _impl_.timestamp_)
      + sizeof(CapitalDistributionResponse::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(CapitalDistributionResponse, _impl_.capital_in_)>(
          reinterpret_cast<char*>(&_impl_.capital_in_),
          reinterpret_cast<char*>(&other->_impl_.capital_in_));
}

::google::protobuf::Metadata CapitalDistributionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[57]);
}
// ===================================================================

class SecurityCalcQuoteRequest::_Internal {
 public:
};

SecurityCalcQuoteRequest::SecurityCalcQuoteRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityCalcQuoteRequest)
}
SecurityCalcQuoteRequest::SecurityCalcQuoteRequest(const SecurityCalcQuoteRequest& from) : ::google::protobuf::Message() {
  SecurityCalcQuoteRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbols_){from._impl_.symbols_},
      decltype(_impl_.calc_index_){from._internal_calc_index()},
      /*decltype(_impl_._calc_index_cached_byte_size_)*/ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityCalcQuoteRequest)
}
inline void SecurityCalcQuoteRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbols_){arena},
      decltype(_impl_.calc_index_){arena},
      /*decltype(_impl_._calc_index_cached_byte_size_)*/ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SecurityCalcQuoteRequest::~SecurityCalcQuoteRequest() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityCalcQuoteRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityCalcQuoteRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_symbols()->~RepeatedPtrField();
  _internal_mutable_calc_index()->~RepeatedField();
}
void SecurityCalcQuoteRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityCalcQuoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityCalcQuoteRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_symbols()->Clear();
  _internal_mutable_calc_index()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityCalcQuoteRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> SecurityCalcQuoteRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SecurityCalcQuoteRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.CalcIndex calc_index = 2 [json_name = "calcIndex"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcQuoteRequest, _impl_.calc_index_)}},
    // repeated string symbols = 1 [json_name = "symbols"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcQuoteRequest, _impl_.symbols_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string symbols = 1 [json_name = "symbols"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcQuoteRequest, _impl_.symbols_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .longportapp.quote.v1.CalcIndex calc_index = 2 [json_name = "calcIndex"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcQuoteRequest, _impl_.calc_index_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
    "\55\7\0\0\0\0\0\0"
    "longportapp.quote.v1.SecurityCalcQuoteRequest"
    "symbols"
  }},
};

::uint8_t* SecurityCalcQuoteRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityCalcQuoteRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string symbols = 1 [json_name = "symbols"];
  for (int i = 0, n = this->_internal_symbols_size(); i < n; ++i) {
    const auto& s = this->_internal_symbols().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcQuoteRequest.symbols");
    target = stream->WriteString(1, s, target);
  }

  // repeated .longportapp.quote.v1.CalcIndex calc_index = 2 [json_name = "calcIndex"];
  {
    int byte_size = _impl_._calc_index_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(2, _internal_calc_index(),
                                       byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityCalcQuoteRequest)
  return target;
}

::size_t SecurityCalcQuoteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityCalcQuoteRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string symbols = 1 [json_name = "symbols"];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_symbols().size());
  for (int i = 0, n = _internal_symbols().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_symbols().Get(i));
  }
  // repeated .longportapp.quote.v1.CalcIndex calc_index = 2 [json_name = "calcIndex"];
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_calc_index_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_calc_index().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._calc_index_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityCalcQuoteRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityCalcQuoteRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityCalcQuoteRequest::GetClassData() const { return &_class_data_; }


void SecurityCalcQuoteRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityCalcQuoteRequest*>(&to_msg);
  auto& from = static_cast<const SecurityCalcQuoteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityCalcQuoteRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_symbols()->MergeFrom(from._internal_symbols());
  _this->_internal_mutable_calc_index()->MergeFrom(from._internal_calc_index());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityCalcQuoteRequest::CopyFrom(const SecurityCalcQuoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityCalcQuoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityCalcQuoteRequest::IsInitialized() const {
  return true;
}

void SecurityCalcQuoteRequest::InternalSwap(SecurityCalcQuoteRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.symbols_.InternalSwap(&other->_impl_.symbols_);
  _impl_.calc_index_.InternalSwap(&other->_impl_.calc_index_);
}

::google::protobuf::Metadata SecurityCalcQuoteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[58]);
}
// ===================================================================

class SecurityCalcIndex::_Internal {
 public:
};

SecurityCalcIndex::SecurityCalcIndex(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityCalcIndex)
}
SecurityCalcIndex::SecurityCalcIndex(const SecurityCalcIndex& from) : ::google::protobuf::Message() {
  SecurityCalcIndex* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      decltype(_impl_.last_done_){},
      decltype(_impl_.change_val_){},
      decltype(_impl_.change_rate_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.ytd_change_rate_){},
      decltype(_impl_.turnover_rate_){},
      decltype(_impl_.total_market_value_){},
      decltype(_impl_.capital_flow_){},
      decltype(_impl_.amplitude_){},
      decltype(_impl_.volume_ratio_){},
      decltype(_impl_.pe_ttm_ratio_){},
      decltype(_impl_.pb_ratio_){},
      decltype(_impl_.dividend_ratio_ttm_){},
      decltype(_impl_.five_day_change_rate_){},
      decltype(_impl_.ten_day_change_rate_){},
      decltype(_impl_.half_year_change_rate_){},
      decltype(_impl_.five_minutes_change_rate_){},
      decltype(_impl_.expiry_date_){},
      decltype(_impl_.strike_price_){},
      decltype(_impl_.upper_strike_price_){},
      decltype(_impl_.lower_strike_price_){},
      decltype(_impl_.outstanding_ratio_){},
      decltype(_impl_.premium_){},
      decltype(_impl_.itm_otm_){},
      decltype(_impl_.implied_volatility_){},
      decltype(_impl_.warrant_delta_){},
      decltype(_impl_.call_price_){},
      decltype(_impl_.to_call_price_){},
      decltype(_impl_.effective_leverage_){},
      decltype(_impl_.leverage_ratio_){},
      decltype(_impl_.conversion_ratio_){},
      decltype(_impl_.balance_point_){},
      decltype(_impl_.delta_){},
      decltype(_impl_.gamma_){},
      decltype(_impl_.theta_){},
      decltype(_impl_.vega_){},
      decltype(_impl_.rho_){},
      decltype(_impl_.volume_){},
      decltype(_impl_.outstanding_qty_){},
      decltype(_impl_.open_interest_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  _impl_.last_done_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_done_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_last_done().empty()) {
    _this->_impl_.last_done_.Set(from._internal_last_done(), _this->GetArenaForAllocation());
  }
  _impl_.change_val_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.change_val_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_change_val().empty()) {
    _this->_impl_.change_val_.Set(from._internal_change_val(), _this->GetArenaForAllocation());
  }
  _impl_.change_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.change_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_change_rate().empty()) {
    _this->_impl_.change_rate_.Set(from._internal_change_rate(), _this->GetArenaForAllocation());
  }
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_turnover().empty()) {
    _this->_impl_.turnover_.Set(from._internal_turnover(), _this->GetArenaForAllocation());
  }
  _impl_.ytd_change_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ytd_change_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ytd_change_rate().empty()) {
    _this->_impl_.ytd_change_rate_.Set(from._internal_ytd_change_rate(), _this->GetArenaForAllocation());
  }
  _impl_.turnover_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_turnover_rate().empty()) {
    _this->_impl_.turnover_rate_.Set(from._internal_turnover_rate(), _this->GetArenaForAllocation());
  }
  _impl_.total_market_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.total_market_value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_total_market_value().empty()) {
    _this->_impl_.total_market_value_.Set(from._internal_total_market_value(), _this->GetArenaForAllocation());
  }
  _impl_.capital_flow_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.capital_flow_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_capital_flow().empty()) {
    _this->_impl_.capital_flow_.Set(from._internal_capital_flow(), _this->GetArenaForAllocation());
  }
  _impl_.amplitude_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.amplitude_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_amplitude().empty()) {
    _this->_impl_.amplitude_.Set(from._internal_amplitude(), _this->GetArenaForAllocation());
  }
  _impl_.volume_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.volume_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_volume_ratio().empty()) {
    _this->_impl_.volume_ratio_.Set(from._internal_volume_ratio(), _this->GetArenaForAllocation());
  }
  _impl_.pe_ttm_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.pe_ttm_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pe_ttm_ratio().empty()) {
    _this->_impl_.pe_ttm_ratio_.Set(from._internal_pe_ttm_ratio(), _this->GetArenaForAllocation());
  }
  _impl_.pb_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.pb_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pb_ratio().empty()) {
    _this->_impl_.pb_ratio_.Set(from._internal_pb_ratio(), _this->GetArenaForAllocation());
  }
  _impl_.dividend_ratio_ttm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dividend_ratio_ttm_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dividend_ratio_ttm().empty()) {
    _this->_impl_.dividend_ratio_ttm_.Set(from._internal_dividend_ratio_ttm(), _this->GetArenaForAllocation());
  }
  _impl_.five_day_change_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.five_day_change_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_five_day_change_rate().empty()) {
    _this->_impl_.five_day_change_rate_.Set(from._internal_five_day_change_rate(), _this->GetArenaForAllocation());
  }
  _impl_.ten_day_change_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ten_day_change_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ten_day_change_rate().empty()) {
    _this->_impl_.ten_day_change_rate_.Set(from._internal_ten_day_change_rate(), _this->GetArenaForAllocation());
  }
  _impl_.half_year_change_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.half_year_change_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_half_year_change_rate().empty()) {
    _this->_impl_.half_year_change_rate_.Set(from._internal_half_year_change_rate(), _this->GetArenaForAllocation());
  }
  _impl_.five_minutes_change_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.five_minutes_change_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_five_minutes_change_rate().empty()) {
    _this->_impl_.five_minutes_change_rate_.Set(from._internal_five_minutes_change_rate(), _this->GetArenaForAllocation());
  }
  _impl_.expiry_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.expiry_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_expiry_date().empty()) {
    _this->_impl_.expiry_date_.Set(from._internal_expiry_date(), _this->GetArenaForAllocation());
  }
  _impl_.strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strike_price().empty()) {
    _this->_impl_.strike_price_.Set(from._internal_strike_price(), _this->GetArenaForAllocation());
  }
  _impl_.upper_strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.upper_strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_upper_strike_price().empty()) {
    _this->_impl_.upper_strike_price_.Set(from._internal_upper_strike_price(), _this->GetArenaForAllocation());
  }
  _impl_.lower_strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lower_strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_lower_strike_price().empty()) {
    _this->_impl_.lower_strike_price_.Set(from._internal_lower_strike_price(), _this->GetArenaForAllocation());
  }
  _impl_.outstanding_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.outstanding_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_outstanding_ratio().empty()) {
    _this->_impl_.outstanding_ratio_.Set(from._internal_outstanding_ratio(), _this->GetArenaForAllocation());
  }
  _impl_.premium_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.premium_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_premium().empty()) {
    _this->_impl_.premium_.Set(from._internal_premium(), _this->GetArenaForAllocation());
  }
  _impl_.itm_otm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.itm_otm_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_itm_otm().empty()) {
    _this->_impl_.itm_otm_.Set(from._internal_itm_otm(), _this->GetArenaForAllocation());
  }
  _impl_.implied_volatility_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.implied_volatility_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_implied_volatility().empty()) {
    _this->_impl_.implied_volatility_.Set(from._internal_implied_volatility(), _this->GetArenaForAllocation());
  }
  _impl_.warrant_delta_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.warrant_delta_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_warrant_delta().empty()) {
    _this->_impl_.warrant_delta_.Set(from._internal_warrant_delta(), _this->GetArenaForAllocation());
  }
  _impl_.call_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.call_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_call_price().empty()) {
    _this->_impl_.call_price_.Set(from._internal_call_price(), _this->GetArenaForAllocation());
  }
  _impl_.to_call_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.to_call_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_to_call_price().empty()) {
    _this->_impl_.to_call_price_.Set(from._internal_to_call_price(), _this->GetArenaForAllocation());
  }
  _impl_.effective_leverage_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.effective_leverage_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_effective_leverage().empty()) {
    _this->_impl_.effective_leverage_.Set(from._internal_effective_leverage(), _this->GetArenaForAllocation());
  }
  _impl_.leverage_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.leverage_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_leverage_ratio().empty()) {
    _this->_impl_.leverage_ratio_.Set(from._internal_leverage_ratio(), _this->GetArenaForAllocation());
  }
  _impl_.conversion_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.conversion_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_conversion_ratio().empty()) {
    _this->_impl_.conversion_ratio_.Set(from._internal_conversion_ratio(), _this->GetArenaForAllocation());
  }
  _impl_.balance_point_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.balance_point_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_balance_point().empty()) {
    _this->_impl_.balance_point_.Set(from._internal_balance_point(), _this->GetArenaForAllocation());
  }
  _impl_.delta_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delta_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delta().empty()) {
    _this->_impl_.delta_.Set(from._internal_delta(), _this->GetArenaForAllocation());
  }
  _impl_.gamma_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.gamma_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_gamma().empty()) {
    _this->_impl_.gamma_.Set(from._internal_gamma(), _this->GetArenaForAllocation());
  }
  _impl_.theta_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.theta_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_theta().empty()) {
    _this->_impl_.theta_.Set(from._internal_theta(), _this->GetArenaForAllocation());
  }
  _impl_.vega_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.vega_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_vega().empty()) {
    _this->_impl_.vega_.Set(from._internal_vega(), _this->GetArenaForAllocation());
  }
  _impl_.rho_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.rho_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rho().empty()) {
    _this->_impl_.rho_.Set(from._internal_rho(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.volume_, &from._impl_.volume_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.open_interest_) -
    reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.open_interest_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityCalcIndex)
}
inline void SecurityCalcIndex::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.symbol_){},
      decltype(_impl_.last_done_){},
      decltype(_impl_.change_val_){},
      decltype(_impl_.change_rate_){},
      decltype(_impl_.turnover_){},
      decltype(_impl_.ytd_change_rate_){},
      decltype(_impl_.turnover_rate_){},
      decltype(_impl_.total_market_value_){},
      decltype(_impl_.capital_flow_){},
      decltype(_impl_.amplitude_){},
      decltype(_impl_.volume_ratio_){},
      decltype(_impl_.pe_ttm_ratio_){},
      decltype(_impl_.pb_ratio_){},
      decltype(_impl_.dividend_ratio_ttm_){},
      decltype(_impl_.five_day_change_rate_){},
      decltype(_impl_.ten_day_change_rate_){},
      decltype(_impl_.half_year_change_rate_){},
      decltype(_impl_.five_minutes_change_rate_){},
      decltype(_impl_.expiry_date_){},
      decltype(_impl_.strike_price_){},
      decltype(_impl_.upper_strike_price_){},
      decltype(_impl_.lower_strike_price_){},
      decltype(_impl_.outstanding_ratio_){},
      decltype(_impl_.premium_){},
      decltype(_impl_.itm_otm_){},
      decltype(_impl_.implied_volatility_){},
      decltype(_impl_.warrant_delta_){},
      decltype(_impl_.call_price_){},
      decltype(_impl_.to_call_price_){},
      decltype(_impl_.effective_leverage_){},
      decltype(_impl_.leverage_ratio_){},
      decltype(_impl_.conversion_ratio_){},
      decltype(_impl_.balance_point_){},
      decltype(_impl_.delta_){},
      decltype(_impl_.gamma_){},
      decltype(_impl_.theta_){},
      decltype(_impl_.vega_){},
      decltype(_impl_.rho_){},
      decltype(_impl_.volume_){::int64_t{0}},
      decltype(_impl_.outstanding_qty_){::int64_t{0}},
      decltype(_impl_.open_interest_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.last_done_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.last_done_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.change_val_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.change_val_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.change_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.change_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.turnover_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ytd_change_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ytd_change_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.turnover_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.turnover_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.total_market_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.total_market_value_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.capital_flow_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.capital_flow_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.amplitude_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.amplitude_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.volume_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.volume_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pe_ttm_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.pe_ttm_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pb_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.pb_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dividend_ratio_ttm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.dividend_ratio_ttm_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.five_day_change_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.five_day_change_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.ten_day_change_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.ten_day_change_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.half_year_change_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.half_year_change_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.five_minutes_change_rate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.five_minutes_change_rate_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.expiry_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.expiry_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.upper_strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.upper_strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.lower_strike_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.lower_strike_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.outstanding_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.outstanding_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.premium_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.premium_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.itm_otm_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.itm_otm_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.implied_volatility_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.implied_volatility_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.warrant_delta_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.warrant_delta_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.call_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.call_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.to_call_price_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.to_call_price_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.effective_leverage_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.effective_leverage_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.leverage_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.leverage_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.conversion_ratio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.conversion_ratio_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.balance_point_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.balance_point_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.delta_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.delta_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.gamma_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.gamma_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.theta_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.theta_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.vega_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.vega_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.rho_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.rho_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SecurityCalcIndex::~SecurityCalcIndex() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityCalcIndex)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityCalcIndex::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
  _impl_.last_done_.Destroy();
  _impl_.change_val_.Destroy();
  _impl_.change_rate_.Destroy();
  _impl_.turnover_.Destroy();
  _impl_.ytd_change_rate_.Destroy();
  _impl_.turnover_rate_.Destroy();
  _impl_.total_market_value_.Destroy();
  _impl_.capital_flow_.Destroy();
  _impl_.amplitude_.Destroy();
  _impl_.volume_ratio_.Destroy();
  _impl_.pe_ttm_ratio_.Destroy();
  _impl_.pb_ratio_.Destroy();
  _impl_.dividend_ratio_ttm_.Destroy();
  _impl_.five_day_change_rate_.Destroy();
  _impl_.ten_day_change_rate_.Destroy();
  _impl_.half_year_change_rate_.Destroy();
  _impl_.five_minutes_change_rate_.Destroy();
  _impl_.expiry_date_.Destroy();
  _impl_.strike_price_.Destroy();
  _impl_.upper_strike_price_.Destroy();
  _impl_.lower_strike_price_.Destroy();
  _impl_.outstanding_ratio_.Destroy();
  _impl_.premium_.Destroy();
  _impl_.itm_otm_.Destroy();
  _impl_.implied_volatility_.Destroy();
  _impl_.warrant_delta_.Destroy();
  _impl_.call_price_.Destroy();
  _impl_.to_call_price_.Destroy();
  _impl_.effective_leverage_.Destroy();
  _impl_.leverage_ratio_.Destroy();
  _impl_.conversion_ratio_.Destroy();
  _impl_.balance_point_.Destroy();
  _impl_.delta_.Destroy();
  _impl_.gamma_.Destroy();
  _impl_.theta_.Destroy();
  _impl_.vega_.Destroy();
  _impl_.rho_.Destroy();
}
void SecurityCalcIndex::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityCalcIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityCalcIndex)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  _impl_.last_done_.ClearToEmpty();
  _impl_.change_val_.ClearToEmpty();
  _impl_.change_rate_.ClearToEmpty();
  _impl_.turnover_.ClearToEmpty();
  _impl_.ytd_change_rate_.ClearToEmpty();
  _impl_.turnover_rate_.ClearToEmpty();
  _impl_.total_market_value_.ClearToEmpty();
  _impl_.capital_flow_.ClearToEmpty();
  _impl_.amplitude_.ClearToEmpty();
  _impl_.volume_ratio_.ClearToEmpty();
  _impl_.pe_ttm_ratio_.ClearToEmpty();
  _impl_.pb_ratio_.ClearToEmpty();
  _impl_.dividend_ratio_ttm_.ClearToEmpty();
  _impl_.five_day_change_rate_.ClearToEmpty();
  _impl_.ten_day_change_rate_.ClearToEmpty();
  _impl_.half_year_change_rate_.ClearToEmpty();
  _impl_.five_minutes_change_rate_.ClearToEmpty();
  _impl_.expiry_date_.ClearToEmpty();
  _impl_.strike_price_.ClearToEmpty();
  _impl_.upper_strike_price_.ClearToEmpty();
  _impl_.lower_strike_price_.ClearToEmpty();
  _impl_.outstanding_ratio_.ClearToEmpty();
  _impl_.premium_.ClearToEmpty();
  _impl_.itm_otm_.ClearToEmpty();
  _impl_.implied_volatility_.ClearToEmpty();
  _impl_.warrant_delta_.ClearToEmpty();
  _impl_.call_price_.ClearToEmpty();
  _impl_.to_call_price_.ClearToEmpty();
  _impl_.effective_leverage_.ClearToEmpty();
  _impl_.leverage_ratio_.ClearToEmpty();
  _impl_.conversion_ratio_.ClearToEmpty();
  _impl_.balance_point_.ClearToEmpty();
  _impl_.delta_.ClearToEmpty();
  _impl_.gamma_.ClearToEmpty();
  _impl_.theta_.ClearToEmpty();
  _impl_.vega_.ClearToEmpty();
  _impl_.rho_.ClearToEmpty();
  ::memset(&_impl_.volume_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.open_interest_) -
      reinterpret_cast<char*>(&_impl_.volume_)) + sizeof(_impl_.open_interest_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityCalcIndex::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 41, 0, 559, 7> SecurityCalcIndex::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    41, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    0,  // skipmap
    offsetof(decltype(_table_), field_entries),
    41,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SecurityCalcIndex_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.symbol_)}},
    // string last_done = 2 [json_name = "lastDone"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.last_done_)}},
    // string change_val = 3 [json_name = "changeVal"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.change_val_)}},
    // string change_rate = 4 [json_name = "changeRate"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.change_rate_)}},
    // int64 volume = 5 [json_name = "volume"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SecurityCalcIndex, _impl_.volume_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.volume_)}},
    // string turnover = 6 [json_name = "turnover"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.turnover_)}},
    // string ytd_change_rate = 7 [json_name = "ytdChangeRate"];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.ytd_change_rate_)}},
    // string turnover_rate = 8 [json_name = "turnoverRate"];
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.turnover_rate_)}},
    // string total_market_value = 9 [json_name = "totalMarketValue"];
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.total_market_value_)}},
    // string capital_flow = 10 [json_name = "capitalFlow"];
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.capital_flow_)}},
    // string amplitude = 11 [json_name = "amplitude"];
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.amplitude_)}},
    // string volume_ratio = 12 [json_name = "volumeRatio"];
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.volume_ratio_)}},
    // string pe_ttm_ratio = 13 [json_name = "peTtmRatio"];
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.pe_ttm_ratio_)}},
    // string pb_ratio = 14 [json_name = "pbRatio"];
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.pb_ratio_)}},
    // string dividend_ratio_ttm = 15 [json_name = "dividendRatioTtm"];
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.dividend_ratio_ttm_)}},
    // string five_day_change_rate = 16 [json_name = "fiveDayChangeRate"];
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.five_day_change_rate_)}},
    // string ten_day_change_rate = 17 [json_name = "tenDayChangeRate"];
    {::_pbi::TcParser::FastUS2,
     {394, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.ten_day_change_rate_)}},
    // string half_year_change_rate = 18 [json_name = "halfYearChangeRate"];
    {::_pbi::TcParser::FastUS2,
     {402, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.half_year_change_rate_)}},
    // string five_minutes_change_rate = 19 [json_name = "fiveMinutesChangeRate"];
    {::_pbi::TcParser::FastUS2,
     {410, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.five_minutes_change_rate_)}},
    // string expiry_date = 20 [json_name = "expiryDate"];
    {::_pbi::TcParser::FastUS2,
     {418, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.expiry_date_)}},
    // string strike_price = 21 [json_name = "strikePrice"];
    {::_pbi::TcParser::FastUS2,
     {426, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.strike_price_)}},
    // string upper_strike_price = 22 [json_name = "upperStrikePrice"];
    {::_pbi::TcParser::FastUS2,
     {434, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.upper_strike_price_)}},
    // string lower_strike_price = 23 [json_name = "lowerStrikePrice"];
    {::_pbi::TcParser::FastUS2,
     {442, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.lower_strike_price_)}},
    // int64 outstanding_qty = 24 [json_name = "outstandingQty"];
    {::_pbi::TcParser::FastV64S2,
     {448, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.outstanding_qty_)}},
    // string outstanding_ratio = 25 [json_name = "outstandingRatio"];
    {::_pbi::TcParser::FastUS2,
     {458, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.outstanding_ratio_)}},
    // string premium = 26 [json_name = "premium"];
    {::_pbi::TcParser::FastUS2,
     {466, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.premium_)}},
    // string itm_otm = 27 [json_name = "itmOtm"];
    {::_pbi::TcParser::FastUS2,
     {474, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.itm_otm_)}},
    // string implied_volatility = 28 [json_name = "impliedVolatility"];
    {::_pbi::TcParser::FastUS2,
     {482, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.implied_volatility_)}},
    // string warrant_delta = 29 [json_name = "warrantDelta"];
    {::_pbi::TcParser::FastUS2,
     {490, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.warrant_delta_)}},
    // string call_price = 30 [json_name = "callPrice"];
    {::_pbi::TcParser::FastUS2,
     {498, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.call_price_)}},
    // string to_call_price = 31 [json_name = "toCallPrice"];
    {::_pbi::TcParser::FastUS2,
     {506, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.to_call_price_)}},
  }}, {{
    33, 0, 1,
    65024, 32,
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.symbol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string last_done = 2 [json_name = "lastDone"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.last_done_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string change_val = 3 [json_name = "changeVal"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.change_val_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string change_rate = 4 [json_name = "changeRate"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.change_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 volume = 5 [json_name = "volume"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.volume_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string turnover = 6 [json_name = "turnover"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.turnover_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ytd_change_rate = 7 [json_name = "ytdChangeRate"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.ytd_change_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string turnover_rate = 8 [json_name = "turnoverRate"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.turnover_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string total_market_value = 9 [json_name = "totalMarketValue"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.total_market_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string capital_flow = 10 [json_name = "capitalFlow"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.capital_flow_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string amplitude = 11 [json_name = "amplitude"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.amplitude_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string volume_ratio = 12 [json_name = "volumeRatio"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.volume_ratio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string pe_ttm_ratio = 13 [json_name = "peTtmRatio"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.pe_ttm_ratio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string pb_ratio = 14 [json_name = "pbRatio"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.pb_ratio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string dividend_ratio_ttm = 15 [json_name = "dividendRatioTtm"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.dividend_ratio_ttm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string five_day_change_rate = 16 [json_name = "fiveDayChangeRate"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.five_day_change_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ten_day_change_rate = 17 [json_name = "tenDayChangeRate"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.ten_day_change_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string half_year_change_rate = 18 [json_name = "halfYearChangeRate"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.half_year_change_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string five_minutes_change_rate = 19 [json_name = "fiveMinutesChangeRate"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.five_minutes_change_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string expiry_date = 20 [json_name = "expiryDate"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.expiry_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string strike_price = 21 [json_name = "strikePrice"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.strike_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string upper_strike_price = 22 [json_name = "upperStrikePrice"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.upper_strike_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string lower_strike_price = 23 [json_name = "lowerStrikePrice"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.lower_strike_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 outstanding_qty = 24 [json_name = "outstandingQty"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.outstanding_qty_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string outstanding_ratio = 25 [json_name = "outstandingRatio"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.outstanding_ratio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string premium = 26 [json_name = "premium"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.premium_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string itm_otm = 27 [json_name = "itmOtm"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.itm_otm_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string implied_volatility = 28 [json_name = "impliedVolatility"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.implied_volatility_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string warrant_delta = 29 [json_name = "warrantDelta"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.warrant_delta_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string call_price = 30 [json_name = "callPrice"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.call_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string to_call_price = 31 [json_name = "toCallPrice"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.to_call_price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string effective_leverage = 32 [json_name = "effectiveLeverage"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.effective_leverage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string leverage_ratio = 33 [json_name = "leverageRatio"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.leverage_ratio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string conversion_ratio = 34 [json_name = "conversionRatio"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.conversion_ratio_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string balance_point = 35 [json_name = "balancePoint"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.balance_point_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 open_interest = 36 [json_name = "openInterest"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.open_interest_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string delta = 37 [json_name = "delta"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.delta_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string gamma = 38 [json_name = "gamma"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.gamma_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string theta = 39 [json_name = "theta"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.theta_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string vega = 40 [json_name = "vega"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.vega_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string rho = 41 [json_name = "rho"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.rho_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\6\11\12\13\0\10\17\15\22\14\11\14\14\10\22\24\23\25\30\13\14\22\22\0\21\7\7\22\15\12\15\22\16\20\15\0\5\5\5\4\3\0\0\0\0\0\0"
    "longportapp.quote.v1.SecurityCalcIndex"
    "symbol"
    "last_done"
    "change_val"
    "change_rate"
    "turnover"
    "ytd_change_rate"
    "turnover_rate"
    "total_market_value"
    "capital_flow"
    "amplitude"
    "volume_ratio"
    "pe_ttm_ratio"
    "pb_ratio"
    "dividend_ratio_ttm"
    "five_day_change_rate"
    "ten_day_change_rate"
    "half_year_change_rate"
    "five_minutes_change_rate"
    "expiry_date"
    "strike_price"
    "upper_strike_price"
    "lower_strike_price"
    "outstanding_ratio"
    "premium"
    "itm_otm"
    "implied_volatility"
    "warrant_delta"
    "call_price"
    "to_call_price"
    "effective_leverage"
    "leverage_ratio"
    "conversion_ratio"
    "balance_point"
    "delta"
    "gamma"
    "theta"
    "vega"
    "rho"
  }},
};

::uint8_t* SecurityCalcIndex::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityCalcIndex)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string last_done = 2 [json_name = "lastDone"];
  if (!this->_internal_last_done().empty()) {
    const std::string& _s = this->_internal_last_done();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.last_done");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string change_val = 3 [json_name = "changeVal"];
  if (!this->_internal_change_val().empty()) {
    const std::string& _s = this->_internal_change_val();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.change_val");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string change_rate = 4 [json_name = "changeRate"];
  if (!this->_internal_change_rate().empty()) {
    const std::string& _s = this->_internal_change_rate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.change_rate");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int64 volume = 5 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_volume(), target);
  }

  // string turnover = 6 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    const std::string& _s = this->_internal_turnover();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.turnover");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string ytd_change_rate = 7 [json_name = "ytdChangeRate"];
  if (!this->_internal_ytd_change_rate().empty()) {
    const std::string& _s = this->_internal_ytd_change_rate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.ytd_change_rate");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // string turnover_rate = 8 [json_name = "turnoverRate"];
  if (!this->_internal_turnover_rate().empty()) {
    const std::string& _s = this->_internal_turnover_rate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.turnover_rate");
    target = stream->WriteStringMaybeAliased(8, _s, target);
  }

  // string total_market_value = 9 [json_name = "totalMarketValue"];
  if (!this->_internal_total_market_value().empty()) {
    const std::string& _s = this->_internal_total_market_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.total_market_value");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string capital_flow = 10 [json_name = "capitalFlow"];
  if (!this->_internal_capital_flow().empty()) {
    const std::string& _s = this->_internal_capital_flow();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.capital_flow");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // string amplitude = 11 [json_name = "amplitude"];
  if (!this->_internal_amplitude().empty()) {
    const std::string& _s = this->_internal_amplitude();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.amplitude");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // string volume_ratio = 12 [json_name = "volumeRatio"];
  if (!this->_internal_volume_ratio().empty()) {
    const std::string& _s = this->_internal_volume_ratio();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.volume_ratio");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // string pe_ttm_ratio = 13 [json_name = "peTtmRatio"];
  if (!this->_internal_pe_ttm_ratio().empty()) {
    const std::string& _s = this->_internal_pe_ttm_ratio();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.pe_ttm_ratio");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // string pb_ratio = 14 [json_name = "pbRatio"];
  if (!this->_internal_pb_ratio().empty()) {
    const std::string& _s = this->_internal_pb_ratio();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.pb_ratio");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // string dividend_ratio_ttm = 15 [json_name = "dividendRatioTtm"];
  if (!this->_internal_dividend_ratio_ttm().empty()) {
    const std::string& _s = this->_internal_dividend_ratio_ttm();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.dividend_ratio_ttm");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  // string five_day_change_rate = 16 [json_name = "fiveDayChangeRate"];
  if (!this->_internal_five_day_change_rate().empty()) {
    const std::string& _s = this->_internal_five_day_change_rate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.five_day_change_rate");
    target = stream->WriteStringMaybeAliased(16, _s, target);
  }

  // string ten_day_change_rate = 17 [json_name = "tenDayChangeRate"];
  if (!this->_internal_ten_day_change_rate().empty()) {
    const std::string& _s = this->_internal_ten_day_change_rate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.ten_day_change_rate");
    target = stream->WriteStringMaybeAliased(17, _s, target);
  }

  // string half_year_change_rate = 18 [json_name = "halfYearChangeRate"];
  if (!this->_internal_half_year_change_rate().empty()) {
    const std::string& _s = this->_internal_half_year_change_rate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.half_year_change_rate");
    target = stream->WriteStringMaybeAliased(18, _s, target);
  }

  // string five_minutes_change_rate = 19 [json_name = "fiveMinutesChangeRate"];
  if (!this->_internal_five_minutes_change_rate().empty()) {
    const std::string& _s = this->_internal_five_minutes_change_rate();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.five_minutes_change_rate");
    target = stream->WriteStringMaybeAliased(19, _s, target);
  }

  // string expiry_date = 20 [json_name = "expiryDate"];
  if (!this->_internal_expiry_date().empty()) {
    const std::string& _s = this->_internal_expiry_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.expiry_date");
    target = stream->WriteStringMaybeAliased(20, _s, target);
  }

  // string strike_price = 21 [json_name = "strikePrice"];
  if (!this->_internal_strike_price().empty()) {
    const std::string& _s = this->_internal_strike_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.strike_price");
    target = stream->WriteStringMaybeAliased(21, _s, target);
  }

  // string upper_strike_price = 22 [json_name = "upperStrikePrice"];
  if (!this->_internal_upper_strike_price().empty()) {
    const std::string& _s = this->_internal_upper_strike_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.upper_strike_price");
    target = stream->WriteStringMaybeAliased(22, _s, target);
  }

  // string lower_strike_price = 23 [json_name = "lowerStrikePrice"];
  if (!this->_internal_lower_strike_price().empty()) {
    const std::string& _s = this->_internal_lower_strike_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.lower_strike_price");
    target = stream->WriteStringMaybeAliased(23, _s, target);
  }

  // int64 outstanding_qty = 24 [json_name = "outstandingQty"];
  if (this->_internal_outstanding_qty() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        24, this->_internal_outstanding_qty(), target);
  }

  // string outstanding_ratio = 25 [json_name = "outstandingRatio"];
  if (!this->_internal_outstanding_ratio().empty()) {
    const std::string& _s = this->_internal_outstanding_ratio();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.outstanding_ratio");
    target = stream->WriteStringMaybeAliased(25, _s, target);
  }

  // string premium = 26 [json_name = "premium"];
  if (!this->_internal_premium().empty()) {
    const std::string& _s = this->_internal_premium();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.premium");
    target = stream->WriteStringMaybeAliased(26, _s, target);
  }

  // string itm_otm = 27 [json_name = "itmOtm"];
  if (!this->_internal_itm_otm().empty()) {
    const std::string& _s = this->_internal_itm_otm();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.itm_otm");
    target = stream->WriteStringMaybeAliased(27, _s, target);
  }

  // string implied_volatility = 28 [json_name = "impliedVolatility"];
  if (!this->_internal_implied_volatility().empty()) {
    const std::string& _s = this->_internal_implied_volatility();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.implied_volatility");
    target = stream->WriteStringMaybeAliased(28, _s, target);
  }

  // string warrant_delta = 29 [json_name = "warrantDelta"];
  if (!this->_internal_warrant_delta().empty()) {
    const std::string& _s = this->_internal_warrant_delta();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.warrant_delta");
    target = stream->WriteStringMaybeAliased(29, _s, target);
  }

  // string call_price = 30 [json_name = "callPrice"];
  if (!this->_internal_call_price().empty()) {
    const std::string& _s = this->_internal_call_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.call_price");
    target = stream->WriteStringMaybeAliased(30, _s, target);
  }

  // string to_call_price = 31 [json_name = "toCallPrice"];
  if (!this->_internal_to_call_price().empty()) {
    const std::string& _s = this->_internal_to_call_price();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.to_call_price");
    target = stream->WriteStringMaybeAliased(31, _s, target);
  }

  // string effective_leverage = 32 [json_name = "effectiveLeverage"];
  if (!this->_internal_effective_leverage().empty()) {
    const std::string& _s = this->_internal_effective_leverage();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.effective_leverage");
    target = stream->WriteStringMaybeAliased(32, _s, target);
  }

  // string leverage_ratio = 33 [json_name = "leverageRatio"];
  if (!this->_internal_leverage_ratio().empty()) {
    const std::string& _s = this->_internal_leverage_ratio();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.leverage_ratio");
    target = stream->WriteStringMaybeAliased(33, _s, target);
  }

  // string conversion_ratio = 34 [json_name = "conversionRatio"];
  if (!this->_internal_conversion_ratio().empty()) {
    const std::string& _s = this->_internal_conversion_ratio();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.conversion_ratio");
    target = stream->WriteStringMaybeAliased(34, _s, target);
  }

  // string balance_point = 35 [json_name = "balancePoint"];
  if (!this->_internal_balance_point().empty()) {
    const std::string& _s = this->_internal_balance_point();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.balance_point");
    target = stream->WriteStringMaybeAliased(35, _s, target);
  }

  // int64 open_interest = 36 [json_name = "openInterest"];
  if (this->_internal_open_interest() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        36, this->_internal_open_interest(), target);
  }

  // string delta = 37 [json_name = "delta"];
  if (!this->_internal_delta().empty()) {
    const std::string& _s = this->_internal_delta();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.delta");
    target = stream->WriteStringMaybeAliased(37, _s, target);
  }

  // string gamma = 38 [json_name = "gamma"];
  if (!this->_internal_gamma().empty()) {
    const std::string& _s = this->_internal_gamma();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.gamma");
    target = stream->WriteStringMaybeAliased(38, _s, target);
  }

  // string theta = 39 [json_name = "theta"];
  if (!this->_internal_theta().empty()) {
    const std::string& _s = this->_internal_theta();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.theta");
    target = stream->WriteStringMaybeAliased(39, _s, target);
  }

  // string vega = 40 [json_name = "vega"];
  if (!this->_internal_vega().empty()) {
    const std::string& _s = this->_internal_vega();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.vega");
    target = stream->WriteStringMaybeAliased(40, _s, target);
  }

  // string rho = 41 [json_name = "rho"];
  if (!this->_internal_rho().empty()) {
    const std::string& _s = this->_internal_rho();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityCalcIndex.rho");
    target = stream->WriteStringMaybeAliased(41, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityCalcIndex)
  return target;
}

::size_t SecurityCalcIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityCalcIndex)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  // string last_done = 2 [json_name = "lastDone"];
  if (!this->_internal_last_done().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_last_done());
  }

  // string change_val = 3 [json_name = "changeVal"];
  if (!this->_internal_change_val().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_change_val());
  }

  // string change_rate = 4 [json_name = "changeRate"];
  if (!this->_internal_change_rate().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_change_rate());
  }

  // string turnover = 6 [json_name = "turnover"];
  if (!this->_internal_turnover().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_turnover());
  }

  // string ytd_change_rate = 7 [json_name = "ytdChangeRate"];
  if (!this->_internal_ytd_change_rate().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ytd_change_rate());
  }

  // string turnover_rate = 8 [json_name = "turnoverRate"];
  if (!this->_internal_turnover_rate().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_turnover_rate());
  }

  // string total_market_value = 9 [json_name = "totalMarketValue"];
  if (!this->_internal_total_market_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_total_market_value());
  }

  // string capital_flow = 10 [json_name = "capitalFlow"];
  if (!this->_internal_capital_flow().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_capital_flow());
  }

  // string amplitude = 11 [json_name = "amplitude"];
  if (!this->_internal_amplitude().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_amplitude());
  }

  // string volume_ratio = 12 [json_name = "volumeRatio"];
  if (!this->_internal_volume_ratio().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_volume_ratio());
  }

  // string pe_ttm_ratio = 13 [json_name = "peTtmRatio"];
  if (!this->_internal_pe_ttm_ratio().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_pe_ttm_ratio());
  }

  // string pb_ratio = 14 [json_name = "pbRatio"];
  if (!this->_internal_pb_ratio().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_pb_ratio());
  }

  // string dividend_ratio_ttm = 15 [json_name = "dividendRatioTtm"];
  if (!this->_internal_dividend_ratio_ttm().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dividend_ratio_ttm());
  }

  // string five_day_change_rate = 16 [json_name = "fiveDayChangeRate"];
  if (!this->_internal_five_day_change_rate().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_five_day_change_rate());
  }

  // string ten_day_change_rate = 17 [json_name = "tenDayChangeRate"];
  if (!this->_internal_ten_day_change_rate().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ten_day_change_rate());
  }

  // string half_year_change_rate = 18 [json_name = "halfYearChangeRate"];
  if (!this->_internal_half_year_change_rate().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_half_year_change_rate());
  }

  // string five_minutes_change_rate = 19 [json_name = "fiveMinutesChangeRate"];
  if (!this->_internal_five_minutes_change_rate().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_five_minutes_change_rate());
  }

  // string expiry_date = 20 [json_name = "expiryDate"];
  if (!this->_internal_expiry_date().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_expiry_date());
  }

  // string strike_price = 21 [json_name = "strikePrice"];
  if (!this->_internal_strike_price().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_strike_price());
  }

  // string upper_strike_price = 22 [json_name = "upperStrikePrice"];
  if (!this->_internal_upper_strike_price().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_upper_strike_price());
  }

  // string lower_strike_price = 23 [json_name = "lowerStrikePrice"];
  if (!this->_internal_lower_strike_price().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_lower_strike_price());
  }

  // string outstanding_ratio = 25 [json_name = "outstandingRatio"];
  if (!this->_internal_outstanding_ratio().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_outstanding_ratio());
  }

  // string premium = 26 [json_name = "premium"];
  if (!this->_internal_premium().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_premium());
  }

  // string itm_otm = 27 [json_name = "itmOtm"];
  if (!this->_internal_itm_otm().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_itm_otm());
  }

  // string implied_volatility = 28 [json_name = "impliedVolatility"];
  if (!this->_internal_implied_volatility().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_implied_volatility());
  }

  // string warrant_delta = 29 [json_name = "warrantDelta"];
  if (!this->_internal_warrant_delta().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_warrant_delta());
  }

  // string call_price = 30 [json_name = "callPrice"];
  if (!this->_internal_call_price().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_call_price());
  }

  // string to_call_price = 31 [json_name = "toCallPrice"];
  if (!this->_internal_to_call_price().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_to_call_price());
  }

  // string effective_leverage = 32 [json_name = "effectiveLeverage"];
  if (!this->_internal_effective_leverage().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_effective_leverage());
  }

  // string leverage_ratio = 33 [json_name = "leverageRatio"];
  if (!this->_internal_leverage_ratio().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_leverage_ratio());
  }

  // string conversion_ratio = 34 [json_name = "conversionRatio"];
  if (!this->_internal_conversion_ratio().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_conversion_ratio());
  }

  // string balance_point = 35 [json_name = "balancePoint"];
  if (!this->_internal_balance_point().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_balance_point());
  }

  // string delta = 37 [json_name = "delta"];
  if (!this->_internal_delta().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_delta());
  }

  // string gamma = 38 [json_name = "gamma"];
  if (!this->_internal_gamma().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_gamma());
  }

  // string theta = 39 [json_name = "theta"];
  if (!this->_internal_theta().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_theta());
  }

  // string vega = 40 [json_name = "vega"];
  if (!this->_internal_vega().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_vega());
  }

  // string rho = 41 [json_name = "rho"];
  if (!this->_internal_rho().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_rho());
  }

  // int64 volume = 5 [json_name = "volume"];
  if (this->_internal_volume() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_volume());
  }

  // int64 outstanding_qty = 24 [json_name = "outstandingQty"];
  if (this->_internal_outstanding_qty() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                    this->_internal_outstanding_qty());
  }

  // int64 open_interest = 36 [json_name = "openInterest"];
  if (this->_internal_open_interest() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                    this->_internal_open_interest());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityCalcIndex::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityCalcIndex::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityCalcIndex::GetClassData() const { return &_class_data_; }


void SecurityCalcIndex::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityCalcIndex*>(&to_msg);
  auto& from = static_cast<const SecurityCalcIndex&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityCalcIndex)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  if (!from._internal_last_done().empty()) {
    _this->_internal_set_last_done(from._internal_last_done());
  }
  if (!from._internal_change_val().empty()) {
    _this->_internal_set_change_val(from._internal_change_val());
  }
  if (!from._internal_change_rate().empty()) {
    _this->_internal_set_change_rate(from._internal_change_rate());
  }
  if (!from._internal_turnover().empty()) {
    _this->_internal_set_turnover(from._internal_turnover());
  }
  if (!from._internal_ytd_change_rate().empty()) {
    _this->_internal_set_ytd_change_rate(from._internal_ytd_change_rate());
  }
  if (!from._internal_turnover_rate().empty()) {
    _this->_internal_set_turnover_rate(from._internal_turnover_rate());
  }
  if (!from._internal_total_market_value().empty()) {
    _this->_internal_set_total_market_value(from._internal_total_market_value());
  }
  if (!from._internal_capital_flow().empty()) {
    _this->_internal_set_capital_flow(from._internal_capital_flow());
  }
  if (!from._internal_amplitude().empty()) {
    _this->_internal_set_amplitude(from._internal_amplitude());
  }
  if (!from._internal_volume_ratio().empty()) {
    _this->_internal_set_volume_ratio(from._internal_volume_ratio());
  }
  if (!from._internal_pe_ttm_ratio().empty()) {
    _this->_internal_set_pe_ttm_ratio(from._internal_pe_ttm_ratio());
  }
  if (!from._internal_pb_ratio().empty()) {
    _this->_internal_set_pb_ratio(from._internal_pb_ratio());
  }
  if (!from._internal_dividend_ratio_ttm().empty()) {
    _this->_internal_set_dividend_ratio_ttm(from._internal_dividend_ratio_ttm());
  }
  if (!from._internal_five_day_change_rate().empty()) {
    _this->_internal_set_five_day_change_rate(from._internal_five_day_change_rate());
  }
  if (!from._internal_ten_day_change_rate().empty()) {
    _this->_internal_set_ten_day_change_rate(from._internal_ten_day_change_rate());
  }
  if (!from._internal_half_year_change_rate().empty()) {
    _this->_internal_set_half_year_change_rate(from._internal_half_year_change_rate());
  }
  if (!from._internal_five_minutes_change_rate().empty()) {
    _this->_internal_set_five_minutes_change_rate(from._internal_five_minutes_change_rate());
  }
  if (!from._internal_expiry_date().empty()) {
    _this->_internal_set_expiry_date(from._internal_expiry_date());
  }
  if (!from._internal_strike_price().empty()) {
    _this->_internal_set_strike_price(from._internal_strike_price());
  }
  if (!from._internal_upper_strike_price().empty()) {
    _this->_internal_set_upper_strike_price(from._internal_upper_strike_price());
  }
  if (!from._internal_lower_strike_price().empty()) {
    _this->_internal_set_lower_strike_price(from._internal_lower_strike_price());
  }
  if (!from._internal_outstanding_ratio().empty()) {
    _this->_internal_set_outstanding_ratio(from._internal_outstanding_ratio());
  }
  if (!from._internal_premium().empty()) {
    _this->_internal_set_premium(from._internal_premium());
  }
  if (!from._internal_itm_otm().empty()) {
    _this->_internal_set_itm_otm(from._internal_itm_otm());
  }
  if (!from._internal_implied_volatility().empty()) {
    _this->_internal_set_implied_volatility(from._internal_implied_volatility());
  }
  if (!from._internal_warrant_delta().empty()) {
    _this->_internal_set_warrant_delta(from._internal_warrant_delta());
  }
  if (!from._internal_call_price().empty()) {
    _this->_internal_set_call_price(from._internal_call_price());
  }
  if (!from._internal_to_call_price().empty()) {
    _this->_internal_set_to_call_price(from._internal_to_call_price());
  }
  if (!from._internal_effective_leverage().empty()) {
    _this->_internal_set_effective_leverage(from._internal_effective_leverage());
  }
  if (!from._internal_leverage_ratio().empty()) {
    _this->_internal_set_leverage_ratio(from._internal_leverage_ratio());
  }
  if (!from._internal_conversion_ratio().empty()) {
    _this->_internal_set_conversion_ratio(from._internal_conversion_ratio());
  }
  if (!from._internal_balance_point().empty()) {
    _this->_internal_set_balance_point(from._internal_balance_point());
  }
  if (!from._internal_delta().empty()) {
    _this->_internal_set_delta(from._internal_delta());
  }
  if (!from._internal_gamma().empty()) {
    _this->_internal_set_gamma(from._internal_gamma());
  }
  if (!from._internal_theta().empty()) {
    _this->_internal_set_theta(from._internal_theta());
  }
  if (!from._internal_vega().empty()) {
    _this->_internal_set_vega(from._internal_vega());
  }
  if (!from._internal_rho().empty()) {
    _this->_internal_set_rho(from._internal_rho());
  }
  if (from._internal_volume() != 0) {
    _this->_internal_set_volume(from._internal_volume());
  }
  if (from._internal_outstanding_qty() != 0) {
    _this->_internal_set_outstanding_qty(from._internal_outstanding_qty());
  }
  if (from._internal_open_interest() != 0) {
    _this->_internal_set_open_interest(from._internal_open_interest());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityCalcIndex::CopyFrom(const SecurityCalcIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityCalcIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityCalcIndex::IsInitialized() const {
  return true;
}

void SecurityCalcIndex::InternalSwap(SecurityCalcIndex* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_done_, lhs_arena,
                                       &other->_impl_.last_done_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.change_val_, lhs_arena,
                                       &other->_impl_.change_val_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.change_rate_, lhs_arena,
                                       &other->_impl_.change_rate_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.turnover_, lhs_arena,
                                       &other->_impl_.turnover_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ytd_change_rate_, lhs_arena,
                                       &other->_impl_.ytd_change_rate_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.turnover_rate_, lhs_arena,
                                       &other->_impl_.turnover_rate_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.total_market_value_, lhs_arena,
                                       &other->_impl_.total_market_value_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.capital_flow_, lhs_arena,
                                       &other->_impl_.capital_flow_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.amplitude_, lhs_arena,
                                       &other->_impl_.amplitude_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.volume_ratio_, lhs_arena,
                                       &other->_impl_.volume_ratio_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pe_ttm_ratio_, lhs_arena,
                                       &other->_impl_.pe_ttm_ratio_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pb_ratio_, lhs_arena,
                                       &other->_impl_.pb_ratio_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dividend_ratio_ttm_, lhs_arena,
                                       &other->_impl_.dividend_ratio_ttm_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.five_day_change_rate_, lhs_arena,
                                       &other->_impl_.five_day_change_rate_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ten_day_change_rate_, lhs_arena,
                                       &other->_impl_.ten_day_change_rate_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.half_year_change_rate_, lhs_arena,
                                       &other->_impl_.half_year_change_rate_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.five_minutes_change_rate_, lhs_arena,
                                       &other->_impl_.five_minutes_change_rate_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expiry_date_, lhs_arena,
                                       &other->_impl_.expiry_date_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.strike_price_, lhs_arena,
                                       &other->_impl_.strike_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.upper_strike_price_, lhs_arena,
                                       &other->_impl_.upper_strike_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.lower_strike_price_, lhs_arena,
                                       &other->_impl_.lower_strike_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.outstanding_ratio_, lhs_arena,
                                       &other->_impl_.outstanding_ratio_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.premium_, lhs_arena,
                                       &other->_impl_.premium_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.itm_otm_, lhs_arena,
                                       &other->_impl_.itm_otm_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.implied_volatility_, lhs_arena,
                                       &other->_impl_.implied_volatility_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.warrant_delta_, lhs_arena,
                                       &other->_impl_.warrant_delta_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.call_price_, lhs_arena,
                                       &other->_impl_.call_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.to_call_price_, lhs_arena,
                                       &other->_impl_.to_call_price_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.effective_leverage_, lhs_arena,
                                       &other->_impl_.effective_leverage_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.leverage_ratio_, lhs_arena,
                                       &other->_impl_.leverage_ratio_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.conversion_ratio_, lhs_arena,
                                       &other->_impl_.conversion_ratio_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.balance_point_, lhs_arena,
                                       &other->_impl_.balance_point_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delta_, lhs_arena,
                                       &other->_impl_.delta_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gamma_, lhs_arena,
                                       &other->_impl_.gamma_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.theta_, lhs_arena,
                                       &other->_impl_.theta_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vega_, lhs_arena,
                                       &other->_impl_.vega_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rho_, lhs_arena,
                                       &other->_impl_.rho_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.open_interest_)
      + sizeof(SecurityCalcIndex::_impl_.open_interest_)
      - PROTOBUF_FIELD_OFFSET(SecurityCalcIndex, _impl_.volume_)>(
          reinterpret_cast<char*>(&_impl_.volume_),
          reinterpret_cast<char*>(&other->_impl_.volume_));
}

::google::protobuf::Metadata SecurityCalcIndex::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[59]);
}
// ===================================================================

class SecurityCalcQuoteResponse::_Internal {
 public:
};

SecurityCalcQuoteResponse::SecurityCalcQuoteResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityCalcQuoteResponse)
}
SecurityCalcQuoteResponse::SecurityCalcQuoteResponse(const SecurityCalcQuoteResponse& from) : ::google::protobuf::Message() {
  SecurityCalcQuoteResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.security_calc_index_){from._impl_.security_calc_index_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityCalcQuoteResponse)
}
inline void SecurityCalcQuoteResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.security_calc_index_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SecurityCalcQuoteResponse::~SecurityCalcQuoteResponse() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityCalcQuoteResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityCalcQuoteResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.security_calc_index_.~RepeatedPtrField();
}
void SecurityCalcQuoteResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityCalcQuoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityCalcQuoteResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_security_calc_index()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityCalcQuoteResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SecurityCalcQuoteResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SecurityCalcQuoteResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .longportapp.quote.v1.SecurityCalcIndex security_calc_index = 1 [json_name = "securityCalcIndex"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityCalcQuoteResponse, _impl_.security_calc_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .longportapp.quote.v1.SecurityCalcIndex security_calc_index = 1 [json_name = "securityCalcIndex"];
    {PROTOBUF_FIELD_OFFSET(SecurityCalcQuoteResponse, _impl_.security_calc_index_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::SecurityCalcIndex>()},
  }}, {{
  }},
};

::uint8_t* SecurityCalcQuoteResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityCalcQuoteResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .longportapp.quote.v1.SecurityCalcIndex security_calc_index = 1 [json_name = "securityCalcIndex"];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_security_calc_index_size()); i < n; i++) {
    const auto& repfield = this->_internal_security_calc_index().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityCalcQuoteResponse)
  return target;
}

::size_t SecurityCalcQuoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityCalcQuoteResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .longportapp.quote.v1.SecurityCalcIndex security_calc_index = 1 [json_name = "securityCalcIndex"];
  total_size += 1UL * this->_internal_security_calc_index_size();
  for (const auto& msg : this->_internal_security_calc_index()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityCalcQuoteResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityCalcQuoteResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityCalcQuoteResponse::GetClassData() const { return &_class_data_; }


void SecurityCalcQuoteResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityCalcQuoteResponse*>(&to_msg);
  auto& from = static_cast<const SecurityCalcQuoteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityCalcQuoteResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_security_calc_index()->MergeFrom(from._internal_security_calc_index());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityCalcQuoteResponse::CopyFrom(const SecurityCalcQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityCalcQuoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityCalcQuoteResponse::IsInitialized() const {
  return true;
}

void SecurityCalcQuoteResponse::InternalSwap(SecurityCalcQuoteResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.security_calc_index_.InternalSwap(&other->_impl_.security_calc_index_);
}

::google::protobuf::Metadata SecurityCalcQuoteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[60]);
}
// ===================================================================

class SecurityHistoryCandlestickRequest_OffsetQuery::_Internal {
 public:
};

SecurityHistoryCandlestickRequest_OffsetQuery::SecurityHistoryCandlestickRequest_OffsetQuery(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery)
}
SecurityHistoryCandlestickRequest_OffsetQuery::SecurityHistoryCandlestickRequest_OffsetQuery(const SecurityHistoryCandlestickRequest_OffsetQuery& from) : ::google::protobuf::Message() {
  SecurityHistoryCandlestickRequest_OffsetQuery* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.date_){},
      decltype(_impl_.minute_){},
      decltype(_impl_.direction_){},
      decltype(_impl_.count_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_date().empty()) {
    _this->_impl_.date_.Set(from._internal_date(), _this->GetArenaForAllocation());
  }
  _impl_.minute_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.minute_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_minute().empty()) {
    _this->_impl_.minute_.Set(from._internal_minute(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.direction_, &from._impl_.direction_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.count_) -
    reinterpret_cast<char*>(&_impl_.direction_)) + sizeof(_impl_.count_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery)
}
inline void SecurityHistoryCandlestickRequest_OffsetQuery::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.date_){},
      decltype(_impl_.minute_){},
      decltype(_impl_.direction_){0},
      decltype(_impl_.count_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.minute_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.minute_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SecurityHistoryCandlestickRequest_OffsetQuery::~SecurityHistoryCandlestickRequest_OffsetQuery() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityHistoryCandlestickRequest_OffsetQuery::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.date_.Destroy();
  _impl_.minute_.Destroy();
}
void SecurityHistoryCandlestickRequest_OffsetQuery::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityHistoryCandlestickRequest_OffsetQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.date_.ClearToEmpty();
  _impl_.minute_.ClearToEmpty();
  ::memset(&_impl_.direction_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.count_) -
      reinterpret_cast<char*>(&_impl_.direction_)) + sizeof(_impl_.count_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityHistoryCandlestickRequest_OffsetQuery::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 85, 2> SecurityHistoryCandlestickRequest_OffsetQuery::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SecurityHistoryCandlestickRequest_OffsetQuery_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 count = 4 [json_name = "count"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.count_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.count_)}},
    // .longportapp.quote.v1.Direction direction = 1 [json_name = "direction"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.direction_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.direction_)}},
    // string date = 2 [json_name = "date"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.date_)}},
    // string minute = 3 [json_name = "minute"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.minute_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .longportapp.quote.v1.Direction direction = 1 [json_name = "direction"];
    {PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.direction_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string date = 2 [json_name = "date"];
    {PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string minute = 3 [json_name = "minute"];
    {PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.minute_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 count = 4 [json_name = "count"];
    {PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\102\0\4\6\0\0\0\0"
    "longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery"
    "date"
    "minute"
  }},
};

::uint8_t* SecurityHistoryCandlestickRequest_OffsetQuery::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .longportapp.quote.v1.Direction direction = 1 [json_name = "direction"];
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_direction(), target);
  }

  // string date = 2 [json_name = "date"];
  if (!this->_internal_date().empty()) {
    const std::string& _s = this->_internal_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery.date");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string minute = 3 [json_name = "minute"];
  if (!this->_internal_minute().empty()) {
    const std::string& _s = this->_internal_minute();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery.minute");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 count = 4 [json_name = "count"];
  if (this->_internal_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery)
  return target;
}

::size_t SecurityHistoryCandlestickRequest_OffsetQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string date = 2 [json_name = "date"];
  if (!this->_internal_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_date());
  }

  // string minute = 3 [json_name = "minute"];
  if (!this->_internal_minute().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_minute());
  }

  // .longportapp.quote.v1.Direction direction = 1 [json_name = "direction"];
  if (this->_internal_direction() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_direction());
  }

  // int32 count = 4 [json_name = "count"];
  if (this->_internal_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityHistoryCandlestickRequest_OffsetQuery::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityHistoryCandlestickRequest_OffsetQuery::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityHistoryCandlestickRequest_OffsetQuery::GetClassData() const { return &_class_data_; }


void SecurityHistoryCandlestickRequest_OffsetQuery::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityHistoryCandlestickRequest_OffsetQuery*>(&to_msg);
  auto& from = static_cast<const SecurityHistoryCandlestickRequest_OffsetQuery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_date().empty()) {
    _this->_internal_set_date(from._internal_date());
  }
  if (!from._internal_minute().empty()) {
    _this->_internal_set_minute(from._internal_minute());
  }
  if (from._internal_direction() != 0) {
    _this->_internal_set_direction(from._internal_direction());
  }
  if (from._internal_count() != 0) {
    _this->_internal_set_count(from._internal_count());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityHistoryCandlestickRequest_OffsetQuery::CopyFrom(const SecurityHistoryCandlestickRequest_OffsetQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityHistoryCandlestickRequest_OffsetQuery::IsInitialized() const {
  return true;
}

void SecurityHistoryCandlestickRequest_OffsetQuery::InternalSwap(SecurityHistoryCandlestickRequest_OffsetQuery* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.date_, lhs_arena,
                                       &other->_impl_.date_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.minute_, lhs_arena,
                                       &other->_impl_.minute_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.count_)
      + sizeof(SecurityHistoryCandlestickRequest_OffsetQuery::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest_OffsetQuery, _impl_.direction_)>(
          reinterpret_cast<char*>(&_impl_.direction_),
          reinterpret_cast<char*>(&other->_impl_.direction_));
}

::google::protobuf::Metadata SecurityHistoryCandlestickRequest_OffsetQuery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[61]);
}
// ===================================================================

class SecurityHistoryCandlestickRequest_DateQuery::_Internal {
 public:
};

SecurityHistoryCandlestickRequest_DateQuery::SecurityHistoryCandlestickRequest_DateQuery(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery)
}
SecurityHistoryCandlestickRequest_DateQuery::SecurityHistoryCandlestickRequest_DateQuery(const SecurityHistoryCandlestickRequest_DateQuery& from) : ::google::protobuf::Message() {
  SecurityHistoryCandlestickRequest_DateQuery* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.start_date_){},
      decltype(_impl_.end_date_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.start_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.start_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_start_date().empty()) {
    _this->_impl_.start_date_.Set(from._internal_start_date(), _this->GetArenaForAllocation());
  }
  _impl_.end_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.end_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_end_date().empty()) {
    _this->_impl_.end_date_.Set(from._internal_end_date(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery)
}
inline void SecurityHistoryCandlestickRequest_DateQuery::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.start_date_){},
      decltype(_impl_.end_date_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.start_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.start_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.end_date_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.end_date_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SecurityHistoryCandlestickRequest_DateQuery::~SecurityHistoryCandlestickRequest_DateQuery() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityHistoryCandlestickRequest_DateQuery::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.start_date_.Destroy();
  _impl_.end_date_.Destroy();
}
void SecurityHistoryCandlestickRequest_DateQuery::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityHistoryCandlestickRequest_DateQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.start_date_.ClearToEmpty();
  _impl_.end_date_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityHistoryCandlestickRequest_DateQuery::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 91, 2> SecurityHistoryCandlestickRequest_DateQuery::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SecurityHistoryCandlestickRequest_DateQuery_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string end_date = 2 [json_name = "endDate"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest_DateQuery, _impl_.end_date_)}},
    // string start_date = 1 [json_name = "startDate"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest_DateQuery, _impl_.start_date_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string start_date = 1 [json_name = "startDate"];
    {PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest_DateQuery, _impl_.start_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string end_date = 2 [json_name = "endDate"];
    {PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest_DateQuery, _impl_.end_date_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\100\12\10\0\0\0\0\0"
    "longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery"
    "start_date"
    "end_date"
  }},
};

::uint8_t* SecurityHistoryCandlestickRequest_DateQuery::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string start_date = 1 [json_name = "startDate"];
  if (!this->_internal_start_date().empty()) {
    const std::string& _s = this->_internal_start_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery.start_date");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string end_date = 2 [json_name = "endDate"];
  if (!this->_internal_end_date().empty()) {
    const std::string& _s = this->_internal_end_date();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery.end_date");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery)
  return target;
}

::size_t SecurityHistoryCandlestickRequest_DateQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string start_date = 1 [json_name = "startDate"];
  if (!this->_internal_start_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_start_date());
  }

  // string end_date = 2 [json_name = "endDate"];
  if (!this->_internal_end_date().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_end_date());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityHistoryCandlestickRequest_DateQuery::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityHistoryCandlestickRequest_DateQuery::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityHistoryCandlestickRequest_DateQuery::GetClassData() const { return &_class_data_; }


void SecurityHistoryCandlestickRequest_DateQuery::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityHistoryCandlestickRequest_DateQuery*>(&to_msg);
  auto& from = static_cast<const SecurityHistoryCandlestickRequest_DateQuery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_start_date().empty()) {
    _this->_internal_set_start_date(from._internal_start_date());
  }
  if (!from._internal_end_date().empty()) {
    _this->_internal_set_end_date(from._internal_end_date());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityHistoryCandlestickRequest_DateQuery::CopyFrom(const SecurityHistoryCandlestickRequest_DateQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityHistoryCandlestickRequest_DateQuery::IsInitialized() const {
  return true;
}

void SecurityHistoryCandlestickRequest_DateQuery::InternalSwap(SecurityHistoryCandlestickRequest_DateQuery* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.start_date_, lhs_arena,
                                       &other->_impl_.start_date_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.end_date_, lhs_arena,
                                       &other->_impl_.end_date_, rhs_arena);
}

::google::protobuf::Metadata SecurityHistoryCandlestickRequest_DateQuery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[62]);
}
// ===================================================================

class SecurityHistoryCandlestickRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<SecurityHistoryCandlestickRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_._has_bits_);
  static const ::longportapp::quote::v1::SecurityHistoryCandlestickRequest_OffsetQuery& offset_request(const SecurityHistoryCandlestickRequest* msg);
  static void set_has_offset_request(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::longportapp::quote::v1::SecurityHistoryCandlestickRequest_DateQuery& date_request(const SecurityHistoryCandlestickRequest* msg);
  static void set_has_date_request(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::longportapp::quote::v1::SecurityHistoryCandlestickRequest_OffsetQuery& SecurityHistoryCandlestickRequest::_Internal::offset_request(const SecurityHistoryCandlestickRequest* msg) {
  return *msg->_impl_.offset_request_;
}
const ::longportapp::quote::v1::SecurityHistoryCandlestickRequest_DateQuery& SecurityHistoryCandlestickRequest::_Internal::date_request(const SecurityHistoryCandlestickRequest* msg) {
  return *msg->_impl_.date_request_;
}
SecurityHistoryCandlestickRequest::SecurityHistoryCandlestickRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:longportapp.quote.v1.SecurityHistoryCandlestickRequest)
}
SecurityHistoryCandlestickRequest::SecurityHistoryCandlestickRequest(const SecurityHistoryCandlestickRequest& from) : ::google::protobuf::Message() {
  SecurityHistoryCandlestickRequest* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.symbol_){},
      decltype(_impl_.offset_request_){nullptr},
      decltype(_impl_.date_request_){nullptr},
      decltype(_impl_.period_){},
      decltype(_impl_.adjust_type_){},
      decltype(_impl_.query_type_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_symbol().empty()) {
    _this->_impl_.symbol_.Set(from._internal_symbol(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.offset_request_ = new ::longportapp::quote::v1::SecurityHistoryCandlestickRequest_OffsetQuery(*from._impl_.offset_request_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.date_request_ = new ::longportapp::quote::v1::SecurityHistoryCandlestickRequest_DateQuery(*from._impl_.date_request_);
  }
  ::memcpy(&_impl_.period_, &from._impl_.period_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.query_type_) -
    reinterpret_cast<char*>(&_impl_.period_)) + sizeof(_impl_.query_type_));

  // @@protoc_insertion_point(copy_constructor:longportapp.quote.v1.SecurityHistoryCandlestickRequest)
}
inline void SecurityHistoryCandlestickRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.symbol_){},
      decltype(_impl_.offset_request_){nullptr},
      decltype(_impl_.date_request_){nullptr},
      decltype(_impl_.period_){0},
      decltype(_impl_.adjust_type_){0},
      decltype(_impl_.query_type_){0},
  };
  _impl_.symbol_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.symbol_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
SecurityHistoryCandlestickRequest::~SecurityHistoryCandlestickRequest() {
  // @@protoc_insertion_point(destructor:longportapp.quote.v1.SecurityHistoryCandlestickRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SecurityHistoryCandlestickRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.symbol_.Destroy();
  if (this != internal_default_instance()) delete _impl_.offset_request_;
  if (this != internal_default_instance()) delete _impl_.date_request_;
}
void SecurityHistoryCandlestickRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SecurityHistoryCandlestickRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.symbol_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.offset_request_ != nullptr);
      _impl_.offset_request_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.date_request_ != nullptr);
      _impl_.date_request_->Clear();
    }
  }
  ::memset(&_impl_.period_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.query_type_) -
      reinterpret_cast<char*>(&_impl_.period_)) + sizeof(_impl_.query_type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SecurityHistoryCandlestickRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 69, 2> SecurityHistoryCandlestickRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SecurityHistoryCandlestickRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string symbol = 1 [json_name = "symbol"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_.symbol_)}},
    // .longportapp.quote.v1.Period period = 2 [json_name = "period"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SecurityHistoryCandlestickRequest, _impl_.period_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_.period_)}},
    // .longportapp.quote.v1.AdjustType adjust_type = 3 [json_name = "adjustType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SecurityHistoryCandlestickRequest, _impl_.adjust_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_.adjust_type_)}},
    // .longportapp.quote.v1.HistoryCandlestickQueryType query_type = 4 [json_name = "queryType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SecurityHistoryCandlestickRequest, _impl_.query_type_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_.query_type_)}},
    // .longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery offset_request = 5 [json_name = "offsetRequest"];
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_.offset_request_)}},
    // .longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery date_request = 6 [json_name = "dateRequest"];
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_.date_request_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1 [json_name = "symbol"];
    {PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_.symbol_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .longportapp.quote.v1.Period period = 2 [json_name = "period"];
    {PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_.period_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .longportapp.quote.v1.AdjustType adjust_type = 3 [json_name = "adjustType"];
    {PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_.adjust_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .longportapp.quote.v1.HistoryCandlestickQueryType query_type = 4 [json_name = "queryType"];
    {PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_.query_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery offset_request = 5 [json_name = "offsetRequest"];
    {PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_.offset_request_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery date_request = 6 [json_name = "dateRequest"];
    {PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_.date_request_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::SecurityHistoryCandlestickRequest_OffsetQuery>()},
    {::_pbi::TcParser::GetTable<::longportapp::quote::v1::SecurityHistoryCandlestickRequest_DateQuery>()},
  }}, {{
    "\66\6\0\0\0\0\0\0"
    "longportapp.quote.v1.SecurityHistoryCandlestickRequest"
    "symbol"
  }},
};

::uint8_t* SecurityHistoryCandlestickRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    const std::string& _s = this->_internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "longportapp.quote.v1.SecurityHistoryCandlestickRequest.symbol");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .longportapp.quote.v1.Period period = 2 [json_name = "period"];
  if (this->_internal_period() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_period(), target);
  }

  // .longportapp.quote.v1.AdjustType adjust_type = 3 [json_name = "adjustType"];
  if (this->_internal_adjust_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_adjust_type(), target);
  }

  // .longportapp.quote.v1.HistoryCandlestickQueryType query_type = 4 [json_name = "queryType"];
  if (this->_internal_query_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_query_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery offset_request = 5 [json_name = "offsetRequest"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::offset_request(this),
        _Internal::offset_request(this).GetCachedSize(), target, stream);
  }

  // .longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery date_request = 6 [json_name = "dateRequest"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::date_request(this),
        _Internal::date_request(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:longportapp.quote.v1.SecurityHistoryCandlestickRequest)
  return target;
}

::size_t SecurityHistoryCandlestickRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string symbol = 1 [json_name = "symbol"];
  if (!this->_internal_symbol().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_symbol());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .longportapp.quote.v1.SecurityHistoryCandlestickRequest.OffsetQuery offset_request = 5 [json_name = "offsetRequest"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.offset_request_);
    }

    // .longportapp.quote.v1.SecurityHistoryCandlestickRequest.DateQuery date_request = 6 [json_name = "dateRequest"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.date_request_);
    }

  }
  // .longportapp.quote.v1.Period period = 2 [json_name = "period"];
  if (this->_internal_period() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_period());
  }

  // .longportapp.quote.v1.AdjustType adjust_type = 3 [json_name = "adjustType"];
  if (this->_internal_adjust_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_adjust_type());
  }

  // .longportapp.quote.v1.HistoryCandlestickQueryType query_type = 4 [json_name = "queryType"];
  if (this->_internal_query_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_query_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SecurityHistoryCandlestickRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SecurityHistoryCandlestickRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SecurityHistoryCandlestickRequest::GetClassData() const { return &_class_data_; }


void SecurityHistoryCandlestickRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SecurityHistoryCandlestickRequest*>(&to_msg);
  auto& from = static_cast<const SecurityHistoryCandlestickRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_symbol().empty()) {
    _this->_internal_set_symbol(from._internal_symbol());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_offset_request()->::longportapp::quote::v1::SecurityHistoryCandlestickRequest_OffsetQuery::MergeFrom(
          from._internal_offset_request());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_date_request()->::longportapp::quote::v1::SecurityHistoryCandlestickRequest_DateQuery::MergeFrom(
          from._internal_date_request());
    }
  }
  if (from._internal_period() != 0) {
    _this->_internal_set_period(from._internal_period());
  }
  if (from._internal_adjust_type() != 0) {
    _this->_internal_set_adjust_type(from._internal_adjust_type());
  }
  if (from._internal_query_type() != 0) {
    _this->_internal_set_query_type(from._internal_query_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SecurityHistoryCandlestickRequest::CopyFrom(const SecurityHistoryCandlestickRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:longportapp.quote.v1.SecurityHistoryCandlestickRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SecurityHistoryCandlestickRequest::IsInitialized() const {
  return true;
}

void SecurityHistoryCandlestickRequest::InternalSwap(SecurityHistoryCandlestickRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, lhs_arena,
                                       &other->_impl_.symbol_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_.query_type_)
      + sizeof(SecurityHistoryCandlestickRequest::_impl_.query_type_)
      - PROTOBUF_FIELD_OFFSET(SecurityHistoryCandlestickRequest, _impl_.offset_request_)>(
          reinterpret_cast<char*>(&_impl_.offset_request_),
          reinterpret_cast<char*>(&other->_impl_.offset_request_));
}

::google::protobuf::Metadata SecurityHistoryCandlestickRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_quote_2fapi_2eproto_getter, &descriptor_table_quote_2fapi_2eproto_once,
      file_level_metadata_quote_2fapi_2eproto[63]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace quote
}  // namespace longportapp
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
